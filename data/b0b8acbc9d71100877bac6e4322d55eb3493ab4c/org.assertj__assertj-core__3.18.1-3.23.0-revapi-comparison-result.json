[ {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===)",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL>' to 'java.util.function.Consumer<? super ACTUAL>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.nowFinal",
  "old" : "method SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>)",
  "new" : "method SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(java.util.function.Consumer<? super ACTUAL>[])",
  "name" : "method now final",
  "description" : "Method is now final.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldModifiers",
    "value" : "public"
  }, {
    "name" : "newModifiers",
    "value" : "public final"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.numberOfParametersChanged",
  "old" : "method SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>)",
  "new" : "method SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(java.util.function.Consumer<? super ACTUAL>[])",
  "name" : "number of parameters changed",
  "description" : "The number of parameters of the method have changed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.annotation.added",
  "old" : "method SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>)",
  "new" : "method SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(java.util.function.Consumer<? super ACTUAL>[])",
  "name" : "new annotation",
  "description" : "Element newly annotated with 'java.lang.SafeVarargs'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "annotationType",
    "value" : "java.lang.SafeVarargs"
  }, {
    "name" : "annotation",
    "value" : "@java.lang.SafeVarargs"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.nowFinal",
  "old" : "method SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>)",
  "new" : "method SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[])",
  "name" : "method now final",
  "description" : "Method is now final.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldModifiers",
    "value" : "public"
  }, {
    "name" : "newModifiers",
    "value" : "public final"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.numberOfParametersChanged",
  "old" : "method SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>)",
  "new" : "method SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[])",
  "name" : "number of parameters changed",
  "description" : "The number of parameters of the method have changed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.annotation.added",
  "old" : "method SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>)",
  "new" : "method SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[])",
  "name" : "new annotation",
  "description" : "Element newly annotated with 'java.lang.SafeVarargs'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "annotationType",
    "value" : "java.lang.SafeVarargs"
  }, {
    "name" : "annotation",
    "value" : "@java.lang.SafeVarargs"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractBigDecimalAssert<SELF extends org.assertj.core.api.AbstractBigDecimalAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractBigDecimalAssert<SELF extends org.assertj.core.api.AbstractBigDecimalAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.math.BigDecimal>' to 'java.util.function.Consumer<? super java.math.BigDecimal>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.math.BigDecimal>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.math.BigDecimal>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractBigDecimalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractBigDecimalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractBigDecimalAssert<SELF extends org.assertj.core.api.AbstractBigDecimalAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractBigDecimalAssert<SELF extends org.assertj.core.api.AbstractBigDecimalAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.math.BigDecimal>' to 'java.util.function.Consumer<? super java.math.BigDecimal>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.math.BigDecimal>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.math.BigDecimal>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractBigDecimalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractBigDecimalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractBigDecimalAssert<SELF extends org.assertj.core.api.AbstractBigDecimalAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractBigDecimalAssert<SELF extends org.assertj.core.api.AbstractBigDecimalAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.math.BigDecimal>' to 'org.assertj.core.api.ThrowingConsumer<? super java.math.BigDecimal>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.math.BigDecimal>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.math.BigDecimal>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractBigDecimalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractBigDecimalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractBigIntegerAssert<SELF extends org.assertj.core.api.AbstractBigIntegerAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractBigIntegerAssert<SELF extends org.assertj.core.api.AbstractBigIntegerAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.math.BigInteger>' to 'java.util.function.Consumer<? super java.math.BigInteger>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.math.BigInteger>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.math.BigInteger>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractBigIntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractBigIntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractBigIntegerAssert<SELF extends org.assertj.core.api.AbstractBigIntegerAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractBigIntegerAssert<SELF extends org.assertj.core.api.AbstractBigIntegerAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.math.BigInteger>' to 'java.util.function.Consumer<? super java.math.BigInteger>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.math.BigInteger>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.math.BigInteger>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractBigIntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractBigIntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractBigIntegerAssert<SELF extends org.assertj.core.api.AbstractBigIntegerAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractBigIntegerAssert<SELF extends org.assertj.core.api.AbstractBigIntegerAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.math.BigInteger>' to 'org.assertj.core.api.ThrowingConsumer<? super java.math.BigInteger>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.math.BigInteger>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.math.BigInteger>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractBigIntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractBigIntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractBooleanArrayAssert<SELF extends org.assertj.core.api.AbstractBooleanArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractBooleanArrayAssert<SELF extends org.assertj.core.api.AbstractBooleanArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<boolean[]>' to 'java.util.function.Consumer<? super boolean[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<boolean[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super boolean[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractBooleanArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractBooleanArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractBooleanArrayAssert<SELF extends org.assertj.core.api.AbstractBooleanArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractBooleanArrayAssert<SELF extends org.assertj.core.api.AbstractBooleanArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<boolean[]>' to 'java.util.function.Consumer<? super boolean[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<boolean[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super boolean[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractBooleanArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractBooleanArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractBooleanArrayAssert<SELF extends org.assertj.core.api.AbstractBooleanArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractBooleanArrayAssert<SELF extends org.assertj.core.api.AbstractBooleanArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<boolean[]>' to 'org.assertj.core.api.ThrowingConsumer<? super boolean[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<boolean[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super boolean[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractBooleanArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractBooleanArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractBooleanAssert<SELF extends org.assertj.core.api.AbstractBooleanAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractBooleanAssert<SELF extends org.assertj.core.api.AbstractBooleanAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Boolean>' to 'java.util.function.Consumer<? super java.lang.Boolean>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Boolean>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Boolean>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractBooleanAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractBooleanAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractBooleanAssert<SELF extends org.assertj.core.api.AbstractBooleanAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractBooleanAssert<SELF extends org.assertj.core.api.AbstractBooleanAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Boolean>' to 'java.util.function.Consumer<? super java.lang.Boolean>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Boolean>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Boolean>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractBooleanAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractBooleanAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractBooleanAssert<SELF extends org.assertj.core.api.AbstractBooleanAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractBooleanAssert<SELF extends org.assertj.core.api.AbstractBooleanAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Boolean>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Boolean>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Boolean>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Boolean>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractBooleanAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractBooleanAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractByteArrayAssert<SELF extends org.assertj.core.api.AbstractByteArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractByteArrayAssert<SELF extends org.assertj.core.api.AbstractByteArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<byte[]>' to 'java.util.function.Consumer<? super byte[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<byte[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super byte[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractByteArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractByteArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractByteArrayAssert<SELF extends org.assertj.core.api.AbstractByteArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractByteArrayAssert<SELF extends org.assertj.core.api.AbstractByteArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<byte[]>' to 'java.util.function.Consumer<? super byte[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<byte[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super byte[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractByteArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractByteArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractByteArrayAssert<SELF extends org.assertj.core.api.AbstractByteArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractByteArrayAssert<SELF extends org.assertj.core.api.AbstractByteArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<byte[]>' to 'org.assertj.core.api.ThrowingConsumer<? super byte[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<byte[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super byte[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractByteArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractByteArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractByteAssert<SELF extends org.assertj.core.api.AbstractByteAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractByteAssert<SELF extends org.assertj.core.api.AbstractByteAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Byte>' to 'java.util.function.Consumer<? super java.lang.Byte>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Byte>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Byte>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractByteAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractByteAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractByteAssert<SELF extends org.assertj.core.api.AbstractByteAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractByteAssert<SELF extends org.assertj.core.api.AbstractByteAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Byte>' to 'java.util.function.Consumer<? super java.lang.Byte>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Byte>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Byte>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractByteAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractByteAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractByteAssert<SELF extends org.assertj.core.api.AbstractByteAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractByteAssert<SELF extends org.assertj.core.api.AbstractByteAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Byte>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Byte>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Byte>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Byte>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractByteAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractByteAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractCharArrayAssert<SELF extends org.assertj.core.api.AbstractCharArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractCharArrayAssert<SELF extends org.assertj.core.api.AbstractCharArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<char[]>' to 'java.util.function.Consumer<? super char[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<char[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super char[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractCharArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractCharArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractCharArrayAssert<SELF extends org.assertj.core.api.AbstractCharArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractCharArrayAssert<SELF extends org.assertj.core.api.AbstractCharArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<char[]>' to 'java.util.function.Consumer<? super char[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<char[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super char[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractCharArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractCharArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractCharArrayAssert<SELF extends org.assertj.core.api.AbstractCharArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractCharArrayAssert<SELF extends org.assertj.core.api.AbstractCharArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<char[]>' to 'org.assertj.core.api.ThrowingConsumer<? super char[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<char[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super char[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractCharArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractCharArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractCharSequenceAssert<SELF extends org.assertj.core.api.AbstractCharSequenceAssert<SELF, ACTUAL>, ACTUAL extends java.lang.CharSequence>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractCharSequenceAssert<SELF extends org.assertj.core.api.AbstractCharSequenceAssert<SELF, ACTUAL>, ACTUAL extends java.lang.CharSequence>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.CharSequence>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.CharSequence>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.CharSequence>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.CharSequence>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractCharSequenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractCharSequenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractCharSequenceAssert<SELF extends org.assertj.core.api.AbstractCharSequenceAssert<SELF, ACTUAL>, ACTUAL extends java.lang.CharSequence>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractCharSequenceAssert<SELF extends org.assertj.core.api.AbstractCharSequenceAssert<SELF, ACTUAL>, ACTUAL extends java.lang.CharSequence>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.CharSequence>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.CharSequence>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.CharSequence>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.CharSequence>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractCharSequenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractCharSequenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractCharSequenceAssert<SELF extends org.assertj.core.api.AbstractCharSequenceAssert<SELF, ACTUAL>, ACTUAL extends java.lang.CharSequence>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractCharSequenceAssert<SELF extends org.assertj.core.api.AbstractCharSequenceAssert<SELF, ACTUAL>, ACTUAL extends java.lang.CharSequence>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.CharSequence>' to 'org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.CharSequence>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.CharSequence>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.CharSequence>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractCharSequenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractCharSequenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractCharacterAssert<SELF extends org.assertj.core.api.AbstractCharacterAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractCharacterAssert<SELF extends org.assertj.core.api.AbstractCharacterAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Character>' to 'java.util.function.Consumer<? super java.lang.Character>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Character>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Character>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractCharacterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractCharacterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractCharacterAssert<SELF extends org.assertj.core.api.AbstractCharacterAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractCharacterAssert<SELF extends org.assertj.core.api.AbstractCharacterAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Character>' to 'java.util.function.Consumer<? super java.lang.Character>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Character>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Character>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractCharacterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractCharacterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractCharacterAssert<SELF extends org.assertj.core.api.AbstractCharacterAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractCharacterAssert<SELF extends org.assertj.core.api.AbstractCharacterAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Character>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Character>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Character>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Character>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractCharacterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractCharacterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractClassAssert<SELF extends org.assertj.core.api.AbstractClassAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractClassAssert<SELF extends org.assertj.core.api.AbstractClassAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Class<?>>' to 'java.util.function.Consumer<? super java.lang.Class<?>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Class<?>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Class<?>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractClassAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractClassAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractClassAssert<SELF extends org.assertj.core.api.AbstractClassAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractClassAssert<SELF extends org.assertj.core.api.AbstractClassAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Class<?>>' to 'java.util.function.Consumer<? super java.lang.Class<?>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Class<?>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Class<?>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractClassAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractClassAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractClassAssert<SELF extends org.assertj.core.api.AbstractClassAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractClassAssert<SELF extends org.assertj.core.api.AbstractClassAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Class<?>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Class<?>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Class<?>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Class<?>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractClassAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractClassAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractComparableAssert<SELF extends org.assertj.core.api.AbstractComparableAssert<SELF, ACTUAL>, ACTUAL extends java.lang.Comparable<? super ACTUAL>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractComparableAssert<SELF extends org.assertj.core.api.AbstractComparableAssert<SELF, ACTUAL>, ACTUAL extends java.lang.Comparable<? super ACTUAL>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Comparable<? super ACTUAL>>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Comparable<? super ACTUAL>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Comparable<? super ACTUAL>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Comparable<? super ACTUAL>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractComparableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractComparableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractComparableAssert<SELF extends org.assertj.core.api.AbstractComparableAssert<SELF, ACTUAL>, ACTUAL extends java.lang.Comparable<? super ACTUAL>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractComparableAssert<SELF extends org.assertj.core.api.AbstractComparableAssert<SELF, ACTUAL>, ACTUAL extends java.lang.Comparable<? super ACTUAL>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Comparable<? super ACTUAL>>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Comparable<? super ACTUAL>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Comparable<? super ACTUAL>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Comparable<? super ACTUAL>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractComparableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractComparableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractComparableAssert<SELF extends org.assertj.core.api.AbstractComparableAssert<SELF, ACTUAL>, ACTUAL extends java.lang.Comparable<? super ACTUAL>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractComparableAssert<SELF extends org.assertj.core.api.AbstractComparableAssert<SELF, ACTUAL>, ACTUAL extends java.lang.Comparable<? super ACTUAL>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Comparable<? super ACTUAL>>' to 'org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Comparable<? super ACTUAL>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Comparable<? super ACTUAL>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Comparable<? super ACTUAL>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractComparableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractComparableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractCompletableFutureAssert<SELF extends org.assertj.core.api.AbstractCompletableFutureAssert<SELF, RESULT>, RESULT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractCompletableFutureAssert<SELF extends org.assertj.core.api.AbstractCompletableFutureAssert<SELF, RESULT>, RESULT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.CompletableFuture<RESULT>>' to 'java.util.function.Consumer<? super java.util.concurrent.CompletableFuture<RESULT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.CompletableFuture<RESULT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.CompletableFuture<RESULT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractCompletableFutureAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractCompletableFutureAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractCompletableFutureAssert<SELF extends org.assertj.core.api.AbstractCompletableFutureAssert<SELF, RESULT>, RESULT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractCompletableFutureAssert<SELF extends org.assertj.core.api.AbstractCompletableFutureAssert<SELF, RESULT>, RESULT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.CompletableFuture<RESULT>>' to 'java.util.function.Consumer<? super java.util.concurrent.CompletableFuture<RESULT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.CompletableFuture<RESULT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.CompletableFuture<RESULT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractCompletableFutureAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractCompletableFutureAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractCompletableFutureAssert<SELF extends org.assertj.core.api.AbstractCompletableFutureAssert<SELF, RESULT>, RESULT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractCompletableFutureAssert<SELF extends org.assertj.core.api.AbstractCompletableFutureAssert<SELF, RESULT>, RESULT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.CompletableFuture<RESULT>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.CompletableFuture<RESULT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.CompletableFuture<RESULT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.CompletableFuture<RESULT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractCompletableFutureAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractCompletableFutureAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractDateAssert<SELF extends org.assertj.core.api.AbstractDateAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractDateAssert<SELF extends org.assertj.core.api.AbstractDateAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Date>' to 'java.util.function.Consumer<? super java.util.Date>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Date>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Date>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractDateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractDateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractDateAssert<SELF extends org.assertj.core.api.AbstractDateAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractDateAssert<SELF extends org.assertj.core.api.AbstractDateAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Date>' to 'java.util.function.Consumer<? super java.util.Date>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Date>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Date>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractDateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractDateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractDateAssert<SELF extends org.assertj.core.api.AbstractDateAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractDateAssert<SELF extends org.assertj.core.api.AbstractDateAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Date>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.Date>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Date>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.Date>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractDateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractDateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractDoubleArrayAssert<SELF extends org.assertj.core.api.AbstractDoubleArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractDoubleArrayAssert<SELF extends org.assertj.core.api.AbstractDoubleArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<double[]>' to 'java.util.function.Consumer<? super double[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<double[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super double[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractDoubleArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractDoubleArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractDoubleArrayAssert<SELF extends org.assertj.core.api.AbstractDoubleArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractDoubleArrayAssert<SELF extends org.assertj.core.api.AbstractDoubleArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<double[]>' to 'java.util.function.Consumer<? super double[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<double[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super double[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractDoubleArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractDoubleArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractDoubleArrayAssert<SELF extends org.assertj.core.api.AbstractDoubleArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractDoubleArrayAssert<SELF extends org.assertj.core.api.AbstractDoubleArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<double[]>' to 'org.assertj.core.api.ThrowingConsumer<? super double[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<double[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super double[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractDoubleArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractDoubleArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractDoubleAssert<SELF extends org.assertj.core.api.AbstractDoubleAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractDoubleAssert<SELF extends org.assertj.core.api.AbstractDoubleAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Double>' to 'java.util.function.Consumer<? super java.lang.Double>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Double>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Double>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractDoubleAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractDoubleAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractDoubleAssert<SELF extends org.assertj.core.api.AbstractDoubleAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractDoubleAssert<SELF extends org.assertj.core.api.AbstractDoubleAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Double>' to 'java.util.function.Consumer<? super java.lang.Double>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Double>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Double>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractDoubleAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractDoubleAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractDoubleAssert<SELF extends org.assertj.core.api.AbstractDoubleAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractDoubleAssert<SELF extends org.assertj.core.api.AbstractDoubleAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Double>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Double>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Double>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Double>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractDoubleAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractDoubleAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractDurationAssert<SELF extends org.assertj.core.api.AbstractDurationAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractDurationAssert<SELF extends org.assertj.core.api.AbstractDurationAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Duration>' to 'java.util.function.Consumer<? super java.time.Duration>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Duration>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.Duration>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractDurationAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractDurationAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractDurationAssert<SELF extends org.assertj.core.api.AbstractDurationAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractDurationAssert<SELF extends org.assertj.core.api.AbstractDurationAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Duration>' to 'java.util.function.Consumer<? super java.time.Duration>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Duration>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.Duration>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractDurationAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractDurationAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractDurationAssert<SELF extends org.assertj.core.api.AbstractDurationAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractDurationAssert<SELF extends org.assertj.core.api.AbstractDurationAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Duration>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.Duration>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Duration>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.Duration>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractDurationAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractDurationAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractFloatArrayAssert<SELF extends org.assertj.core.api.AbstractFloatArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractFloatArrayAssert<SELF extends org.assertj.core.api.AbstractFloatArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<float[]>' to 'java.util.function.Consumer<? super float[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<float[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super float[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractFloatArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractFloatArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractFloatArrayAssert<SELF extends org.assertj.core.api.AbstractFloatArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractFloatArrayAssert<SELF extends org.assertj.core.api.AbstractFloatArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<float[]>' to 'java.util.function.Consumer<? super float[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<float[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super float[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractFloatArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractFloatArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractFloatArrayAssert<SELF extends org.assertj.core.api.AbstractFloatArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractFloatArrayAssert<SELF extends org.assertj.core.api.AbstractFloatArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<float[]>' to 'org.assertj.core.api.ThrowingConsumer<? super float[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<float[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super float[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractFloatArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractFloatArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractFloatAssert<SELF extends org.assertj.core.api.AbstractFloatAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractFloatAssert<SELF extends org.assertj.core.api.AbstractFloatAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Float>' to 'java.util.function.Consumer<? super java.lang.Float>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Float>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Float>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractFloatAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractFloatAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractFloatAssert<SELF extends org.assertj.core.api.AbstractFloatAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractFloatAssert<SELF extends org.assertj.core.api.AbstractFloatAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Float>' to 'java.util.function.Consumer<? super java.lang.Float>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Float>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Float>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractFloatAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractFloatAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractFloatAssert<SELF extends org.assertj.core.api.AbstractFloatAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractFloatAssert<SELF extends org.assertj.core.api.AbstractFloatAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Float>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Float>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Float>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Float>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractFloatAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractFloatAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractFutureAssert<SELF extends org.assertj.core.api.AbstractFutureAssert<SELF, ACTUAL, RESULT>, ACTUAL extends java.util.concurrent.Future<RESULT>, RESULT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractFutureAssert<SELF extends org.assertj.core.api.AbstractFutureAssert<SELF, ACTUAL, RESULT>, ACTUAL extends java.util.concurrent.Future<RESULT>, RESULT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.concurrent.Future<RESULT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.util.concurrent.Future<RESULT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.concurrent.Future<RESULT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.util.concurrent.Future<RESULT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractFutureAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractFutureAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractFutureAssert<SELF extends org.assertj.core.api.AbstractFutureAssert<SELF, ACTUAL, RESULT>, ACTUAL extends java.util.concurrent.Future<RESULT>, RESULT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractFutureAssert<SELF extends org.assertj.core.api.AbstractFutureAssert<SELF, ACTUAL, RESULT>, ACTUAL extends java.util.concurrent.Future<RESULT>, RESULT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.concurrent.Future<RESULT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.util.concurrent.Future<RESULT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.concurrent.Future<RESULT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.util.concurrent.Future<RESULT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractFutureAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractFutureAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractFutureAssert<SELF extends org.assertj.core.api.AbstractFutureAssert<SELF, ACTUAL, RESULT>, ACTUAL extends java.util.concurrent.Future<RESULT>, RESULT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractFutureAssert<SELF extends org.assertj.core.api.AbstractFutureAssert<SELF, ACTUAL, RESULT>, ACTUAL extends java.util.concurrent.Future<RESULT>, RESULT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.concurrent.Future<RESULT>>' to 'org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.util.concurrent.Future<RESULT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.concurrent.Future<RESULT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.util.concurrent.Future<RESULT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractFutureAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractFutureAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractInstantAssert<SELF extends org.assertj.core.api.AbstractInstantAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractInstantAssert<SELF extends org.assertj.core.api.AbstractInstantAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Instant>' to 'java.util.function.Consumer<? super java.time.Instant>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Instant>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.Instant>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractInstantAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractInstantAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractInstantAssert<SELF extends org.assertj.core.api.AbstractInstantAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractInstantAssert<SELF extends org.assertj.core.api.AbstractInstantAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Instant>' to 'java.util.function.Consumer<? super java.time.Instant>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Instant>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.Instant>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractInstantAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractInstantAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractInstantAssert<SELF extends org.assertj.core.api.AbstractInstantAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractInstantAssert<SELF extends org.assertj.core.api.AbstractInstantAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Instant>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.Instant>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Instant>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.Instant>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractInstantAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractInstantAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractIntArrayAssert<SELF extends org.assertj.core.api.AbstractIntArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIntArrayAssert<SELF extends org.assertj.core.api.AbstractIntArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<int[]>' to 'java.util.function.Consumer<? super int[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<int[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super int[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIntArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIntArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractIntArrayAssert<SELF extends org.assertj.core.api.AbstractIntArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIntArrayAssert<SELF extends org.assertj.core.api.AbstractIntArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<int[]>' to 'java.util.function.Consumer<? super int[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<int[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super int[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIntArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIntArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractIntArrayAssert<SELF extends org.assertj.core.api.AbstractIntArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIntArrayAssert<SELF extends org.assertj.core.api.AbstractIntArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<int[]>' to 'org.assertj.core.api.ThrowingConsumer<? super int[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<int[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super int[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIntArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIntArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractIntegerAssert<SELF extends org.assertj.core.api.AbstractIntegerAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIntegerAssert<SELF extends org.assertj.core.api.AbstractIntegerAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'java.util.function.Consumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractIntegerAssert<SELF extends org.assertj.core.api.AbstractIntegerAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIntegerAssert<SELF extends org.assertj.core.api.AbstractIntegerAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'java.util.function.Consumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractIntegerAssert<SELF extends org.assertj.core.api.AbstractIntegerAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIntegerAssert<SELF extends org.assertj.core.api.AbstractIntegerAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIterableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIterableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>' to 'org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIterableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractIterableSizeAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIterableSizeAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'java.util.function.Consumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIterableSizeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIterableSizeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractIterableSizeAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIterableSizeAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'java.util.function.Consumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIterableSizeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIterableSizeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractIterableSizeAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIterableSizeAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIterableSizeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIterableSizeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractIteratorAssert<SELF extends org.assertj.core.api.AbstractIteratorAssert<SELF, ELEMENT>, ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIteratorAssert<SELF extends org.assertj.core.api.AbstractIteratorAssert<SELF, ELEMENT>, ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Iterator<? extends ELEMENT>>' to 'java.util.function.Consumer<? super java.util.Iterator<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Iterator<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Iterator<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIteratorAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIteratorAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractIteratorAssert<SELF extends org.assertj.core.api.AbstractIteratorAssert<SELF, ELEMENT>, ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIteratorAssert<SELF extends org.assertj.core.api.AbstractIteratorAssert<SELF, ELEMENT>, ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Iterator<? extends ELEMENT>>' to 'java.util.function.Consumer<? super java.util.Iterator<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Iterator<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Iterator<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIteratorAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIteratorAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractIteratorAssert<SELF extends org.assertj.core.api.AbstractIteratorAssert<SELF, ELEMENT>, ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractIteratorAssert<SELF extends org.assertj.core.api.AbstractIteratorAssert<SELF, ELEMENT>, ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Iterator<? extends ELEMENT>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.Iterator<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Iterator<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.Iterator<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractIteratorAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractIteratorAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractListAssert<SELF extends org.assertj.core.api.AbstractListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractListAssert<SELF extends org.assertj.core.api.AbstractListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractListAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractListAssert<SELF extends org.assertj.core.api.AbstractListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractListAssert<SELF extends org.assertj.core.api.AbstractListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractListAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractListAssert<SELF extends org.assertj.core.api.AbstractListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractListAssert<SELF extends org.assertj.core.api.AbstractListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>' to 'org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractListAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractLocalDateAssert<SELF extends org.assertj.core.api.AbstractLocalDateAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLocalDateAssert<SELF extends org.assertj.core.api.AbstractLocalDateAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalDate>' to 'java.util.function.Consumer<? super java.time.LocalDate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalDate>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.LocalDate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLocalDateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLocalDateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractLocalDateAssert<SELF extends org.assertj.core.api.AbstractLocalDateAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLocalDateAssert<SELF extends org.assertj.core.api.AbstractLocalDateAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalDate>' to 'java.util.function.Consumer<? super java.time.LocalDate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalDate>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.LocalDate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLocalDateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLocalDateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractLocalDateAssert<SELF extends org.assertj.core.api.AbstractLocalDateAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLocalDateAssert<SELF extends org.assertj.core.api.AbstractLocalDateAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalDate>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.LocalDate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalDate>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.LocalDate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLocalDateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLocalDateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractLocalDateTimeAssert<SELF extends org.assertj.core.api.AbstractLocalDateTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLocalDateTimeAssert<SELF extends org.assertj.core.api.AbstractLocalDateTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalDateTime>' to 'java.util.function.Consumer<? super java.time.LocalDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalDateTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.LocalDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLocalDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLocalDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractLocalDateTimeAssert<SELF extends org.assertj.core.api.AbstractLocalDateTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLocalDateTimeAssert<SELF extends org.assertj.core.api.AbstractLocalDateTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalDateTime>' to 'java.util.function.Consumer<? super java.time.LocalDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalDateTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.LocalDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLocalDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLocalDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractLocalDateTimeAssert<SELF extends org.assertj.core.api.AbstractLocalDateTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLocalDateTimeAssert<SELF extends org.assertj.core.api.AbstractLocalDateTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalDateTime>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.LocalDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalDateTime>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.LocalDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLocalDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLocalDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractLocalTimeAssert<SELF extends org.assertj.core.api.AbstractLocalTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLocalTimeAssert<SELF extends org.assertj.core.api.AbstractLocalTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalTime>' to 'java.util.function.Consumer<? super java.time.LocalTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.LocalTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLocalTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLocalTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractLocalTimeAssert<SELF extends org.assertj.core.api.AbstractLocalTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLocalTimeAssert<SELF extends org.assertj.core.api.AbstractLocalTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalTime>' to 'java.util.function.Consumer<? super java.time.LocalTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.LocalTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLocalTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLocalTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractLocalTimeAssert<SELF extends org.assertj.core.api.AbstractLocalTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLocalTimeAssert<SELF extends org.assertj.core.api.AbstractLocalTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalTime>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.LocalTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalTime>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.LocalTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLocalTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLocalTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractLongAdderAssert<SELF extends org.assertj.core.api.AbstractLongAdderAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLongAdderAssert<SELF extends org.assertj.core.api.AbstractLongAdderAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.LongAdder>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.LongAdder>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.LongAdder>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.LongAdder>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLongAdderAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLongAdderAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractLongAdderAssert<SELF extends org.assertj.core.api.AbstractLongAdderAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLongAdderAssert<SELF extends org.assertj.core.api.AbstractLongAdderAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.LongAdder>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.LongAdder>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.LongAdder>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.LongAdder>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLongAdderAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLongAdderAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractLongAdderAssert<SELF extends org.assertj.core.api.AbstractLongAdderAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLongAdderAssert<SELF extends org.assertj.core.api.AbstractLongAdderAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.LongAdder>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.LongAdder>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.LongAdder>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.LongAdder>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLongAdderAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLongAdderAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractLongArrayAssert<SELF extends org.assertj.core.api.AbstractLongArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLongArrayAssert<SELF extends org.assertj.core.api.AbstractLongArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<long[]>' to 'java.util.function.Consumer<? super long[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<long[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super long[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLongArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLongArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractLongArrayAssert<SELF extends org.assertj.core.api.AbstractLongArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLongArrayAssert<SELF extends org.assertj.core.api.AbstractLongArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<long[]>' to 'java.util.function.Consumer<? super long[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<long[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super long[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLongArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLongArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractLongArrayAssert<SELF extends org.assertj.core.api.AbstractLongArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLongArrayAssert<SELF extends org.assertj.core.api.AbstractLongArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<long[]>' to 'org.assertj.core.api.ThrowingConsumer<? super long[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<long[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super long[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLongArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLongArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractLongAssert<SELF extends org.assertj.core.api.AbstractLongAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLongAssert<SELF extends org.assertj.core.api.AbstractLongAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Long>' to 'java.util.function.Consumer<? super java.lang.Long>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Long>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Long>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractLongAssert<SELF extends org.assertj.core.api.AbstractLongAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLongAssert<SELF extends org.assertj.core.api.AbstractLongAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Long>' to 'java.util.function.Consumer<? super java.lang.Long>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Long>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Long>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractLongAssert<SELF extends org.assertj.core.api.AbstractLongAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractLongAssert<SELF extends org.assertj.core.api.AbstractLongAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Long>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Long>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Long>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Long>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractLongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractLongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.Map<K, V>>' to 'java.util.function.Consumer<? super ACTUAL extends java.util.Map<K, V>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.Map<K, V>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.util.Map<K, V>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractMapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractMapAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.Map<K, V>>' to 'java.util.function.Consumer<? super ACTUAL extends java.util.Map<K, V>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.Map<K, V>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.util.Map<K, V>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractMapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractMapAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.Map<K, V>>' to 'org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.util.Map<K, V>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.Map<K, V>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.util.Map<K, V>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractMapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractMapAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractMapSizeAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, A, KEY, VALUE>, A extends java.util.Map<KEY, VALUE>, KEY, VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractMapSizeAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, A, KEY, VALUE>, A extends java.util.Map<KEY, VALUE>, KEY, VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'java.util.function.Consumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractMapSizeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractMapSizeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractMapSizeAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, A, KEY, VALUE>, A extends java.util.Map<KEY, VALUE>, KEY, VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractMapSizeAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, A, KEY, VALUE>, A extends java.util.Map<KEY, VALUE>, KEY, VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'java.util.function.Consumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractMapSizeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractMapSizeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractMapSizeAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, A, KEY, VALUE>, A extends java.util.Map<KEY, VALUE>, KEY, VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractMapSizeAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, A, KEY, VALUE>, A extends java.util.Map<KEY, VALUE>, KEY, VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractMapSizeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractMapSizeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractOffsetDateTimeAssert<SELF extends org.assertj.core.api.AbstractOffsetDateTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOffsetDateTimeAssert<SELF extends org.assertj.core.api.AbstractOffsetDateTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.OffsetDateTime>' to 'java.util.function.Consumer<? super java.time.OffsetDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.OffsetDateTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.OffsetDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOffsetDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOffsetDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractOffsetDateTimeAssert<SELF extends org.assertj.core.api.AbstractOffsetDateTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOffsetDateTimeAssert<SELF extends org.assertj.core.api.AbstractOffsetDateTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.OffsetDateTime>' to 'java.util.function.Consumer<? super java.time.OffsetDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.OffsetDateTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.OffsetDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOffsetDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOffsetDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractOffsetDateTimeAssert<SELF extends org.assertj.core.api.AbstractOffsetDateTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOffsetDateTimeAssert<SELF extends org.assertj.core.api.AbstractOffsetDateTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.OffsetDateTime>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.OffsetDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.OffsetDateTime>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.OffsetDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOffsetDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOffsetDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractOffsetTimeAssert<SELF extends org.assertj.core.api.AbstractOffsetTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOffsetTimeAssert<SELF extends org.assertj.core.api.AbstractOffsetTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.OffsetTime>' to 'java.util.function.Consumer<? super java.time.OffsetTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.OffsetTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.OffsetTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOffsetTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOffsetTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractOffsetTimeAssert<SELF extends org.assertj.core.api.AbstractOffsetTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOffsetTimeAssert<SELF extends org.assertj.core.api.AbstractOffsetTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.OffsetTime>' to 'java.util.function.Consumer<? super java.time.OffsetTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.OffsetTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.OffsetTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOffsetTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOffsetTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractOffsetTimeAssert<SELF extends org.assertj.core.api.AbstractOffsetTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOffsetTimeAssert<SELF extends org.assertj.core.api.AbstractOffsetTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.OffsetTime>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.OffsetTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.OffsetTime>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.OffsetTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOffsetTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOffsetTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractOptionalAssert<SELF extends org.assertj.core.api.AbstractOptionalAssert<SELF, VALUE>, VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOptionalAssert<SELF extends org.assertj.core.api.AbstractOptionalAssert<SELF, VALUE>, VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Optional<VALUE>>' to 'java.util.function.Consumer<? super java.util.Optional<VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Optional<VALUE>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Optional<VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOptionalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOptionalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractOptionalAssert<SELF extends org.assertj.core.api.AbstractOptionalAssert<SELF, VALUE>, VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOptionalAssert<SELF extends org.assertj.core.api.AbstractOptionalAssert<SELF, VALUE>, VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Optional<VALUE>>' to 'java.util.function.Consumer<? super java.util.Optional<VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Optional<VALUE>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Optional<VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOptionalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOptionalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractOptionalAssert<SELF extends org.assertj.core.api.AbstractOptionalAssert<SELF, VALUE>, VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOptionalAssert<SELF extends org.assertj.core.api.AbstractOptionalAssert<SELF, VALUE>, VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Optional<VALUE>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.Optional<VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Optional<VALUE>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.Optional<VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOptionalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOptionalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractOptionalDoubleAssert<SELF extends org.assertj.core.api.AbstractOptionalDoubleAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOptionalDoubleAssert<SELF extends org.assertj.core.api.AbstractOptionalDoubleAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalDouble>' to 'java.util.function.Consumer<? super java.util.OptionalDouble>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalDouble>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.OptionalDouble>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOptionalDoubleAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOptionalDoubleAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractOptionalDoubleAssert<SELF extends org.assertj.core.api.AbstractOptionalDoubleAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOptionalDoubleAssert<SELF extends org.assertj.core.api.AbstractOptionalDoubleAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalDouble>' to 'java.util.function.Consumer<? super java.util.OptionalDouble>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalDouble>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.OptionalDouble>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOptionalDoubleAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOptionalDoubleAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractOptionalDoubleAssert<SELF extends org.assertj.core.api.AbstractOptionalDoubleAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOptionalDoubleAssert<SELF extends org.assertj.core.api.AbstractOptionalDoubleAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalDouble>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.OptionalDouble>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalDouble>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.OptionalDouble>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOptionalDoubleAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOptionalDoubleAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractOptionalIntAssert<SELF extends org.assertj.core.api.AbstractOptionalIntAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOptionalIntAssert<SELF extends org.assertj.core.api.AbstractOptionalIntAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalInt>' to 'java.util.function.Consumer<? super java.util.OptionalInt>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalInt>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.OptionalInt>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOptionalIntAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOptionalIntAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractOptionalIntAssert<SELF extends org.assertj.core.api.AbstractOptionalIntAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOptionalIntAssert<SELF extends org.assertj.core.api.AbstractOptionalIntAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalInt>' to 'java.util.function.Consumer<? super java.util.OptionalInt>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalInt>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.OptionalInt>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOptionalIntAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOptionalIntAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractOptionalIntAssert<SELF extends org.assertj.core.api.AbstractOptionalIntAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOptionalIntAssert<SELF extends org.assertj.core.api.AbstractOptionalIntAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalInt>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.OptionalInt>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalInt>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.OptionalInt>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOptionalIntAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOptionalIntAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractOptionalLongAssert<SELF extends org.assertj.core.api.AbstractOptionalLongAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOptionalLongAssert<SELF extends org.assertj.core.api.AbstractOptionalLongAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalLong>' to 'java.util.function.Consumer<? super java.util.OptionalLong>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalLong>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.OptionalLong>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOptionalLongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOptionalLongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractOptionalLongAssert<SELF extends org.assertj.core.api.AbstractOptionalLongAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOptionalLongAssert<SELF extends org.assertj.core.api.AbstractOptionalLongAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalLong>' to 'java.util.function.Consumer<? super java.util.OptionalLong>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalLong>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.OptionalLong>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOptionalLongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOptionalLongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractOptionalLongAssert<SELF extends org.assertj.core.api.AbstractOptionalLongAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractOptionalLongAssert<SELF extends org.assertj.core.api.AbstractOptionalLongAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalLong>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.OptionalLong>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalLong>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.OptionalLong>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractOptionalLongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractOptionalLongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractPeriodAssert<SELF extends org.assertj.core.api.AbstractPeriodAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractPeriodAssert<SELF extends org.assertj.core.api.AbstractPeriodAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Period>' to 'java.util.function.Consumer<? super java.time.Period>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Period>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.Period>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractPeriodAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractPeriodAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractPeriodAssert<SELF extends org.assertj.core.api.AbstractPeriodAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractPeriodAssert<SELF extends org.assertj.core.api.AbstractPeriodAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Period>' to 'java.util.function.Consumer<? super java.time.Period>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Period>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.Period>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractPeriodAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractPeriodAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractPeriodAssert<SELF extends org.assertj.core.api.AbstractPeriodAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractPeriodAssert<SELF extends org.assertj.core.api.AbstractPeriodAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Period>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.Period>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Period>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.Period>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractPeriodAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractPeriodAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractShortArrayAssert<SELF extends org.assertj.core.api.AbstractShortArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractShortArrayAssert<SELF extends org.assertj.core.api.AbstractShortArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<short[]>' to 'java.util.function.Consumer<? super short[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<short[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super short[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractShortArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractShortArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractShortArrayAssert<SELF extends org.assertj.core.api.AbstractShortArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractShortArrayAssert<SELF extends org.assertj.core.api.AbstractShortArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<short[]>' to 'java.util.function.Consumer<? super short[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<short[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super short[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractShortArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractShortArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractShortArrayAssert<SELF extends org.assertj.core.api.AbstractShortArrayAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractShortArrayAssert<SELF extends org.assertj.core.api.AbstractShortArrayAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<short[]>' to 'org.assertj.core.api.ThrowingConsumer<? super short[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<short[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super short[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractShortArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractShortArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractShortAssert<SELF extends org.assertj.core.api.AbstractShortAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractShortAssert<SELF extends org.assertj.core.api.AbstractShortAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Short>' to 'java.util.function.Consumer<? super java.lang.Short>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Short>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Short>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractShortAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractShortAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractShortAssert<SELF extends org.assertj.core.api.AbstractShortAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractShortAssert<SELF extends org.assertj.core.api.AbstractShortAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Short>' to 'java.util.function.Consumer<? super java.lang.Short>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Short>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Short>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractShortAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractShortAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractShortAssert<SELF extends org.assertj.core.api.AbstractShortAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractShortAssert<SELF extends org.assertj.core.api.AbstractShortAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Short>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Short>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Short>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Short>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractShortAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractShortAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.visibilityReduced",
  "old" : "field org.assertj.core.api.AbstractSoftAssertions.proxies",
  "new" : "field org.assertj.core.api.AbstractSoftAssertions.proxies",
  "name" : "visibility reduced",
  "description" : "Visibility was reduced from 'protected' to 'package'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldVisibility",
    "value" : "protected"
  }, {
    "name" : "newVisibility",
    "value" : "package"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSoftAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSoftAssertions"
  }, {
    "name" : "fieldName",
    "value" : "proxies"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method void org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String)",
  "new" : "method <T> T org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String)",
  "name" : "return type changed",
  "description" : "The return type changed from 'void' to  'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "void"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSoftAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSoftAssertions"
  }, {
    "name" : "methodName",
    "value" : "fail"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method void org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String)",
  "new" : "method <T> T org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String)",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSoftAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSoftAssertions"
  }, {
    "name" : "methodName",
    "value" : "fail"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method void org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String)",
  "new" : "method <T> T org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSoftAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSoftAssertions"
  }, {
    "name" : "methodName",
    "value" : "fail"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.annotation.added",
  "old" : "method void org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String)",
  "new" : "method <T> T org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String)",
  "name" : "new annotation",
  "description" : "Element newly annotated with 'org.assertj.core.util.CanIgnoreReturnValue'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "annotationType",
    "value" : "org.assertj.core.util.CanIgnoreReturnValue"
  }, {
    "name" : "annotation",
    "value" : "@org.assertj.core.util.CanIgnoreReturnValue"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSoftAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSoftAssertions"
  }, {
    "name" : "methodName",
    "value" : "fail"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method void org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Object[])",
  "new" : "method <T> T org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Object[])",
  "name" : "return type changed",
  "description" : "The return type changed from 'void' to  'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "void"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSoftAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSoftAssertions"
  }, {
    "name" : "methodName",
    "value" : "fail"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method void org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Object[])",
  "new" : "method <T> T org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Object[])",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSoftAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSoftAssertions"
  }, {
    "name" : "methodName",
    "value" : "fail"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method void org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Object[])",
  "new" : "method <T> T org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Object[])",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSoftAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSoftAssertions"
  }, {
    "name" : "methodName",
    "value" : "fail"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.annotation.added",
  "old" : "method void org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Object[])",
  "new" : "method <T> T org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Object[])",
  "name" : "new annotation",
  "description" : "Element newly annotated with 'org.assertj.core.util.CanIgnoreReturnValue'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "annotationType",
    "value" : "org.assertj.core.util.CanIgnoreReturnValue"
  }, {
    "name" : "annotation",
    "value" : "@org.assertj.core.util.CanIgnoreReturnValue"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSoftAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSoftAssertions"
  }, {
    "name" : "methodName",
    "value" : "fail"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method void org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Throwable)",
  "new" : "method <T> T org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Throwable)",
  "name" : "return type changed",
  "description" : "The return type changed from 'void' to  'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "void"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSoftAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSoftAssertions"
  }, {
    "name" : "methodName",
    "value" : "fail"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method void org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Throwable)",
  "new" : "method <T> T org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Throwable)",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSoftAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSoftAssertions"
  }, {
    "name" : "methodName",
    "value" : "fail"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method void org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Throwable)",
  "new" : "method <T> T org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Throwable)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSoftAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSoftAssertions"
  }, {
    "name" : "methodName",
    "value" : "fail"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.annotation.added",
  "old" : "method void org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Throwable)",
  "new" : "method <T> T org.assertj.core.api.AbstractSoftAssertions::fail(java.lang.String, java.lang.Throwable)",
  "name" : "new annotation",
  "description" : "Element newly annotated with 'org.assertj.core.util.CanIgnoreReturnValue'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "annotationType",
    "value" : "org.assertj.core.util.CanIgnoreReturnValue"
  }, {
    "name" : "annotation",
    "value" : "@org.assertj.core.util.CanIgnoreReturnValue"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSoftAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSoftAssertions"
  }, {
    "name" : "methodName",
    "value" : "fail"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractSpliteratorAssert<SELF extends org.assertj.core.api.AbstractSpliteratorAssert<SELF, ELEMENT>, ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractSpliteratorAssert<SELF extends org.assertj.core.api.AbstractSpliteratorAssert<SELF, ELEMENT>, ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Spliterator<ELEMENT>>' to 'java.util.function.Consumer<? super java.util.Spliterator<ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Spliterator<ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Spliterator<ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSpliteratorAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSpliteratorAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractSpliteratorAssert<SELF extends org.assertj.core.api.AbstractSpliteratorAssert<SELF, ELEMENT>, ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractSpliteratorAssert<SELF extends org.assertj.core.api.AbstractSpliteratorAssert<SELF, ELEMENT>, ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Spliterator<ELEMENT>>' to 'java.util.function.Consumer<? super java.util.Spliterator<ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Spliterator<ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Spliterator<ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSpliteratorAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSpliteratorAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractSpliteratorAssert<SELF extends org.assertj.core.api.AbstractSpliteratorAssert<SELF, ELEMENT>, ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractSpliteratorAssert<SELF extends org.assertj.core.api.AbstractSpliteratorAssert<SELF, ELEMENT>, ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Spliterator<ELEMENT>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.Spliterator<ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Spliterator<ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.Spliterator<ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractSpliteratorAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractSpliteratorAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractStringAssert<SELF extends org.assertj.core.api.AbstractStringAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractStringAssert<SELF extends org.assertj.core.api.AbstractStringAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.String>' to 'java.util.function.Consumer<? super java.lang.String>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.String>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.String>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractStringAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractStringAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractStringAssert<SELF extends org.assertj.core.api.AbstractStringAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractStringAssert<SELF extends org.assertj.core.api.AbstractStringAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.String>' to 'java.util.function.Consumer<? super java.lang.String>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.String>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.String>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractStringAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractStringAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractStringAssert<SELF extends org.assertj.core.api.AbstractStringAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractStringAssert<SELF extends org.assertj.core.api.AbstractStringAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.String>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.String>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.String>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.String>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractStringAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractStringAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractTemporalAssert<SELF extends org.assertj.core.api.AbstractTemporalAssert<SELF, TEMPORAL>, TEMPORAL extends java.time.temporal.Temporal>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractTemporalAssert<SELF extends org.assertj.core.api.AbstractTemporalAssert<SELF, TEMPORAL>, TEMPORAL extends java.time.temporal.Temporal>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<TEMPORAL extends java.time.temporal.Temporal>' to 'java.util.function.Consumer<? super TEMPORAL extends java.time.temporal.Temporal>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<TEMPORAL extends java.time.temporal.Temporal>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super TEMPORAL extends java.time.temporal.Temporal>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractTemporalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractTemporalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractTemporalAssert<SELF extends org.assertj.core.api.AbstractTemporalAssert<SELF, TEMPORAL>, TEMPORAL extends java.time.temporal.Temporal>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractTemporalAssert<SELF extends org.assertj.core.api.AbstractTemporalAssert<SELF, TEMPORAL>, TEMPORAL extends java.time.temporal.Temporal>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<TEMPORAL extends java.time.temporal.Temporal>' to 'java.util.function.Consumer<? super TEMPORAL extends java.time.temporal.Temporal>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<TEMPORAL extends java.time.temporal.Temporal>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super TEMPORAL extends java.time.temporal.Temporal>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractTemporalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractTemporalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractTemporalAssert<SELF extends org.assertj.core.api.AbstractTemporalAssert<SELF, TEMPORAL>, TEMPORAL extends java.time.temporal.Temporal>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractTemporalAssert<SELF extends org.assertj.core.api.AbstractTemporalAssert<SELF, TEMPORAL>, TEMPORAL extends java.time.temporal.Temporal>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<TEMPORAL extends java.time.temporal.Temporal>' to 'org.assertj.core.api.ThrowingConsumer<? super TEMPORAL extends java.time.temporal.Temporal>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<TEMPORAL extends java.time.temporal.Temporal>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super TEMPORAL extends java.time.temporal.Temporal>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractTemporalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractTemporalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractUriAssert<SELF extends org.assertj.core.api.AbstractUriAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractUriAssert<SELF extends org.assertj.core.api.AbstractUriAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.net.URI>' to 'java.util.function.Consumer<? super java.net.URI>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.net.URI>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.net.URI>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractUriAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractUriAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractUriAssert<SELF extends org.assertj.core.api.AbstractUriAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractUriAssert<SELF extends org.assertj.core.api.AbstractUriAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.net.URI>' to 'java.util.function.Consumer<? super java.net.URI>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.net.URI>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.net.URI>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractUriAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractUriAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractUriAssert<SELF extends org.assertj.core.api.AbstractUriAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractUriAssert<SELF extends org.assertj.core.api.AbstractUriAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.net.URI>' to 'org.assertj.core.api.ThrowingConsumer<? super java.net.URI>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.net.URI>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.net.URI>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractUriAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractUriAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractUrlAssert<SELF extends org.assertj.core.api.AbstractUrlAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractUrlAssert<SELF extends org.assertj.core.api.AbstractUrlAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.net.URL>' to 'java.util.function.Consumer<? super java.net.URL>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.net.URL>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.net.URL>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractUrlAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractUrlAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractUrlAssert<SELF extends org.assertj.core.api.AbstractUrlAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractUrlAssert<SELF extends org.assertj.core.api.AbstractUrlAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.net.URL>' to 'java.util.function.Consumer<? super java.net.URL>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.net.URL>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.net.URL>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractUrlAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractUrlAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractUrlAssert<SELF extends org.assertj.core.api.AbstractUrlAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractUrlAssert<SELF extends org.assertj.core.api.AbstractUrlAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.net.URL>' to 'org.assertj.core.api.ThrowingConsumer<? super java.net.URL>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.net.URL>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.net.URL>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractUrlAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractUrlAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AbstractZonedDateTimeAssert<SELF extends org.assertj.core.api.AbstractZonedDateTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractZonedDateTimeAssert<SELF extends org.assertj.core.api.AbstractZonedDateTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.ZonedDateTime>' to 'java.util.function.Consumer<? super java.time.ZonedDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.ZonedDateTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.ZonedDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractZonedDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractZonedDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractZonedDateTimeAssert<SELF extends org.assertj.core.api.AbstractZonedDateTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractZonedDateTimeAssert<SELF extends org.assertj.core.api.AbstractZonedDateTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.ZonedDateTime>' to 'java.util.function.Consumer<? super java.time.ZonedDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.ZonedDateTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.ZonedDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractZonedDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractZonedDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AbstractZonedDateTimeAssert<SELF extends org.assertj.core.api.AbstractZonedDateTimeAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AbstractZonedDateTimeAssert<SELF extends org.assertj.core.api.AbstractZonedDateTimeAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.ZonedDateTime>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.ZonedDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.ZonedDateTime>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.ZonedDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AbstractZonedDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractZonedDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.Array2DAssert<SELF extends org.assertj.core.api.Array2DAssert<SELF, ELEMENT>, ELEMENT>::hasNumberOfRows(int)",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Array2DAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Array2DAssert"
  }, {
    "name" : "methodName",
    "value" : "hasNumberOfRows"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.Assert<SELF extends org.assertj.core.api.Assert<SELF, ACTUAL>, ACTUAL>::doesNotHaveSameHashCodeAs(java.lang.Object)",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assert"
  }, {
    "name" : "classSimpleName",
    "value" : "Assert"
  }, {
    "name" : "methodName",
    "value" : "doesNotHaveSameHashCodeAs"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.Assert<SELF extends org.assertj.core.api.Assert<SELF, ACTUAL>, ACTUAL>::doesNotHaveToString(java.lang.String)",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assert"
  }, {
    "name" : "classSimpleName",
    "value" : "Assert"
  }, {
    "name" : "methodName",
    "value" : "doesNotHaveToString"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.Assertions::assertThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.Assertions::assertThat(T)",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assertions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assertions"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.Assertions::assertThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.Assertions::assertThat(T)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T extends java.lang.Throwable'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T extends java.lang.Throwable"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assertions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assertions"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.AssertionsForClassTypes::assertThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.AssertionsForClassTypes::assertThat(T)",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AssertionsForClassTypes"
  }, {
    "name" : "classSimpleName",
    "value" : "AssertionsForClassTypes"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.AssertionsForClassTypes::assertThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.AssertionsForClassTypes::assertThat(T)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T extends java.lang.Throwable'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T extends java.lang.Throwable"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AssertionsForClassTypes"
  }, {
    "name" : "classSimpleName",
    "value" : "AssertionsForClassTypes"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method org.assertj.core.api.AbstractClassAssert<?> org.assertj.core.api.Assumptions::assumeThat(java.lang.Class<?>)",
  "new" : "method org.assertj.core.api.ClassAssert org.assertj.core.api.Assumptions::assumeThat(java.lang.Class<?>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.AbstractClassAssert<?>' to  'org.assertj.core.api.ClassAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.AbstractClassAssert<?>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ClassAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <ELEMENT> org.assertj.core.api.ProxyableIterableAssert<ELEMENT> org.assertj.core.api.Assumptions::assumeThat(java.lang.Iterable<? extends ELEMENT>)",
  "new" : "method <ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.Assumptions::assumeThat(java.lang.Iterable<? extends ELEMENT>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableIterableAssert<ELEMENT>' to  'org.assertj.core.api.IterableAssert<ELEMENT>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableIterableAssert<ELEMENT>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectAssert<T> org.assertj.core.api.Assumptions::assumeThat(T)",
  "new" : "method <T> org.assertj.core.api.ObjectAssert<T> org.assertj.core.api.Assumptions::assumeThat(T)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectAssert<T>' to  'org.assertj.core.api.ObjectAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectArrayAssert<T> org.assertj.core.api.Assumptions::assumeThat(T[])",
  "new" : "method <T> org.assertj.core.api.ObjectArrayAssert<T> org.assertj.core.api.Assumptions::assumeThat(T[])",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectArrayAssert<T>' to  'org.assertj.core.api.ObjectArrayAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectArrayAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectArrayAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.Assumptions::assumeThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.Assumptions::assumeThat(T)",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.Assumptions::assumeThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.Assumptions::assumeThat(T)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T extends java.lang.Throwable'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T extends java.lang.Throwable"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <ELEMENT> org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ProxyableListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> org.assertj.core.api.Assumptions::assumeThat(java.util.List<? extends ELEMENT>)",
  "new" : "method <E> org.assertj.core.api.AbstractCollectionAssert<?, java.util.Collection<? extends E>, E, org.assertj.core.api.ObjectAssert<E>> org.assertj.core.api.Assumptions::assumeThat(java.util.Collection<? extends E>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ProxyableListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>>' to  'org.assertj.core.api.AbstractCollectionAssert<?, java.util.Collection<? extends E>, E, org.assertj.core.api.ObjectAssert<E>>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ProxyableListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractCollectionAssert<?, java.util.Collection<? extends E>, E, org.assertj.core.api.ObjectAssert<E>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <ELEMENT> org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ProxyableListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> org.assertj.core.api.Assumptions::assumeThat(===java.util.List<? extends ELEMENT>===)",
  "new" : "parameter <E> org.assertj.core.api.AbstractCollectionAssert<?, java.util.Collection<? extends E>, E, org.assertj.core.api.ObjectAssert<E>> org.assertj.core.api.Assumptions::assumeThat(===java.util.Collection<? extends E>===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.List<? extends ELEMENT>' to 'java.util.Collection<? extends E>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.List<? extends ELEMENT>"
  }, {
    "name" : "newType",
    "value" : "java.util.Collection<? extends E>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <K, V> org.assertj.core.api.AbstractMapAssert<?, ?, K, V> org.assertj.core.api.Assumptions::assumeThat(java.util.Map<K, V>)",
  "new" : "method <ELEMENT> org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> org.assertj.core.api.Assumptions::assumeThat(java.util.List<? extends ELEMENT>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.AbstractMapAssert<?, ?, K, V>' to  'org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.AbstractMapAssert<?, ?, K, V>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterRemoved",
  "old" : "method <K, V> org.assertj.core.api.AbstractMapAssert<?, ?, K, V> org.assertj.core.api.Assumptions::assumeThat(java.util.Map<K, V>)",
  "new" : "method <ELEMENT> org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> org.assertj.core.api.Assumptions::assumeThat(java.util.List<? extends ELEMENT>)",
  "name" : "formal type parameter removed",
  "description" : "The formal type parameter 'V' was removed from the element.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "V"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <K, V> org.assertj.core.api.AbstractMapAssert<?, ?, K, V> org.assertj.core.api.Assumptions::assumeThat(===java.util.Map<K, V>===)",
  "new" : "parameter <ELEMENT> org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> org.assertj.core.api.Assumptions::assumeThat(===java.util.List<? extends ELEMENT>===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.Map<K, V>' to 'java.util.List<? extends ELEMENT>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.Map<K, V>"
  }, {
    "name" : "newType",
    "value" : "java.util.List<? extends ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.Assumptions::assumeThat(java.util.function.Predicate<T>)",
  "new" : "method <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.Assumptions::assumeThat(java.util.Map<K, V>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyablePredicateAssert<T>' to  'org.assertj.core.api.MapAssert<K, V>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyablePredicateAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.MapAssert<K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.Assumptions::assumeThat(java.util.function.Predicate<T>)",
  "new" : "method <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.Assumptions::assumeThat(java.util.Map<K, V>)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'V'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "V"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.Assumptions::assumeThat(===java.util.function.Predicate<T>===)",
  "new" : "parameter <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.Assumptions::assumeThat(===java.util.Map<K, V>===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Predicate<T>' to 'java.util.Map<K, V>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Predicate<T>"
  }, {
    "name" : "newType",
    "value" : "java.util.Map<K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectAssert<T> org.assertj.core.api.Assumptions::assumeThatObject(T)",
  "new" : "method <T> org.assertj.core.api.ObjectAssert<T> org.assertj.core.api.Assumptions::assumeThatObject(T)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectAssert<T>' to  'org.assertj.core.api.ObjectAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Assumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "Assumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThatObject"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AtomicBooleanAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicBooleanAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicBoolean>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicBoolean>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicBoolean>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicBoolean>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicBooleanAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicBooleanAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicBooleanAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicBooleanAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicBoolean>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicBoolean>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicBoolean>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicBoolean>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicBooleanAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicBooleanAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicBooleanAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicBooleanAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicBoolean>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicBoolean>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicBoolean>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicBoolean>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicBooleanAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicBooleanAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AtomicIntegerArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicIntegerArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicIntegerArray>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicIntegerArray>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicIntegerArray>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicIntegerArray>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicIntegerArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicIntegerArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicIntegerArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicIntegerArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicIntegerArray>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicIntegerArray>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicIntegerArray>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicIntegerArray>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicIntegerArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicIntegerArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicIntegerArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicIntegerArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicIntegerArray>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicIntegerArray>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicIntegerArray>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicIntegerArray>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicIntegerArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicIntegerArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AtomicIntegerAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicIntegerAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicInteger>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicInteger>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicInteger>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicInteger>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicIntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicIntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicIntegerAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicIntegerAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicInteger>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicInteger>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicInteger>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicInteger>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicIntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicIntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicIntegerAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicIntegerAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicInteger>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicInteger>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicInteger>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicInteger>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicIntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicIntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AtomicIntegerFieldUpdaterAssert<OBJECT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicIntegerFieldUpdaterAssert<OBJECT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicIntegerFieldUpdaterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicIntegerFieldUpdaterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicIntegerFieldUpdaterAssert<OBJECT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicIntegerFieldUpdaterAssert<OBJECT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicIntegerFieldUpdaterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicIntegerFieldUpdaterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicIntegerFieldUpdaterAssert<OBJECT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicIntegerFieldUpdaterAssert<OBJECT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicIntegerFieldUpdaterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicIntegerFieldUpdaterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AtomicLongArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicLongArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicLongArray>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicLongArray>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicLongArray>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicLongArray>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicLongArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicLongArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicLongArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicLongArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicLongArray>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicLongArray>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicLongArray>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicLongArray>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicLongArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicLongArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicLongArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicLongArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicLongArray>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicLongArray>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicLongArray>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicLongArray>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicLongArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicLongArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AtomicLongAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicLongAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicLong>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicLong>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicLong>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicLong>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicLongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicLongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicLongAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicLongAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicLong>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicLong>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicLong>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicLong>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicLongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicLongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicLongAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicLongAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicLong>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicLong>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicLong>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicLong>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicLongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicLongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AtomicLongFieldUpdaterAssert<OBJECT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicLongFieldUpdaterAssert<OBJECT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicLongFieldUpdaterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicLongFieldUpdaterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicLongFieldUpdaterAssert<OBJECT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicLongFieldUpdaterAssert<OBJECT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicLongFieldUpdaterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicLongFieldUpdaterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicLongFieldUpdaterAssert<OBJECT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicLongFieldUpdaterAssert<OBJECT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicLongFieldUpdaterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicLongFieldUpdaterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AtomicMarkableReferenceAssert<VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicMarkableReferenceAssert<VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicMarkableReference<VALUE>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicMarkableReference<VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicMarkableReference<VALUE>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicMarkableReference<VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicMarkableReferenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicMarkableReferenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicMarkableReferenceAssert<VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicMarkableReferenceAssert<VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicMarkableReference<VALUE>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicMarkableReference<VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicMarkableReference<VALUE>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicMarkableReference<VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicMarkableReferenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicMarkableReferenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicMarkableReferenceAssert<VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicMarkableReferenceAssert<VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicMarkableReference<VALUE>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicMarkableReference<VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicMarkableReference<VALUE>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicMarkableReference<VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicMarkableReferenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicMarkableReferenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AtomicReferenceArrayAssert<T>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicReferenceArrayAssert<T>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicReferenceArray<T>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicReferenceArray<T>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicReferenceArray<T>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicReferenceArray<T>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicReferenceArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicReferenceArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicReferenceArrayAssert<T>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicReferenceArrayAssert<T>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicReferenceArray<T>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicReferenceArray<T>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicReferenceArray<T>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicReferenceArray<T>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicReferenceArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicReferenceArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicReferenceArrayAssert<T>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicReferenceArrayAssert<T>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicReferenceArray<T>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicReferenceArray<T>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicReferenceArray<T>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicReferenceArray<T>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicReferenceArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicReferenceArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AtomicReferenceAssert<V>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicReferenceAssert<V>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicReference<V>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicReference<V>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicReference<V>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicReference<V>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicReferenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicReferenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicReferenceAssert<V>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicReferenceAssert<V>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicReference<V>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicReference<V>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicReference<V>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicReference<V>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicReferenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicReferenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicReferenceAssert<V>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicReferenceAssert<V>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicReference<V>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicReference<V>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicReference<V>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicReference<V>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicReferenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicReferenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AtomicReferenceFieldUpdaterAssert<FIELD, OBJECT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicReferenceFieldUpdaterAssert<FIELD, OBJECT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicReferenceFieldUpdaterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicReferenceFieldUpdaterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicReferenceFieldUpdaterAssert<FIELD, OBJECT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicReferenceFieldUpdaterAssert<FIELD, OBJECT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicReferenceFieldUpdaterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicReferenceFieldUpdaterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicReferenceFieldUpdaterAssert<FIELD, OBJECT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicReferenceFieldUpdaterAssert<FIELD, OBJECT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicReferenceFieldUpdaterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicReferenceFieldUpdaterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.AtomicStampedReferenceAssert<VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicStampedReferenceAssert<VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicStampedReference<VALUE>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicStampedReference<VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicStampedReference<VALUE>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicStampedReference<VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicStampedReferenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicStampedReferenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicStampedReferenceAssert<VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicStampedReferenceAssert<VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicStampedReference<VALUE>>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicStampedReference<VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicStampedReference<VALUE>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.AtomicStampedReference<VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicStampedReferenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicStampedReferenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.AtomicStampedReferenceAssert<VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.AtomicStampedReferenceAssert<VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.AtomicStampedReference<VALUE>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicStampedReference<VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.AtomicStampedReference<VALUE>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.AtomicStampedReference<VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.AtomicStampedReferenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "AtomicStampedReferenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.BDDAssertions::then(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.BDDAssertions::then(T)",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssertions"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.BDDAssertions::then(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.BDDAssertions::then(T)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T extends java.lang.Throwable'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T extends java.lang.Throwable"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssertions"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method org.assertj.core.api.AbstractClassAssert<?> org.assertj.core.api.BDDAssumptions::given(java.lang.Class<?>)",
  "new" : "method org.assertj.core.api.ClassAssert org.assertj.core.api.BDDAssumptions::given(java.lang.Class<?>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.AbstractClassAssert<?>' to  'org.assertj.core.api.ClassAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.AbstractClassAssert<?>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ClassAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <ELEMENT> org.assertj.core.api.ProxyableIterableAssert<ELEMENT> org.assertj.core.api.BDDAssumptions::given(java.lang.Iterable<? extends ELEMENT>)",
  "new" : "method <ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.BDDAssumptions::given(java.lang.Iterable<? extends ELEMENT>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableIterableAssert<ELEMENT>' to  'org.assertj.core.api.IterableAssert<ELEMENT>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableIterableAssert<ELEMENT>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectAssert<T> org.assertj.core.api.BDDAssumptions::given(T)",
  "new" : "method <T> org.assertj.core.api.ObjectAssert<T> org.assertj.core.api.BDDAssumptions::given(T)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectAssert<T>' to  'org.assertj.core.api.ObjectAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectArrayAssert<T> org.assertj.core.api.BDDAssumptions::given(T[])",
  "new" : "method <T> org.assertj.core.api.ObjectArrayAssert<T> org.assertj.core.api.BDDAssumptions::given(T[])",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectArrayAssert<T>' to  'org.assertj.core.api.ObjectArrayAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectArrayAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectArrayAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.BDDAssumptions::given(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.BDDAssumptions::given(T)",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.BDDAssumptions::given(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.BDDAssumptions::given(T)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T extends java.lang.Throwable'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T extends java.lang.Throwable"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <ELEMENT> org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ProxyableListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> org.assertj.core.api.BDDAssumptions::given(java.util.List<? extends ELEMENT>)",
  "new" : "method <E> org.assertj.core.api.AbstractCollectionAssert<?, java.util.Collection<? extends E>, E, org.assertj.core.api.ObjectAssert<E>> org.assertj.core.api.BDDAssumptions::given(java.util.Collection<? extends E>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ProxyableListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>>' to  'org.assertj.core.api.AbstractCollectionAssert<?, java.util.Collection<? extends E>, E, org.assertj.core.api.ObjectAssert<E>>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ProxyableListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractCollectionAssert<?, java.util.Collection<? extends E>, E, org.assertj.core.api.ObjectAssert<E>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <ELEMENT> org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ProxyableListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> org.assertj.core.api.BDDAssumptions::given(===java.util.List<? extends ELEMENT>===)",
  "new" : "parameter <E> org.assertj.core.api.AbstractCollectionAssert<?, java.util.Collection<? extends E>, E, org.assertj.core.api.ObjectAssert<E>> org.assertj.core.api.BDDAssumptions::given(===java.util.Collection<? extends E>===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.List<? extends ELEMENT>' to 'java.util.Collection<? extends E>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.List<? extends ELEMENT>"
  }, {
    "name" : "newType",
    "value" : "java.util.Collection<? extends E>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <K, V> org.assertj.core.api.AbstractMapAssert<?, ?, K, V> org.assertj.core.api.BDDAssumptions::given(java.util.Map<K, V>)",
  "new" : "method <ELEMENT> org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> org.assertj.core.api.BDDAssumptions::given(java.util.List<? extends ELEMENT>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.AbstractMapAssert<?, ?, K, V>' to  'org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.AbstractMapAssert<?, ?, K, V>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterRemoved",
  "old" : "method <K, V> org.assertj.core.api.AbstractMapAssert<?, ?, K, V> org.assertj.core.api.BDDAssumptions::given(java.util.Map<K, V>)",
  "new" : "method <ELEMENT> org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> org.assertj.core.api.BDDAssumptions::given(java.util.List<? extends ELEMENT>)",
  "name" : "formal type parameter removed",
  "description" : "The formal type parameter 'V' was removed from the element.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "V"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <K, V> org.assertj.core.api.AbstractMapAssert<?, ?, K, V> org.assertj.core.api.BDDAssumptions::given(===java.util.Map<K, V>===)",
  "new" : "parameter <ELEMENT> org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> org.assertj.core.api.BDDAssumptions::given(===java.util.List<? extends ELEMENT>===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.Map<K, V>' to 'java.util.List<? extends ELEMENT>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.Map<K, V>"
  }, {
    "name" : "newType",
    "value" : "java.util.List<? extends ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.BDDAssumptions::given(java.util.function.Predicate<T>)",
  "new" : "method <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.BDDAssumptions::given(java.util.Map<K, V>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyablePredicateAssert<T>' to  'org.assertj.core.api.MapAssert<K, V>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyablePredicateAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.MapAssert<K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.BDDAssumptions::given(java.util.function.Predicate<T>)",
  "new" : "method <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.BDDAssumptions::given(java.util.Map<K, V>)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'V'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "V"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.BDDAssumptions::given(===java.util.function.Predicate<T>===)",
  "new" : "parameter <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.BDDAssumptions::given(===java.util.Map<K, V>===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Predicate<T>' to 'java.util.Map<K, V>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Predicate<T>"
  }, {
    "name" : "newType",
    "value" : "java.util.Map<K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "given"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectAssert<T> org.assertj.core.api.BDDAssumptions::givenObject(T)",
  "new" : "method <T> org.assertj.core.api.ObjectAssert<T> org.assertj.core.api.BDDAssumptions::givenObject(T)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectAssert<T>' to  'org.assertj.core.api.ObjectAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDAssumptions"
  }, {
    "name" : "methodName",
    "value" : "givenObject"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.BDDSoftAssertionsProvider::then(java.util.function.Predicate<T>)",
  "new" : "method <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.util.Map<K, V>) @ org.assertj.core.api.BDDSoftAssertionsProvider",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyablePredicateAssert<T>' to  'org.assertj.core.api.MapAssert<K, V>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyablePredicateAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.MapAssert<K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.BDDSoftAssertionsProvider::then(java.util.function.Predicate<T>)",
  "new" : "method <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.util.Map<K, V>) @ org.assertj.core.api.BDDSoftAssertionsProvider",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'V'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "V"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.annotation.removed",
  "old" : "method <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.BDDSoftAssertionsProvider::then(java.util.function.Predicate<T>)",
  "new" : "method <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.util.Map<K, V>) @ org.assertj.core.api.BDDSoftAssertionsProvider",
  "name" : "removed annotation",
  "description" : "Element no longer annotated with 'org.assertj.core.util.CheckReturnValue'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "annotationType",
    "value" : "org.assertj.core.util.CheckReturnValue"
  }, {
    "name" : "annotation",
    "value" : "@org.assertj.core.util.CheckReturnValue"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.BDDSoftAssertionsProvider::then(===java.util.function.Predicate<T>===)",
  "new" : "parameter <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(===java.util.Map<K, V>===) @ org.assertj.core.api.BDDSoftAssertionsProvider",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Predicate<T>' to 'java.util.Map<K, V>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Predicate<T>"
  }, {
    "name" : "newType",
    "value" : "java.util.Map<K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.BigDecimalAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.BigDecimalAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.math.BigDecimal>' to 'java.util.function.Consumer<? super java.math.BigDecimal>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.math.BigDecimal>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.math.BigDecimal>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BigDecimalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "BigDecimalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.BigDecimalAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.BigDecimalAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.math.BigDecimal>' to 'java.util.function.Consumer<? super java.math.BigDecimal>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.math.BigDecimal>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.math.BigDecimal>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BigDecimalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "BigDecimalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.BigDecimalAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.BigDecimalAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.math.BigDecimal>' to 'org.assertj.core.api.ThrowingConsumer<? super java.math.BigDecimal>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.math.BigDecimal>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.math.BigDecimal>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BigDecimalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "BigDecimalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.BigIntegerAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.BigIntegerAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.math.BigInteger>' to 'java.util.function.Consumer<? super java.math.BigInteger>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.math.BigInteger>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.math.BigInteger>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BigIntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "BigIntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.BigIntegerAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.BigIntegerAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.math.BigInteger>' to 'java.util.function.Consumer<? super java.math.BigInteger>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.math.BigInteger>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.math.BigInteger>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BigIntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "BigIntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.BigIntegerAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.BigIntegerAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.math.BigInteger>' to 'org.assertj.core.api.ThrowingConsumer<? super java.math.BigInteger>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.math.BigInteger>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.math.BigInteger>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BigIntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "BigIntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.Boolean2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Boolean2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<boolean[][]>' to 'java.util.function.Consumer<? super boolean[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<boolean[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super boolean[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Boolean2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Boolean2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Boolean2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Boolean2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<boolean[][]>' to 'java.util.function.Consumer<? super boolean[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<boolean[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super boolean[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Boolean2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Boolean2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Boolean2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.Boolean2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<boolean[][]>' to 'org.assertj.core.api.ThrowingConsumer<? super boolean[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<boolean[][]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super boolean[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Boolean2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Boolean2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.BooleanArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.BooleanArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<boolean[]>' to 'java.util.function.Consumer<? super boolean[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<boolean[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super boolean[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BooleanArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "BooleanArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.BooleanArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.BooleanArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<boolean[]>' to 'java.util.function.Consumer<? super boolean[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<boolean[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super boolean[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BooleanArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "BooleanArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.BooleanArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.BooleanArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<boolean[]>' to 'org.assertj.core.api.ThrowingConsumer<? super boolean[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<boolean[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super boolean[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BooleanArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "BooleanArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.BooleanAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.BooleanAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Boolean>' to 'java.util.function.Consumer<? super java.lang.Boolean>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Boolean>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Boolean>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BooleanAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "BooleanAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.BooleanAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.BooleanAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Boolean>' to 'java.util.function.Consumer<? super java.lang.Boolean>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Boolean>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Boolean>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BooleanAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "BooleanAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.BooleanAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.BooleanAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Boolean>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Boolean>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Boolean>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Boolean>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.BooleanAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "BooleanAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.Byte2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Byte2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<byte[][]>' to 'java.util.function.Consumer<? super byte[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<byte[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super byte[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Byte2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Byte2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Byte2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Byte2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<byte[][]>' to 'java.util.function.Consumer<? super byte[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<byte[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super byte[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Byte2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Byte2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Byte2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.Byte2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<byte[][]>' to 'org.assertj.core.api.ThrowingConsumer<? super byte[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<byte[][]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super byte[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Byte2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Byte2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.ByteArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ByteArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<byte[]>' to 'java.util.function.Consumer<? super byte[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<byte[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super byte[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ByteArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ByteArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ByteArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ByteArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<byte[]>' to 'java.util.function.Consumer<? super byte[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<byte[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super byte[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ByteArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ByteArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ByteArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.ByteArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<byte[]>' to 'org.assertj.core.api.ThrowingConsumer<? super byte[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<byte[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super byte[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ByteArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ByteArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.ByteAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ByteAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Byte>' to 'java.util.function.Consumer<? super java.lang.Byte>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Byte>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Byte>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ByteAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ByteAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ByteAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ByteAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Byte>' to 'java.util.function.Consumer<? super java.lang.Byte>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Byte>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Byte>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ByteAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ByteAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ByteAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.ByteAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Byte>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Byte>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Byte>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Byte>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ByteAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ByteAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.Char2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Char2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<char[][]>' to 'java.util.function.Consumer<? super char[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<char[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super char[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Char2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Char2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Char2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Char2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<char[][]>' to 'java.util.function.Consumer<? super char[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<char[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super char[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Char2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Char2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Char2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.Char2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<char[][]>' to 'org.assertj.core.api.ThrowingConsumer<? super char[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<char[][]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super char[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Char2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Char2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.CharArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.CharArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<char[]>' to 'java.util.function.Consumer<? super char[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<char[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super char[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.CharArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "CharArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.CharArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.CharArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<char[]>' to 'java.util.function.Consumer<? super char[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<char[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super char[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.CharArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "CharArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.CharArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.CharArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<char[]>' to 'org.assertj.core.api.ThrowingConsumer<? super char[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<char[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super char[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.CharArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "CharArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.CharSequenceAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.CharSequenceAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.CharSequence>' to 'java.util.function.Consumer<? super java.lang.CharSequence>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.CharSequence>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.CharSequence>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.CharSequenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "CharSequenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.CharSequenceAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.CharSequenceAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.CharSequence>' to 'java.util.function.Consumer<? super java.lang.CharSequence>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.CharSequence>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.CharSequence>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.CharSequenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "CharSequenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.CharSequenceAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.CharSequenceAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.CharSequence>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.CharSequence>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.CharSequence>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.CharSequence>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.CharSequenceAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "CharSequenceAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.CharacterAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.CharacterAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Character>' to 'java.util.function.Consumer<? super java.lang.Character>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Character>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Character>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.CharacterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "CharacterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.CharacterAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.CharacterAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Character>' to 'java.util.function.Consumer<? super java.lang.Character>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Character>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Character>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.CharacterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "CharacterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.CharacterAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.CharacterAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Character>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Character>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Character>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Character>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.CharacterAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "CharacterAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ClassAssert org.assertj.core.api.ClassAssert::hasAnnotations(java.lang.Class<? extends java.lang.annotation.Annotation>[])",
  "new" : "method SELF org.assertj.core.api.AbstractClassAssert<SELF extends org.assertj.core.api.AbstractClassAssert<SELF>>::hasAnnotations(java.lang.Class<? extends java.lang.annotation.Annotation>[]) @ org.assertj.core.api.ClassAssert",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ClassAssert' to 'org.assertj.core.api.AbstractClassAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ClassAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractClassAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ClassAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassAssert"
  }, {
    "name" : "methodName",
    "value" : "hasAnnotations"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ClassAssert org.assertj.core.api.ClassAssert::hasAnnotations(java.lang.Class<? extends java.lang.annotation.Annotation>[])",
  "new" : "method SELF org.assertj.core.api.AbstractClassAssert<SELF extends org.assertj.core.api.AbstractClassAssert<SELF>>::hasAnnotations(java.lang.Class<? extends java.lang.annotation.Annotation>[]) @ org.assertj.core.api.ClassAssert",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ClassAssert' but is now declared in superclass 'org.assertj.core.api.AbstractClassAssert<SELF extends org.assertj.core.api.AbstractClassAssert<SELF>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ClassAssert"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractClassAssert<SELF extends org.assertj.core.api.AbstractClassAssert<SELF>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ClassAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassAssert"
  }, {
    "name" : "methodName",
    "value" : "hasAnnotations"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.ClassAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ClassAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Class<?>>' to 'java.util.function.Consumer<? super java.lang.Class<?>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Class<?>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Class<?>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ClassAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ClassAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ClassAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Class<?>>' to 'java.util.function.Consumer<? super java.lang.Class<?>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Class<?>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Class<?>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ClassAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ClassAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.ClassAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Class<?>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Class<?>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Class<?>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Class<?>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ClassAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.ClassBasedNavigableIterableAssert<SELF extends org.assertj.core.api.ClassBasedNavigableIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ClassBasedNavigableIterableAssert<SELF extends org.assertj.core.api.ClassBasedNavigableIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ClassBasedNavigableIterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassBasedNavigableIterableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ClassBasedNavigableIterableAssert<SELF extends org.assertj.core.api.ClassBasedNavigableIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ClassBasedNavigableIterableAssert<SELF extends org.assertj.core.api.ClassBasedNavigableIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ClassBasedNavigableIterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassBasedNavigableIterableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ClassBasedNavigableIterableAssert<SELF extends org.assertj.core.api.ClassBasedNavigableIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.ClassBasedNavigableIterableAssert<SELF extends org.assertj.core.api.ClassBasedNavigableIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>' to 'org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ClassBasedNavigableIterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassBasedNavigableIterableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.ClassBasedNavigableListAssert<SELF extends org.assertj.core.api.ClassBasedNavigableListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ClassBasedNavigableListAssert<SELF extends org.assertj.core.api.ClassBasedNavigableListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ClassBasedNavigableListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassBasedNavigableListAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ClassBasedNavigableListAssert<SELF extends org.assertj.core.api.ClassBasedNavigableListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ClassBasedNavigableListAssert<SELF extends org.assertj.core.api.ClassBasedNavigableListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ClassBasedNavigableListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassBasedNavigableListAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ClassBasedNavigableListAssert<SELF extends org.assertj.core.api.ClassBasedNavigableListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.ClassBasedNavigableListAssert<SELF extends org.assertj.core.api.ClassBasedNavigableListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>' to 'org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ClassBasedNavigableListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassBasedNavigableListAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.CompletableFutureAssert<RESULT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.CompletableFutureAssert<RESULT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.CompletableFuture<RESULT>>' to 'java.util.function.Consumer<? super java.util.concurrent.CompletableFuture<RESULT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.CompletableFuture<RESULT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.CompletableFuture<RESULT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.CompletableFutureAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "CompletableFutureAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.CompletableFutureAssert<RESULT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.CompletableFutureAssert<RESULT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.CompletableFuture<RESULT>>' to 'java.util.function.Consumer<? super java.util.concurrent.CompletableFuture<RESULT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.CompletableFuture<RESULT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.CompletableFuture<RESULT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.CompletableFutureAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "CompletableFutureAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.CompletableFutureAssert<RESULT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.CompletableFutureAssert<RESULT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.CompletableFuture<RESULT>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.CompletableFuture<RESULT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.CompletableFuture<RESULT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.CompletableFuture<RESULT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.CompletableFutureAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "CompletableFutureAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.DateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.DateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Date>' to 'java.util.function.Consumer<? super java.util.Date>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Date>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Date>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.DateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.DateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Date>' to 'java.util.function.Consumer<? super java.util.Date>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Date>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Date>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.DateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.DateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Date>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.Date>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Date>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.Date>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.Double2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Double2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<double[][]>' to 'java.util.function.Consumer<? super double[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<double[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super double[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Double2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Double2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Double2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Double2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<double[][]>' to 'java.util.function.Consumer<? super double[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<double[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super double[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Double2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Double2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Double2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.Double2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<double[][]>' to 'org.assertj.core.api.ThrowingConsumer<? super double[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<double[][]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super double[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Double2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Double2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.DoubleArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.DoubleArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<double[]>' to 'java.util.function.Consumer<? super double[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<double[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super double[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DoubleArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DoubleArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.DoubleArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.DoubleArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<double[]>' to 'java.util.function.Consumer<? super double[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<double[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super double[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DoubleArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DoubleArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.DoubleArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.DoubleArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<double[]>' to 'org.assertj.core.api.ThrowingConsumer<? super double[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<double[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super double[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DoubleArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DoubleArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.DoubleAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.DoubleAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Double>' to 'java.util.function.Consumer<? super java.lang.Double>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Double>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Double>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DoubleAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DoubleAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.DoubleAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.DoubleAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Double>' to 'java.util.function.Consumer<? super java.lang.Double>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Double>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Double>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DoubleAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DoubleAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.DoubleAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.DoubleAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Double>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Double>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Double>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Double>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DoubleAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DoubleAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.DoublePredicateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.DoublePredicateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.function.DoublePredicate>' to 'java.util.function.Consumer<? super java.util.function.DoublePredicate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.function.DoublePredicate>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.function.DoublePredicate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DoublePredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DoublePredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.DoublePredicateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.DoublePredicateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.function.DoublePredicate>' to 'java.util.function.Consumer<? super java.util.function.DoublePredicate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.function.DoublePredicate>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.function.DoublePredicate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DoublePredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DoublePredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.DoublePredicateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.DoublePredicateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.function.DoublePredicate>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.function.DoublePredicate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.function.DoublePredicate>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.function.DoublePredicate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DoublePredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DoublePredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.DurationAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.DurationAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Duration>' to 'java.util.function.Consumer<? super java.time.Duration>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Duration>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.Duration>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DurationAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DurationAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.DurationAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.DurationAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Duration>' to 'java.util.function.Consumer<? super java.time.Duration>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Duration>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.Duration>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DurationAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DurationAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.DurationAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.DurationAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Duration>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.Duration>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Duration>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.Duration>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.DurationAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "DurationAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.FactoryBasedNavigableIterableAssert<SELF extends org.assertj.core.api.FactoryBasedNavigableIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.FactoryBasedNavigableIterableAssert<SELF extends org.assertj.core.api.FactoryBasedNavigableIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FactoryBasedNavigableIterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FactoryBasedNavigableIterableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.FactoryBasedNavigableIterableAssert<SELF extends org.assertj.core.api.FactoryBasedNavigableIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.FactoryBasedNavigableIterableAssert<SELF extends org.assertj.core.api.FactoryBasedNavigableIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FactoryBasedNavigableIterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FactoryBasedNavigableIterableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.FactoryBasedNavigableIterableAssert<SELF extends org.assertj.core.api.FactoryBasedNavigableIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.FactoryBasedNavigableIterableAssert<SELF extends org.assertj.core.api.FactoryBasedNavigableIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>' to 'org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Iterable<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Iterable<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FactoryBasedNavigableIterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FactoryBasedNavigableIterableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.FactoryBasedNavigableListAssert<SELF extends org.assertj.core.api.FactoryBasedNavigableListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.FactoryBasedNavigableListAssert<SELF extends org.assertj.core.api.FactoryBasedNavigableListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FactoryBasedNavigableListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FactoryBasedNavigableListAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.FactoryBasedNavigableListAssert<SELF extends org.assertj.core.api.FactoryBasedNavigableListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.FactoryBasedNavigableListAssert<SELF extends org.assertj.core.api.FactoryBasedNavigableListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>' to 'java.util.function.Consumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FactoryBasedNavigableListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FactoryBasedNavigableListAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.FactoryBasedNavigableListAssert<SELF extends org.assertj.core.api.FactoryBasedNavigableListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.FactoryBasedNavigableListAssert<SELF extends org.assertj.core.api.FactoryBasedNavigableListAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>' to 'org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.util.List<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.util.List<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FactoryBasedNavigableListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FactoryBasedNavigableListAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.visibilityReduced",
  "old" : "method void org.assertj.core.api.Fail::<init>()",
  "new" : "method void org.assertj.core.api.Fail::<init>()",
  "name" : "visibility reduced",
  "description" : "visibility reduced",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldVisibility",
    "value" : "protected"
  }, {
    "name" : "newVisibility",
    "value" : "private"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Fail"
  }, {
    "name" : "classSimpleName",
    "value" : "Fail"
  }, {
    "name" : "methodName",
    "value" : "<init>"
  }, {
    "name" : "elementKind",
    "value" : "constructor"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.FileAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.FileAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.io.File>' to 'java.util.function.Consumer<? super java.io.File>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.io.File>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.io.File>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FileAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FileAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.FileAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.FileAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.io.File>' to 'java.util.function.Consumer<? super java.io.File>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.io.File>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.io.File>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FileAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FileAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.FileAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.FileAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.io.File>' to 'org.assertj.core.api.ThrowingConsumer<? super java.io.File>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.io.File>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.io.File>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FileAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FileAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.Float2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Float2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<float[][]>' to 'java.util.function.Consumer<? super float[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<float[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super float[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Float2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Float2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Float2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Float2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<float[][]>' to 'java.util.function.Consumer<? super float[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<float[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super float[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Float2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Float2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Float2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.Float2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<float[][]>' to 'org.assertj.core.api.ThrowingConsumer<? super float[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<float[][]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super float[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Float2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Float2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.FloatArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.FloatArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<float[]>' to 'java.util.function.Consumer<? super float[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<float[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super float[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FloatArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FloatArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.FloatArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.FloatArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<float[]>' to 'java.util.function.Consumer<? super float[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<float[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super float[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FloatArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FloatArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.FloatArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.FloatArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<float[]>' to 'org.assertj.core.api.ThrowingConsumer<? super float[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<float[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super float[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FloatArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FloatArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.FloatAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.FloatAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Float>' to 'java.util.function.Consumer<? super java.lang.Float>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Float>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Float>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FloatAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FloatAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.FloatAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.FloatAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Float>' to 'java.util.function.Consumer<? super java.lang.Float>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Float>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Float>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FloatAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FloatAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.FloatAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.FloatAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Float>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Float>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Float>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Float>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FloatAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FloatAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.FloatingPointNumberAssert<SELF extends org.assertj.core.api.FloatingPointNumberAssert<SELF, ACTUAL>, ACTUAL extends java.lang.Number>::isFinite()",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FloatingPointNumberAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FloatingPointNumberAssert"
  }, {
    "name" : "methodName",
    "value" : "isFinite"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.FloatingPointNumberAssert<SELF extends org.assertj.core.api.FloatingPointNumberAssert<SELF, ACTUAL>, ACTUAL extends java.lang.Number>::isInfinite()",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FloatingPointNumberAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FloatingPointNumberAssert"
  }, {
    "name" : "methodName",
    "value" : "isInfinite"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.FloatingPointNumberAssert<SELF extends org.assertj.core.api.FloatingPointNumberAssert<SELF, ACTUAL>, ACTUAL extends java.lang.Number>::isNotFinite()",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FloatingPointNumberAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FloatingPointNumberAssert"
  }, {
    "name" : "methodName",
    "value" : "isNotFinite"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.FloatingPointNumberAssert<SELF extends org.assertj.core.api.FloatingPointNumberAssert<SELF, ACTUAL>, ACTUAL extends java.lang.Number>::isNotInfinite()",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FloatingPointNumberAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FloatingPointNumberAssert"
  }, {
    "name" : "methodName",
    "value" : "isNotInfinite"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.FutureAssert<RESULT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.FutureAssert<RESULT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.Future<RESULT>>' to 'java.util.function.Consumer<? super java.util.concurrent.Future<RESULT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.Future<RESULT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.Future<RESULT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FutureAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FutureAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.FutureAssert<RESULT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.FutureAssert<RESULT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.Future<RESULT>>' to 'java.util.function.Consumer<? super java.util.concurrent.Future<RESULT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.Future<RESULT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.Future<RESULT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FutureAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FutureAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.FutureAssert<RESULT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.FutureAssert<RESULT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.Future<RESULT>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.Future<RESULT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.Future<RESULT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.Future<RESULT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.FutureAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "FutureAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.GenericComparableAssert<ACTUAL extends java.lang.Comparable<? super ACTUAL>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.GenericComparableAssert<ACTUAL extends java.lang.Comparable<? super ACTUAL>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Comparable<? super ACTUAL>>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Comparable<? super ACTUAL>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Comparable<? super ACTUAL>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Comparable<? super ACTUAL>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.GenericComparableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "GenericComparableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.GenericComparableAssert<ACTUAL extends java.lang.Comparable<? super ACTUAL>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.GenericComparableAssert<ACTUAL extends java.lang.Comparable<? super ACTUAL>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Comparable<? super ACTUAL>>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Comparable<? super ACTUAL>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Comparable<? super ACTUAL>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Comparable<? super ACTUAL>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.GenericComparableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "GenericComparableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.GenericComparableAssert<ACTUAL extends java.lang.Comparable<? super ACTUAL>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.GenericComparableAssert<ACTUAL extends java.lang.Comparable<? super ACTUAL>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ACTUAL extends java.lang.Comparable<? super ACTUAL>>' to 'org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Comparable<? super ACTUAL>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ACTUAL extends java.lang.Comparable<? super ACTUAL>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Comparable<? super ACTUAL>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.GenericComparableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "GenericComparableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.InputStreamAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.InputStreamAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.io.InputStream>' to 'java.util.function.Consumer<? super java.io.InputStream>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.io.InputStream>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.io.InputStream>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.InputStreamAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "InputStreamAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.InputStreamAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.InputStreamAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.io.InputStream>' to 'java.util.function.Consumer<? super java.io.InputStream>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.io.InputStream>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.io.InputStream>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.InputStreamAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "InputStreamAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.InputStreamAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.InputStreamAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.io.InputStream>' to 'org.assertj.core.api.ThrowingConsumer<? super java.io.InputStream>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.io.InputStream>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.io.InputStream>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.InputStreamAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "InputStreamAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.InstantAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.InstantAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Instant>' to 'java.util.function.Consumer<? super java.time.Instant>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Instant>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.Instant>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.InstantAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "InstantAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.InstantAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.InstantAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Instant>' to 'java.util.function.Consumer<? super java.time.Instant>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Instant>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.Instant>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.InstantAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "InstantAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.InstantAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.InstantAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Instant>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.Instant>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Instant>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.Instant>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.InstantAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "InstantAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.Int2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Int2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<int[][]>' to 'java.util.function.Consumer<? super int[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<int[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super int[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Int2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Int2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Int2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Int2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<int[][]>' to 'java.util.function.Consumer<? super int[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<int[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super int[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Int2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Int2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Int2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.Int2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<int[][]>' to 'org.assertj.core.api.ThrowingConsumer<? super int[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<int[][]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super int[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Int2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Int2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.IntArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.IntArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<int[]>' to 'java.util.function.Consumer<? super int[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<int[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super int[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IntArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IntArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.IntArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.IntArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<int[]>' to 'java.util.function.Consumer<? super int[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<int[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super int[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IntArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IntArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.IntArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.IntArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<int[]>' to 'org.assertj.core.api.ThrowingConsumer<? super int[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<int[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super int[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IntArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IntArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.IntPredicateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.IntPredicateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.function.IntPredicate>' to 'java.util.function.Consumer<? super java.util.function.IntPredicate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.function.IntPredicate>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.function.IntPredicate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IntPredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IntPredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.IntPredicateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.IntPredicateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.function.IntPredicate>' to 'java.util.function.Consumer<? super java.util.function.IntPredicate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.function.IntPredicate>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.function.IntPredicate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IntPredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IntPredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.IntPredicateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.IntPredicateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.function.IntPredicate>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.function.IntPredicate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.function.IntPredicate>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.function.IntPredicate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IntPredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IntPredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.IntegerAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.IntegerAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'java.util.function.Consumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.IntegerAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.IntegerAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'java.util.function.Consumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.IntegerAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.IntegerAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IntegerAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IntegerAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::contains(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::contains(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.IterableAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "contains"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::contains(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::contains(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.IterableAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "contains"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsAnyOf(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsAnyOf(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.IterableAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsAnyOf(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsAnyOf(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.IterableAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsExactly(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsExactly(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.IterableAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsExactly(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsExactly(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.IterableAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsExactlyInAnyOrder(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsExactlyInAnyOrder(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.IterableAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactlyInAnyOrder"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsExactlyInAnyOrder(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsExactlyInAnyOrder(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.IterableAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactlyInAnyOrder"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsOnly(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsOnly(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.IterableAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsOnly(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsOnly(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.IterableAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsOnlyOnce(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsOnlyOnce(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.IterableAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnlyOnce"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsOnlyOnce(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsOnlyOnce(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.IterableAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnlyOnce"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsSequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsSequence(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.IterableAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsSequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsSequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsSequence(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.IterableAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsSequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsSubsequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsSubsequence(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.IterableAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::containsSubsequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsSubsequence(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.IterableAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "containsSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::doesNotContain(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::doesNotContain(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.IterableAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContain"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::doesNotContain(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::doesNotContain(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.IterableAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContain"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::doesNotContainSequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::doesNotContainSequence(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.IterableAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainSequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::doesNotContainSequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::doesNotContainSequence(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.IterableAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainSequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::doesNotContainSubsequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::doesNotContainSubsequence(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.IterableAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::doesNotContainSubsequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::doesNotContainSubsequence(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.IterableAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::endsWith(ELEMENT, ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::endsWith(ELEMENT, ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.IterableAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "endsWith"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::endsWith(ELEMENT, ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::endsWith(ELEMENT, ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.IterableAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "endsWith"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::isSubsetOf(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::isSubsetOf(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.IterableAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "isSubsetOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT>::isSubsetOf(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::isSubsetOf(ELEMENT[]) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.IterableAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "isSubsetOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Iterable<? extends ELEMENT>>' to 'java.util.function.Consumer<? super java.lang.Iterable<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Iterable<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Iterable<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Iterable<? extends ELEMENT>>' to 'java.util.function.Consumer<? super java.lang.Iterable<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Iterable<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Iterable<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.IterableAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Iterable<? extends ELEMENT>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Iterable<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Iterable<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Iterable<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.IterableSizeAssert<T>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.IterableSizeAssert<T>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'java.util.function.Consumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableSizeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableSizeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.IterableSizeAssert<T>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.IterableSizeAssert<T>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'java.util.function.Consumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableSizeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableSizeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.IterableSizeAssert<T>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.IterableSizeAssert<T>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IterableSizeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IterableSizeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.IteratorAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.IteratorAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Iterator<? extends ELEMENT>>' to 'java.util.function.Consumer<? super java.util.Iterator<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Iterator<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Iterator<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IteratorAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IteratorAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.IteratorAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.IteratorAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Iterator<? extends ELEMENT>>' to 'java.util.function.Consumer<? super java.util.Iterator<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Iterator<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Iterator<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IteratorAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IteratorAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.IteratorAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.IteratorAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Iterator<? extends ELEMENT>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.Iterator<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Iterator<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.Iterator<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.IteratorAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "IteratorAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.Java6Assertions::assertThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.Java6Assertions::assertThat(T)",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6Assertions"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6Assertions"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.Java6Assertions::assertThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.Java6Assertions::assertThat(T)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T extends java.lang.Throwable'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T extends java.lang.Throwable"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6Assertions"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6Assertions"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.Java6BDDAssertions::then(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.Java6BDDAssertions::then(T)",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDAssertions"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.Java6BDDAssertions::then(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.Java6BDDAssertions::then(T)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T extends java.lang.Throwable'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T extends java.lang.Throwable"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDAssertions"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method org.assertj.core.api.ProxyableClassAssert org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.lang.Class<?>)",
  "new" : "method org.assertj.core.api.ClassAssert org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.lang.Class<?>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableClassAssert' to  'org.assertj.core.api.ClassAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableClassAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ClassAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableIterableAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.lang.Iterable<? extends T>)",
  "new" : "method <T> org.assertj.core.api.IterableAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.lang.Iterable<? extends T>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableIterableAssert<T>' to  'org.assertj.core.api.IterableAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableIterableAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.IterableAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(T)",
  "new" : "method <T> org.assertj.core.api.ObjectAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(T)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectAssert<T>' to  'org.assertj.core.api.ObjectAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectArrayAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(T[])",
  "new" : "method <T> org.assertj.core.api.ObjectArrayAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(T[])",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectArrayAssert<T>' to  'org.assertj.core.api.ObjectArrayAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectArrayAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectArrayAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeTypeParametersChanged",
  "old" : "method org.assertj.core.api.ThrowableAssert org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.ThrowableAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(T)",
  "name" : "return type changed type parameter",
  "description" : "The return type changed from 'org.assertj.core.api.ThrowableAssert' to 'org.assertj.core.api.ThrowableAssert<T extends java.lang.Throwable>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ThrowableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowableAssert<T extends java.lang.Throwable>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method org.assertj.core.api.ThrowableAssert org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.ThrowableAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(T)",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method org.assertj.core.api.ThrowableAssert org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.ThrowableAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(T)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T extends java.lang.Throwable'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T extends java.lang.Throwable"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableListAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.util.List<? extends T>)",
  "new" : "method <T> org.assertj.core.api.CollectionAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.util.Collection<? extends T>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableListAssert<T>' to  'org.assertj.core.api.CollectionAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableListAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.CollectionAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T> org.assertj.core.api.ProxyableListAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(===java.util.List<? extends T>===)",
  "new" : "parameter <T> org.assertj.core.api.CollectionAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(===java.util.Collection<? extends T>===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.List<? extends T>' to 'java.util.Collection<? extends T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.List<? extends T>"
  }, {
    "name" : "newType",
    "value" : "java.util.Collection<? extends T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <K, V> org.assertj.core.api.ProxyableMapAssert<K, V> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.util.Map<K, V>)",
  "new" : "method <T> org.assertj.core.api.ListAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.util.List<? extends T>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableMapAssert<K, V>' to  'org.assertj.core.api.ListAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableMapAssert<K, V>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ListAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterRemoved",
  "old" : "method <K, V> org.assertj.core.api.ProxyableMapAssert<K, V> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.util.Map<K, V>)",
  "new" : "method <T> org.assertj.core.api.ListAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(java.util.List<? extends T>)",
  "name" : "formal type parameter removed",
  "description" : "The formal type parameter 'V' was removed from the element.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "V"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <K, V> org.assertj.core.api.ProxyableMapAssert<K, V> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(===java.util.Map<K, V>===)",
  "new" : "parameter <T> org.assertj.core.api.ListAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::then(===java.util.List<? extends T>===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.Map<K, V>' to 'java.util.List<? extends T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.Map<K, V>"
  }, {
    "name" : "newType",
    "value" : "java.util.List<? extends T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "then"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::thenObject(T)",
  "new" : "method <T> org.assertj.core.api.ObjectAssert<T> org.assertj.core.api.Java6BDDSoftAssertionsProvider::thenObject(T)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectAssert<T>' to  'org.assertj.core.api.ObjectAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6BDDSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "thenObject"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method org.assertj.core.api.ProxyableClassAssert org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.lang.Class<?>)",
  "new" : "method org.assertj.core.api.ClassAssert org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.lang.Class<?>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableClassAssert' to  'org.assertj.core.api.ClassAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableClassAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ClassAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableIterableAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.lang.Iterable<? extends T>)",
  "new" : "method <T> org.assertj.core.api.IterableAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.lang.Iterable<? extends T>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableIterableAssert<T>' to  'org.assertj.core.api.IterableAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableIterableAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.IterableAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(T)",
  "new" : "method <T> org.assertj.core.api.ObjectAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(T)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectAssert<T>' to  'org.assertj.core.api.ObjectAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectArrayAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(T[])",
  "new" : "method <T> org.assertj.core.api.ObjectArrayAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(T[])",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectArrayAssert<T>' to  'org.assertj.core.api.ObjectArrayAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectArrayAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectArrayAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeTypeParametersChanged",
  "old" : "method org.assertj.core.api.ThrowableAssert org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.ThrowableAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(T)",
  "name" : "return type changed type parameter",
  "description" : "The return type changed from 'org.assertj.core.api.ThrowableAssert' to 'org.assertj.core.api.ThrowableAssert<T extends java.lang.Throwable>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ThrowableAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowableAssert<T extends java.lang.Throwable>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method org.assertj.core.api.ThrowableAssert org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.ThrowableAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(T)",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method org.assertj.core.api.ThrowableAssert org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.ThrowableAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(T)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T extends java.lang.Throwable'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T extends java.lang.Throwable"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableListAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.util.List<? extends T>)",
  "new" : "method <T> org.assertj.core.api.CollectionAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.util.Collection<? extends T>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableListAssert<T>' to  'org.assertj.core.api.CollectionAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableListAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.CollectionAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T> org.assertj.core.api.ProxyableListAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(===java.util.List<? extends T>===)",
  "new" : "parameter <T> org.assertj.core.api.CollectionAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(===java.util.Collection<? extends T>===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.List<? extends T>' to 'java.util.Collection<? extends T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.List<? extends T>"
  }, {
    "name" : "newType",
    "value" : "java.util.Collection<? extends T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <K, V> org.assertj.core.api.ProxyableMapAssert<K, V> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.util.Map<K, V>)",
  "new" : "method <T> org.assertj.core.api.ListAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.util.List<? extends T>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableMapAssert<K, V>' to  'org.assertj.core.api.ListAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableMapAssert<K, V>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ListAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterRemoved",
  "old" : "method <K, V> org.assertj.core.api.ProxyableMapAssert<K, V> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.util.Map<K, V>)",
  "new" : "method <T> org.assertj.core.api.ListAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.util.List<? extends T>)",
  "name" : "formal type parameter removed",
  "description" : "The formal type parameter 'V' was removed from the element.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "V"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <K, V> org.assertj.core.api.ProxyableMapAssert<K, V> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(===java.util.Map<K, V>===)",
  "new" : "parameter <T> org.assertj.core.api.ListAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(===java.util.List<? extends T>===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.Map<K, V>' to 'java.util.List<? extends T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.Map<K, V>"
  }, {
    "name" : "newType",
    "value" : "java.util.List<? extends T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThatObject(T)",
  "new" : "method <T> org.assertj.core.api.ObjectAssert<T> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThatObject(T)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectAssert<T>' to  'org.assertj.core.api.ObjectAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "Java6StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThatObject"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::contains(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::contains(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "contains"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::contains(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::contains(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "contains"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsAnyOf(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsAnyOf(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsAnyOf(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsAnyOf(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsExactly(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsExactly(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsExactly(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsExactly(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsExactlyInAnyOrder(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsExactlyInAnyOrder(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactlyInAnyOrder"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsExactlyInAnyOrder(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsExactlyInAnyOrder(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactlyInAnyOrder"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsOnly(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsOnly(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsOnly(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsOnly(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsOnlyOnce(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsOnlyOnce(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnlyOnce"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsOnlyOnce(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsOnlyOnce(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnlyOnce"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsSequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsSequence(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsSequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsSequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsSequence(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsSequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsSubsequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsSubsequence(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::containsSubsequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::containsSubsequence(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "containsSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::doesNotContain(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::doesNotContain(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContain"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::doesNotContain(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::doesNotContain(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContain"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::doesNotContainSequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::doesNotContainSequence(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainSequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::doesNotContainSequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::doesNotContainSequence(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainSequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::doesNotContainSubsequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::doesNotContainSubsequence(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::doesNotContainSubsequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::doesNotContainSubsequence(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::endsWith(ELEMENT, ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::endsWith(ELEMENT, ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "endsWith"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::endsWith(ELEMENT, ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::endsWith(ELEMENT, ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "endsWith"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::isSubsetOf(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::isSubsetOf(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "isSubsetOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::isSubsetOf(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::isSubsetOf(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "isSubsetOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.List<? extends ELEMENT>>' to 'java.util.function.Consumer<? super java.util.List<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.List<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.List<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.List<? extends ELEMENT>>' to 'java.util.function.Consumer<? super java.util.List<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.List<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.List<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.List<? extends ELEMENT>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.List<? extends ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.List<? extends ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.List<? extends ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::startsWith(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::startsWith(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ListAssert' to 'org.assertj.core.api.AbstractIterableAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractIterableAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "startsWith"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ListAssert<ELEMENT> org.assertj.core.api.ListAssert<ELEMENT>::startsWith(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>::startsWith(ELEMENT[]) @ org.assertj.core.api.ListAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ListAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ListAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractIterableAssert<SELF extends org.assertj.core.api.AbstractIterableAssert<SELF, ACTUAL, ELEMENT, ELEMENT_ASSERT>, ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ListAssert"
  }, {
    "name" : "methodName",
    "value" : "startsWith"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.LocalDateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LocalDateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalDate>' to 'java.util.function.Consumer<? super java.time.LocalDate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalDate>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.LocalDate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LocalDateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LocalDateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LocalDateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LocalDateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalDate>' to 'java.util.function.Consumer<? super java.time.LocalDate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalDate>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.LocalDate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LocalDateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LocalDateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LocalDateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.LocalDateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalDate>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.LocalDate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalDate>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.LocalDate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LocalDateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LocalDateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.LocalDateTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LocalDateTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalDateTime>' to 'java.util.function.Consumer<? super java.time.LocalDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalDateTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.LocalDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LocalDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LocalDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LocalDateTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LocalDateTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalDateTime>' to 'java.util.function.Consumer<? super java.time.LocalDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalDateTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.LocalDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LocalDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LocalDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LocalDateTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.LocalDateTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalDateTime>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.LocalDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalDateTime>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.LocalDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LocalDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LocalDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.LocalTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LocalTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalTime>' to 'java.util.function.Consumer<? super java.time.LocalTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.LocalTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LocalTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LocalTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LocalTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LocalTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalTime>' to 'java.util.function.Consumer<? super java.time.LocalTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.LocalTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LocalTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LocalTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LocalTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.LocalTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.LocalTime>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.LocalTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.LocalTime>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.LocalTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LocalTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LocalTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.Long2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Long2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<long[][]>' to 'java.util.function.Consumer<? super long[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<long[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super long[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Long2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Long2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Long2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Long2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<long[][]>' to 'java.util.function.Consumer<? super long[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<long[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super long[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Long2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Long2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Long2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.Long2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<long[][]>' to 'org.assertj.core.api.ThrowingConsumer<? super long[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<long[][]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super long[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Long2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Long2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.LongAdderAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LongAdderAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.LongAdder>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.LongAdder>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.LongAdder>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.LongAdder>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LongAdderAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LongAdderAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LongAdderAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LongAdderAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.LongAdder>' to 'java.util.function.Consumer<? super java.util.concurrent.atomic.LongAdder>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.LongAdder>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.concurrent.atomic.LongAdder>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LongAdderAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LongAdderAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LongAdderAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.LongAdderAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.concurrent.atomic.LongAdder>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.LongAdder>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.concurrent.atomic.LongAdder>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.concurrent.atomic.LongAdder>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LongAdderAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LongAdderAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.LongArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LongArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<long[]>' to 'java.util.function.Consumer<? super long[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<long[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super long[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LongArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LongArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LongArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LongArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<long[]>' to 'java.util.function.Consumer<? super long[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<long[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super long[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LongArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LongArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LongArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.LongArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<long[]>' to 'org.assertj.core.api.ThrowingConsumer<? super long[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<long[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super long[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LongArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LongArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.LongAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LongAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Long>' to 'java.util.function.Consumer<? super java.lang.Long>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Long>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Long>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LongAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LongAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Long>' to 'java.util.function.Consumer<? super java.lang.Long>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Long>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Long>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LongAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.LongAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Long>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Long>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Long>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Long>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.LongPredicateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LongPredicateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.function.LongPredicate>' to 'java.util.function.Consumer<? super java.util.function.LongPredicate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.function.LongPredicate>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.function.LongPredicate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LongPredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LongPredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LongPredicateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.LongPredicateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.function.LongPredicate>' to 'java.util.function.Consumer<? super java.util.function.LongPredicate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.function.LongPredicate>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.function.LongPredicate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LongPredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LongPredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.LongPredicateAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.LongPredicateAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.function.LongPredicate>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.function.LongPredicate>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.function.LongPredicate>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.function.LongPredicate>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.LongPredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "LongPredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::contains(java.util.Map.Entry<? extends KEY, ? extends VALUE>[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::contains(java.util.Map.Entry<? extends K, ? extends V>[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.MapAssert' to 'org.assertj.core.api.AbstractMapAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractMapAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "contains"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::contains(java.util.Map.Entry<? extends KEY, ? extends VALUE>[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::contains(java.util.Map.Entry<? extends K, ? extends V>[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.MapAssert<KEY, VALUE>' but is now declared in superclass 'org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.MapAssert<KEY, VALUE>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "contains"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::containsAnyOf(java.util.Map.Entry<? extends KEY, ? extends VALUE>[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::containsAnyOf(java.util.Map.Entry<? extends K, ? extends V>[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.MapAssert' to 'org.assertj.core.api.AbstractMapAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractMapAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "containsAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::containsAnyOf(java.util.Map.Entry<? extends KEY, ? extends VALUE>[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::containsAnyOf(java.util.Map.Entry<? extends K, ? extends V>[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.MapAssert<KEY, VALUE>' but is now declared in superclass 'org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.MapAssert<KEY, VALUE>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "containsAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::containsExactly(java.util.Map.Entry<? extends KEY, ? extends VALUE>[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::containsExactly(java.util.Map.Entry<? extends K, ? extends V>[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.MapAssert' to 'org.assertj.core.api.AbstractMapAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractMapAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::containsExactly(java.util.Map.Entry<? extends KEY, ? extends VALUE>[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::containsExactly(java.util.Map.Entry<? extends K, ? extends V>[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.MapAssert<KEY, VALUE>' but is now declared in superclass 'org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.MapAssert<KEY, VALUE>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::containsKeys(KEY[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::containsKeys(K[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.MapAssert' to 'org.assertj.core.api.AbstractMapAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractMapAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "containsKeys"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::containsKeys(KEY[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::containsKeys(K[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.MapAssert<KEY, VALUE>' but is now declared in superclass 'org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.MapAssert<KEY, VALUE>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "containsKeys"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::containsOnly(java.util.Map.Entry<? extends KEY, ? extends VALUE>[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::containsOnly(java.util.Map.Entry<? extends K, ? extends V>[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.MapAssert' to 'org.assertj.core.api.AbstractMapAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractMapAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::containsOnly(java.util.Map.Entry<? extends KEY, ? extends VALUE>[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::containsOnly(java.util.Map.Entry<? extends K, ? extends V>[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.MapAssert<KEY, VALUE>' but is now declared in superclass 'org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.MapAssert<KEY, VALUE>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::containsOnlyKeys(KEY[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::containsOnlyKeys(K[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.MapAssert' to 'org.assertj.core.api.AbstractMapAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractMapAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnlyKeys"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::containsOnlyKeys(KEY[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::containsOnlyKeys(K[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.MapAssert<KEY, VALUE>' but is now declared in superclass 'org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.MapAssert<KEY, VALUE>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnlyKeys"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::containsValues(VALUE[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::containsValues(V[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.MapAssert' to 'org.assertj.core.api.AbstractMapAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractMapAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "containsValues"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::containsValues(VALUE[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::containsValues(V[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.MapAssert<KEY, VALUE>' but is now declared in superclass 'org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.MapAssert<KEY, VALUE>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "containsValues"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::doesNotContain(java.util.Map.Entry<? extends KEY, ? extends VALUE>[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::doesNotContain(java.util.Map.Entry<? extends K, ? extends V>[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.MapAssert' to 'org.assertj.core.api.AbstractMapAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractMapAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContain"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::doesNotContain(java.util.Map.Entry<? extends KEY, ? extends VALUE>[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::doesNotContain(java.util.Map.Entry<? extends K, ? extends V>[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.MapAssert<KEY, VALUE>' but is now declared in superclass 'org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.MapAssert<KEY, VALUE>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContain"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::doesNotContainKeys(KEY[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::doesNotContainKeys(K[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.MapAssert' to 'org.assertj.core.api.AbstractMapAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractMapAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainKeys"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.MapAssert<KEY, VALUE> org.assertj.core.api.MapAssert<KEY, VALUE>::doesNotContainKeys(KEY[])",
  "new" : "method SELF org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>::doesNotContainKeys(K[]) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.MapAssert<KEY, VALUE>' but is now declared in superclass 'org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.MapAssert<KEY, VALUE>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractMapAssert<SELF extends org.assertj.core.api.AbstractMapAssert<SELF, ACTUAL, K, V>, ACTUAL extends java.util.Map<K, V>, K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainKeys"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Map<KEY, VALUE>>' to 'java.util.function.Consumer<? super java.util.Map<KEY, VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Map<KEY, VALUE>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Map<KEY, VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Map<KEY, VALUE>>' to 'java.util.function.Consumer<? super java.util.Map<KEY, VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Map<KEY, VALUE>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Map<KEY, VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.MapAssert<KEY, VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Map<KEY, VALUE>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.Map<KEY, VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Map<KEY, VALUE>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.Map<KEY, VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.MapSizeAssert<KEY, VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.MapSizeAssert<KEY, VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'java.util.function.Consumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapSizeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapSizeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.MapSizeAssert<KEY, VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.MapSizeAssert<KEY, VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'java.util.function.Consumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapSizeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapSizeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.MapSizeAssert<KEY, VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.MapSizeAssert<KEY, VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Integer>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Integer>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Integer>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Integer>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.MapSizeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "MapSizeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.Object2DArrayAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Object2DArrayAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ELEMENT[][]>' to 'java.util.function.Consumer<? super ELEMENT[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ELEMENT[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ELEMENT[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Object2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Object2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Object2DArrayAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Object2DArrayAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ELEMENT[][]>' to 'java.util.function.Consumer<? super ELEMENT[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ELEMENT[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ELEMENT[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Object2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Object2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Object2DArrayAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.Object2DArrayAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ELEMENT[][]>' to 'org.assertj.core.api.ThrowingConsumer<? super ELEMENT[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ELEMENT[][]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ELEMENT[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Object2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Object2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::contains(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::contains(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ObjectArrayAssert' to 'org.assertj.core.api.AbstractObjectArrayAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "contains"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::contains(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::contains(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ObjectArrayAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ObjectArrayAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "contains"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsAnyOf(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsAnyOf(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ObjectArrayAssert' to 'org.assertj.core.api.AbstractObjectArrayAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsAnyOf(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsAnyOf(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ObjectArrayAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ObjectArrayAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsAnyOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsExactly(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsExactly(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ObjectArrayAssert' to 'org.assertj.core.api.AbstractObjectArrayAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsExactly(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsExactly(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ObjectArrayAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ObjectArrayAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsExactlyInAnyOrder(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsExactlyInAnyOrder(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ObjectArrayAssert' to 'org.assertj.core.api.AbstractObjectArrayAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactlyInAnyOrder"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsExactlyInAnyOrder(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsExactlyInAnyOrder(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ObjectArrayAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ObjectArrayAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsExactlyInAnyOrder"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsOnly(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsOnly(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ObjectArrayAssert' to 'org.assertj.core.api.AbstractObjectArrayAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsOnly(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsOnly(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ObjectArrayAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ObjectArrayAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsOnlyOnce(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsOnlyOnce(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ObjectArrayAssert' to 'org.assertj.core.api.AbstractObjectArrayAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnlyOnce"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsOnlyOnce(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsOnlyOnce(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ObjectArrayAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ObjectArrayAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsOnlyOnce"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsSequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsSequence(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ObjectArrayAssert' to 'org.assertj.core.api.AbstractObjectArrayAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsSequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsSequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsSequence(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ObjectArrayAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ObjectArrayAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsSequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsSubsequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsSubsequence(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ObjectArrayAssert' to 'org.assertj.core.api.AbstractObjectArrayAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::containsSubsequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::containsSubsequence(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ObjectArrayAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ObjectArrayAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "containsSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::doesNotContain(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::doesNotContain(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ObjectArrayAssert' to 'org.assertj.core.api.AbstractObjectArrayAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContain"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::doesNotContain(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::doesNotContain(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ObjectArrayAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ObjectArrayAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContain"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::doesNotContainSequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::doesNotContainSequence(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ObjectArrayAssert' to 'org.assertj.core.api.AbstractObjectArrayAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainSequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::doesNotContainSequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::doesNotContainSequence(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ObjectArrayAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ObjectArrayAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainSequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::doesNotContainSubsequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::doesNotContainSubsequence(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ObjectArrayAssert' to 'org.assertj.core.api.AbstractObjectArrayAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::doesNotContainSubsequence(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::doesNotContainSubsequence(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ObjectArrayAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ObjectArrayAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "doesNotContainSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::endsWith(ELEMENT, ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::endsWith(ELEMENT, ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ObjectArrayAssert' to 'org.assertj.core.api.AbstractObjectArrayAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "endsWith"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::endsWith(ELEMENT, ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::endsWith(ELEMENT, ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ObjectArrayAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ObjectArrayAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "endsWith"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::isSubsetOf(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::isSubsetOf(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.ObjectArrayAssert' to 'org.assertj.core.api.AbstractObjectArrayAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "isSubsetOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.ObjectArrayAssert<ELEMENT> org.assertj.core.api.ObjectArrayAssert<ELEMENT>::isSubsetOf(ELEMENT[])",
  "new" : "method SELF org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>::isSubsetOf(ELEMENT[]) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.ObjectArrayAssert<ELEMENT>' but is now declared in superclass 'org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.ObjectArrayAssert<ELEMENT>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractObjectArrayAssert<SELF extends org.assertj.core.api.AbstractObjectArrayAssert<SELF, ELEMENT>, ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "isSubsetOf"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ELEMENT[]>' to 'java.util.function.Consumer<? super ELEMENT[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ELEMENT[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ELEMENT[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ELEMENT[]>' to 'java.util.function.Consumer<? super ELEMENT[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ELEMENT[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ELEMENT[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.ObjectArrayAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<ELEMENT[]>' to 'org.assertj.core.api.ThrowingConsumer<? super ELEMENT[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<ELEMENT[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ELEMENT[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.ObjectEnumerableAssert<SELF extends org.assertj.core.api.ObjectEnumerableAssert<SELF, ELEMENT>, ELEMENT>::allSatisfy(org.assertj.core.api.ThrowingConsumer<? super ELEMENT>)",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectEnumerableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectEnumerableAssert"
  }, {
    "name" : "methodName",
    "value" : "allSatisfy"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.ObjectEnumerableAssert<SELF extends org.assertj.core.api.ObjectEnumerableAssert<SELF, ELEMENT>, ELEMENT>::anySatisfy(org.assertj.core.api.ThrowingConsumer<? super ELEMENT>)",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectEnumerableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectEnumerableAssert"
  }, {
    "name" : "methodName",
    "value" : "anySatisfy"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.ObjectEnumerableAssert<SELF extends org.assertj.core.api.ObjectEnumerableAssert<SELF, ELEMENT>, ELEMENT>::hasExactlyElementsOfTypes(java.lang.Class<?>[])",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectEnumerableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectEnumerableAssert"
  }, {
    "name" : "methodName",
    "value" : "hasExactlyElementsOfTypes"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.ObjectEnumerableAssert<SELF extends org.assertj.core.api.ObjectEnumerableAssert<SELF, ELEMENT>, ELEMENT>::noneSatisfy(org.assertj.core.api.ThrowingConsumer<? super ELEMENT>)",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectEnumerableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectEnumerableAssert"
  }, {
    "name" : "methodName",
    "value" : "noneSatisfy"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.ObjectEnumerableAssert<SELF extends org.assertj.core.api.ObjectEnumerableAssert<SELF, ELEMENT>, ELEMENT>::satisfiesExactly(java.util.function.Consumer<? super ELEMENT>[])",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectEnumerableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectEnumerableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesExactly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.ObjectEnumerableAssert<SELF extends org.assertj.core.api.ObjectEnumerableAssert<SELF, ELEMENT>, ELEMENT>::satisfiesExactly(org.assertj.core.api.ThrowingConsumer<? super ELEMENT>[])",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectEnumerableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectEnumerableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesExactly"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.ObjectEnumerableAssert<SELF extends org.assertj.core.api.ObjectEnumerableAssert<SELF, ELEMENT>, ELEMENT>::satisfiesExactlyInAnyOrder(java.util.function.Consumer<? super ELEMENT>[])",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectEnumerableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectEnumerableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesExactlyInAnyOrder"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.addedToInterface",
  "old" : null,
  "new" : "method SELF org.assertj.core.api.ObjectEnumerableAssert<SELF extends org.assertj.core.api.ObjectEnumerableAssert<SELF, ELEMENT>, ELEMENT>::satisfiesExactlyInAnyOrder(org.assertj.core.api.ThrowingConsumer<? super ELEMENT>[])",
  "name" : "method added to interface",
  "description" : "Method was added to an interface.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ObjectEnumerableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ObjectEnumerableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesExactlyInAnyOrder"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.OffsetDateTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.OffsetDateTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.OffsetDateTime>' to 'java.util.function.Consumer<? super java.time.OffsetDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.OffsetDateTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.OffsetDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OffsetDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OffsetDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.OffsetDateTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.OffsetDateTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.OffsetDateTime>' to 'java.util.function.Consumer<? super java.time.OffsetDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.OffsetDateTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.OffsetDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OffsetDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OffsetDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.OffsetDateTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.OffsetDateTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.OffsetDateTime>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.OffsetDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.OffsetDateTime>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.OffsetDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OffsetDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OffsetDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.OffsetTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.OffsetTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.OffsetTime>' to 'java.util.function.Consumer<? super java.time.OffsetTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.OffsetTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.OffsetTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OffsetTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OffsetTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.OffsetTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.OffsetTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.OffsetTime>' to 'java.util.function.Consumer<? super java.time.OffsetTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.OffsetTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.OffsetTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OffsetTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OffsetTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.OffsetTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.OffsetTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.OffsetTime>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.OffsetTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.OffsetTime>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.OffsetTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OffsetTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OffsetTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.OptionalAssert<VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.OptionalAssert<VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Optional<VALUE>>' to 'java.util.function.Consumer<? super java.util.Optional<VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Optional<VALUE>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Optional<VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OptionalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OptionalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.OptionalAssert<VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.OptionalAssert<VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Optional<VALUE>>' to 'java.util.function.Consumer<? super java.util.Optional<VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Optional<VALUE>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Optional<VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OptionalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OptionalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.OptionalAssert<VALUE>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.OptionalAssert<VALUE>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Optional<VALUE>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.Optional<VALUE>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Optional<VALUE>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.Optional<VALUE>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OptionalAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OptionalAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.OptionalDoubleAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.OptionalDoubleAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalDouble>' to 'java.util.function.Consumer<? super java.util.OptionalDouble>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalDouble>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.OptionalDouble>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OptionalDoubleAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OptionalDoubleAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.OptionalDoubleAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.OptionalDoubleAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalDouble>' to 'java.util.function.Consumer<? super java.util.OptionalDouble>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalDouble>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.OptionalDouble>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OptionalDoubleAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OptionalDoubleAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.OptionalDoubleAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.OptionalDoubleAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalDouble>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.OptionalDouble>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalDouble>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.OptionalDouble>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OptionalDoubleAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OptionalDoubleAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.OptionalIntAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.OptionalIntAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalInt>' to 'java.util.function.Consumer<? super java.util.OptionalInt>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalInt>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.OptionalInt>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OptionalIntAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OptionalIntAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.OptionalIntAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.OptionalIntAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalInt>' to 'java.util.function.Consumer<? super java.util.OptionalInt>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalInt>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.OptionalInt>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OptionalIntAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OptionalIntAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.OptionalIntAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.OptionalIntAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalInt>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.OptionalInt>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalInt>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.OptionalInt>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OptionalIntAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OptionalIntAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.OptionalLongAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.OptionalLongAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalLong>' to 'java.util.function.Consumer<? super java.util.OptionalLong>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalLong>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.OptionalLong>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OptionalLongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OptionalLongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.OptionalLongAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.OptionalLongAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalLong>' to 'java.util.function.Consumer<? super java.util.OptionalLong>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalLong>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.OptionalLong>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OptionalLongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OptionalLongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.OptionalLongAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.OptionalLongAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.OptionalLong>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.OptionalLong>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.OptionalLong>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.OptionalLong>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.OptionalLongAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "OptionalLongAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.PathAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.PathAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.nio.file.Path>' to 'java.util.function.Consumer<? super java.nio.file.Path>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.nio.file.Path>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.nio.file.Path>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.PathAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "PathAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.PathAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.PathAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.nio.file.Path>' to 'java.util.function.Consumer<? super java.nio.file.Path>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.nio.file.Path>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.nio.file.Path>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.PathAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "PathAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.PathAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.PathAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.nio.file.Path>' to 'org.assertj.core.api.ThrowingConsumer<? super java.nio.file.Path>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.nio.file.Path>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.nio.file.Path>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.PathAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "PathAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.PeriodAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.PeriodAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Period>' to 'java.util.function.Consumer<? super java.time.Period>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Period>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.Period>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.PeriodAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "PeriodAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.PeriodAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.PeriodAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Period>' to 'java.util.function.Consumer<? super java.time.Period>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Period>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.Period>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.PeriodAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "PeriodAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.PeriodAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.PeriodAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.Period>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.Period>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.Period>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.Period>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.PeriodAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "PeriodAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.PredicateAssert<T> org.assertj.core.api.PredicateAssert<T>::accepts(T[])",
  "new" : "method SELF org.assertj.core.api.AbstractPredicateAssert<SELF extends org.assertj.core.api.AbstractPredicateAssert<SELF, T>, T>::accepts(T[]) @ org.assertj.core.api.PredicateAssert<T>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.PredicateAssert' to 'org.assertj.core.api.AbstractPredicateAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.PredicateAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractPredicateAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.PredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "PredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "accepts"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.PredicateAssert<T> org.assertj.core.api.PredicateAssert<T>::accepts(T[])",
  "new" : "method SELF org.assertj.core.api.AbstractPredicateAssert<SELF extends org.assertj.core.api.AbstractPredicateAssert<SELF, T>, T>::accepts(T[]) @ org.assertj.core.api.PredicateAssert<T>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.PredicateAssert<T>' but is now declared in superclass 'org.assertj.core.api.AbstractPredicateAssert<SELF extends org.assertj.core.api.AbstractPredicateAssert<SELF, T>, T>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.PredicateAssert<T>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractPredicateAssert<SELF extends org.assertj.core.api.AbstractPredicateAssert<SELF, T>, T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.PredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "PredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "accepts"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method org.assertj.core.api.PredicateAssert<T> org.assertj.core.api.PredicateAssert<T>::rejects(T[])",
  "new" : "method SELF org.assertj.core.api.AbstractPredicateAssert<SELF extends org.assertj.core.api.AbstractPredicateAssert<SELF, T>, T>::rejects(T[]) @ org.assertj.core.api.PredicateAssert<T>",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'org.assertj.core.api.PredicateAssert' to 'org.assertj.core.api.AbstractPredicateAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.PredicateAssert"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.AbstractPredicateAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.PredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "PredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "rejects"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method org.assertj.core.api.PredicateAssert<T> org.assertj.core.api.PredicateAssert<T>::rejects(T[])",
  "new" : "method SELF org.assertj.core.api.AbstractPredicateAssert<SELF extends org.assertj.core.api.AbstractPredicateAssert<SELF, T>, T>::rejects(T[]) @ org.assertj.core.api.PredicateAssert<T>",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.api.PredicateAssert<T>' but is now declared in superclass 'org.assertj.core.api.AbstractPredicateAssert<SELF extends org.assertj.core.api.AbstractPredicateAssert<SELF, T>, T>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.PredicateAssert<T>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.AbstractPredicateAssert<SELF extends org.assertj.core.api.AbstractPredicateAssert<SELF, T>, T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.PredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "PredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "rejects"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.PredicateAssert<T>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.PredicateAssert<T>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.function.Predicate<T>>' to 'java.util.function.Consumer<? super java.util.function.Predicate<T>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.function.Predicate<T>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.function.Predicate<T>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.PredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "PredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.PredicateAssert<T>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.PredicateAssert<T>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.function.Predicate<T>>' to 'java.util.function.Consumer<? super java.util.function.Predicate<T>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.function.Predicate<T>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.function.Predicate<T>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.PredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "PredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.PredicateAssert<T>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.PredicateAssert<T>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.function.Predicate<T>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.function.Predicate<T>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.function.Predicate<T>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.function.Predicate<T>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.PredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "PredicateAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.api.ProxyableClassAssert",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ProxyableClassAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ProxyableClassAssert"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.api.ProxyableIterableAssert<ELEMENT>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ProxyableIterableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ProxyableIterableAssert"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.api.ProxyableListAssert<ELEMENT>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ProxyableListAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ProxyableListAssert"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.api.ProxyableMapAssert<KEY, VALUE>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ProxyableMapAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ProxyableMapAssert"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.api.ProxyableObjectArrayAssert<ELEMENT>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ProxyableObjectArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ProxyableObjectArrayAssert"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.api.ProxyableObjectAssert<ACTUAL>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ProxyableObjectAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ProxyableObjectAssert"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.api.ProxyablePredicateAssert<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ProxyablePredicateAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ProxyablePredicateAssert"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.RecursiveComparisonAssert<SELF extends org.assertj.core.api.RecursiveComparisonAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.RecursiveComparisonAssert<SELF extends org.assertj.core.api.RecursiveComparisonAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Object>' to 'java.util.function.Consumer<? super java.lang.Object>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Object>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Object>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.RecursiveComparisonAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "RecursiveComparisonAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.RecursiveComparisonAssert<SELF extends org.assertj.core.api.RecursiveComparisonAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.RecursiveComparisonAssert<SELF extends org.assertj.core.api.RecursiveComparisonAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Object>' to 'java.util.function.Consumer<? super java.lang.Object>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Object>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Object>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.RecursiveComparisonAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "RecursiveComparisonAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.RecursiveComparisonAssert<SELF extends org.assertj.core.api.RecursiveComparisonAssert<SELF>>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.RecursiveComparisonAssert<SELF extends org.assertj.core.api.RecursiveComparisonAssert<SELF>>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Object>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Object>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Object>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Object>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.RecursiveComparisonAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "RecursiveComparisonAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.Short2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Short2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<short[][]>' to 'java.util.function.Consumer<? super short[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<short[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super short[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Short2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Short2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Short2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.Short2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<short[][]>' to 'java.util.function.Consumer<? super short[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<short[][]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super short[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Short2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Short2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.Short2DArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.Short2DArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<short[][]>' to 'org.assertj.core.api.ThrowingConsumer<? super short[][]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<short[][]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super short[][]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.Short2DArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "Short2DArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.ShortArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ShortArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<short[]>' to 'java.util.function.Consumer<? super short[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<short[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super short[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ShortArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ShortArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ShortArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ShortArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<short[]>' to 'java.util.function.Consumer<? super short[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<short[]>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super short[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ShortArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ShortArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ShortArrayAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.ShortArrayAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<short[]>' to 'org.assertj.core.api.ThrowingConsumer<? super short[]>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<short[]>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super short[]>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ShortArrayAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ShortArrayAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.ShortAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ShortAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Short>' to 'java.util.function.Consumer<? super java.lang.Short>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Short>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Short>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ShortAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ShortAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ShortAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ShortAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Short>' to 'java.util.function.Consumer<? super java.lang.Short>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Short>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.Short>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ShortAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ShortAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ShortAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.ShortAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Short>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.Short>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Short>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.Short>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ShortAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ShortAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.SpliteratorAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.SpliteratorAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Spliterator<ELEMENT>>' to 'java.util.function.Consumer<? super java.util.Spliterator<ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Spliterator<ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Spliterator<ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.SpliteratorAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "SpliteratorAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.SpliteratorAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.SpliteratorAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Spliterator<ELEMENT>>' to 'java.util.function.Consumer<? super java.util.Spliterator<ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Spliterator<ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.util.Spliterator<ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.SpliteratorAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "SpliteratorAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.SpliteratorAssert<ELEMENT>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.SpliteratorAssert<ELEMENT>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.util.Spliterator<ELEMENT>>' to 'org.assertj.core.api.ThrowingConsumer<? super java.util.Spliterator<ELEMENT>>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.util.Spliterator<ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.util.Spliterator<ELEMENT>>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.SpliteratorAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "SpliteratorAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.StandardSoftAssertionsProvider::assertThat(java.util.function.Predicate<T>)",
  "new" : "method <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.util.Map<K, V>) @ org.assertj.core.api.StandardSoftAssertionsProvider",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyablePredicateAssert<T>' to  'org.assertj.core.api.MapAssert<K, V>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyablePredicateAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.MapAssert<K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.StandardSoftAssertionsProvider::assertThat(java.util.function.Predicate<T>)",
  "new" : "method <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(java.util.Map<K, V>) @ org.assertj.core.api.StandardSoftAssertionsProvider",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'V'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "V"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.StandardSoftAssertionsProvider::assertThat(===java.util.function.Predicate<T>===)",
  "new" : "parameter <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.Java6StandardSoftAssertionsProvider::assertThat(===java.util.Map<K, V>===) @ org.assertj.core.api.StandardSoftAssertionsProvider",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Predicate<T>' to 'java.util.Map<K, V>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Predicate<T>"
  }, {
    "name" : "newType",
    "value" : "java.util.Map<K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.StandardSoftAssertionsProvider"
  }, {
    "name" : "classSimpleName",
    "value" : "StandardSoftAssertionsProvider"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.StringAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.StringAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.String>' to 'java.util.function.Consumer<? super java.lang.String>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.String>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.String>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.StringAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "StringAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.StringAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.StringAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.String>' to 'java.util.function.Consumer<? super java.lang.String>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.String>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.lang.String>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.StringAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "StringAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.StringAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.StringAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.String>' to 'org.assertj.core.api.ThrowingConsumer<? super java.lang.String>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.String>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.lang.String>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.StringAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "StringAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.noLongerImplementsInterface",
  "old" : "class org.assertj.core.api.ThrowableAssert",
  "new" : "class org.assertj.core.api.ThrowableAssert<ACTUAL extends java.lang.Throwable>",
  "name" : "class no longer implements interface",
  "description" : "Class no longer implements interface 'org.assertj.core.api.Assert<org.assertj.core.api.ThrowableAssert, java.lang.Throwable>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "interface",
    "value" : "org.assertj.core.api.Assert<org.assertj.core.api.ThrowableAssert, java.lang.Throwable>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssert"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.noLongerImplementsInterface",
  "old" : "class org.assertj.core.api.ThrowableAssert",
  "new" : "class org.assertj.core.api.ThrowableAssert<ACTUAL extends java.lang.Throwable>",
  "name" : "class no longer implements interface",
  "description" : "Class no longer implements interface 'org.assertj.core.api.Descriptable<org.assertj.core.api.ThrowableAssert>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "interface",
    "value" : "org.assertj.core.api.Descriptable<org.assertj.core.api.ThrowableAssert>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssert"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.noLongerImplementsInterface",
  "old" : "class org.assertj.core.api.ThrowableAssert",
  "new" : "class org.assertj.core.api.ThrowableAssert<ACTUAL extends java.lang.Throwable>",
  "name" : "class no longer implements interface",
  "description" : "Class no longer implements interface 'org.assertj.core.api.ExtensionPoints<org.assertj.core.api.ThrowableAssert, java.lang.Throwable>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "interface",
    "value" : "org.assertj.core.api.ExtensionPoints<org.assertj.core.api.ThrowableAssert, java.lang.Throwable>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssert"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "class org.assertj.core.api.ThrowableAssert",
  "new" : "class org.assertj.core.api.ThrowableAssert<ACTUAL extends java.lang.Throwable>",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssert"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "class org.assertj.core.api.ThrowableAssert",
  "new" : "class org.assertj.core.api.ThrowableAssert<ACTUAL extends java.lang.Throwable>",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'ACTUAL extends java.lang.Throwable'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "ACTUAL extends java.lang.Throwable"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssert"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.superTypeTypeParametersChanged",
  "old" : "class org.assertj.core.api.ThrowableAssert",
  "new" : "class org.assertj.core.api.ThrowableAssert<ACTUAL extends java.lang.Throwable>",
  "name" : "type parameters of super-type changed",
  "description" : "Super type's type parameters changed from 'org.assertj.core.api.AbstractThrowableAssert<org.assertj.core.api.ThrowableAssert, java.lang.Throwable>' to 'org.assertj.core.api.AbstractThrowableAssert<org.assertj.core.api.ThrowableAssert<ACTUAL>, ACTUAL extends java.lang.Throwable>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldSuperType",
    "value" : "org.assertj.core.api.AbstractThrowableAssert<org.assertj.core.api.ThrowableAssert, java.lang.Throwable>"
  }, {
    "name" : "newSuperType",
    "value" : "org.assertj.core.api.AbstractThrowableAssert<org.assertj.core.api.ThrowableAssert<ACTUAL>, ACTUAL extends java.lang.Throwable>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssert"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.ThrowableAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ThrowableAssert<ACTUAL extends java.lang.Throwable>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Throwable>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Throwable>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Throwable>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Throwable>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ThrowableAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ThrowableAssert<ACTUAL extends java.lang.Throwable>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Throwable>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Throwable>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Throwable>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Throwable>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ThrowableAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.ThrowableAssert<ACTUAL extends java.lang.Throwable>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.lang.Throwable>' to 'org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Throwable>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.lang.Throwable>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Throwable>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChangedCovariantly",
  "old" : "method SELF org.assertj.core.api.Descriptable<SELF>::as(org.assertj.core.description.Description) @ org.assertj.core.api.ThrowableAssertAlternative<T extends java.lang.Throwable>",
  "new" : "method org.assertj.core.api.ThrowableAssertAlternative<ACTUAL> org.assertj.core.api.ThrowableAssertAlternative<ACTUAL extends java.lang.Throwable>::as(org.assertj.core.description.Description)",
  "name" : "return type changed covariantly",
  "description" : "The return type changed covariantly from 'org.assertj.core.api.ThrowableAssertAlternative<T extends java.lang.Throwable>' to 'org.assertj.core.api.ThrowableAssertAlternative<ACTUAL extends java.lang.Throwable>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ThrowableAssertAlternative<T extends java.lang.Throwable>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowableAssertAlternative<ACTUAL extends java.lang.Throwable>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssertAlternative"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssertAlternative"
  }, {
    "name" : "methodName",
    "value" : "as"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.inheritedMovedToClass",
  "old" : "method SELF org.assertj.core.api.Descriptable<SELF>::as(org.assertj.core.description.Description) @ org.assertj.core.api.ThrowableAssertAlternative<T extends java.lang.Throwable>",
  "new" : "method org.assertj.core.api.ThrowableAssertAlternative<ACTUAL> org.assertj.core.api.ThrowableAssertAlternative<ACTUAL extends java.lang.Throwable>::as(org.assertj.core.description.Description)",
  "name" : "inherited method moved to class",
  "description" : "The method was previously declared in superclass 'org.assertj.core.api.Descriptable<SELF>' but is now declared in class 'org.assertj.core.api.ThrowableAssertAlternative<ACTUAL extends java.lang.Throwable>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.api.Descriptable<SELF>"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.api.ThrowableAssertAlternative<ACTUAL extends java.lang.Throwable>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssertAlternative"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssertAlternative"
  }, {
    "name" : "methodName",
    "value" : "as"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.ThrowableAssertAlternative<T extends java.lang.Throwable>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ThrowableAssertAlternative<ACTUAL extends java.lang.Throwable>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<T extends java.lang.Throwable>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Throwable>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<T extends java.lang.Throwable>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Throwable>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssertAlternative"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssertAlternative"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ThrowableAssertAlternative<T extends java.lang.Throwable>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ThrowableAssertAlternative<ACTUAL extends java.lang.Throwable>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<T extends java.lang.Throwable>' to 'java.util.function.Consumer<? super ACTUAL extends java.lang.Throwable>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<T extends java.lang.Throwable>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super ACTUAL extends java.lang.Throwable>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssertAlternative"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssertAlternative"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ThrowableAssertAlternative<T extends java.lang.Throwable>",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.ThrowableAssertAlternative<ACTUAL extends java.lang.Throwable>",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<T extends java.lang.Throwable>' to 'org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Throwable>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<T extends java.lang.Throwable>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super ACTUAL extends java.lang.Throwable>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ThrowableAssertAlternative"
  }, {
    "name" : "classSimpleName",
    "value" : "ThrowableAssertAlternative"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.UriAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.UriAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.net.URI>' to 'java.util.function.Consumer<? super java.net.URI>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.net.URI>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.net.URI>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.UriAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "UriAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.UriAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.UriAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.net.URI>' to 'java.util.function.Consumer<? super java.net.URI>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.net.URI>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.net.URI>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.UriAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "UriAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.UriAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.UriAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.net.URI>' to 'org.assertj.core.api.ThrowingConsumer<? super java.net.URI>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.net.URI>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.net.URI>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.UriAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "UriAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.UrlAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.UrlAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.net.URL>' to 'java.util.function.Consumer<? super java.net.URL>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.net.URL>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.net.URL>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.UrlAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "UrlAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.UrlAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.UrlAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.net.URL>' to 'java.util.function.Consumer<? super java.net.URL>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.net.URL>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.net.URL>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.UrlAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "UrlAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.UrlAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.UrlAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.net.URL>' to 'org.assertj.core.api.ThrowingConsumer<? super java.net.URL>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.net.URL>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.net.URL>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.UrlAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "UrlAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.WithAssertions::assertThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.WithAssertions::assertThat(T)",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.WithAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "WithAssertions"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.WithAssertions::assertThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.WithAssertions::assertThat(T)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T extends java.lang.Throwable'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T extends java.lang.Throwable"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.WithAssertions"
  }, {
    "name" : "classSimpleName",
    "value" : "WithAssertions"
  }, {
    "name" : "methodName",
    "value" : "assertThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method org.assertj.core.api.AbstractClassAssert<?> org.assertj.core.api.WithAssumptions::assumeThat(java.lang.Class<?>)",
  "new" : "method org.assertj.core.api.ClassAssert org.assertj.core.api.WithAssumptions::assumeThat(java.lang.Class<?>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.AbstractClassAssert<?>' to  'org.assertj.core.api.ClassAssert'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.AbstractClassAssert<?>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ClassAssert"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.WithAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "WithAssumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <ELEMENT> org.assertj.core.api.ProxyableIterableAssert<ELEMENT> org.assertj.core.api.WithAssumptions::assumeThat(java.lang.Iterable<? extends ELEMENT>)",
  "new" : "method <ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT> org.assertj.core.api.WithAssumptions::assumeThat(java.lang.Iterable<? extends ELEMENT>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableIterableAssert<ELEMENT>' to  'org.assertj.core.api.IterableAssert<ELEMENT>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableIterableAssert<ELEMENT>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.IterableAssert<ELEMENT>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.WithAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "WithAssumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectAssert<T> org.assertj.core.api.WithAssumptions::assumeThat(T)",
  "new" : "method <T> org.assertj.core.api.ObjectAssert<T> org.assertj.core.api.WithAssumptions::assumeThat(T)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectAssert<T>' to  'org.assertj.core.api.ObjectAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.WithAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "WithAssumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectArrayAssert<T> org.assertj.core.api.WithAssumptions::assumeThat(T[])",
  "new" : "method <T> org.assertj.core.api.ObjectArrayAssert<T> org.assertj.core.api.WithAssumptions::assumeThat(T[])",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectArrayAssert<T>' to  'org.assertj.core.api.ObjectArrayAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectArrayAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectArrayAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.WithAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "WithAssumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.elementNowParameterized",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.WithAssumptions::assumeThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.WithAssumptions::assumeThat(T)",
  "name" : "element now parameterized",
  "description" : "Element now defines formal type parameters.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.WithAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "WithAssumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterAdded",
  "old" : "method org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> org.assertj.core.api.WithAssumptions::assumeThat(java.lang.Throwable)",
  "new" : "method <T extends java.lang.Throwable> org.assertj.core.api.AbstractThrowableAssert<?, T> org.assertj.core.api.WithAssumptions::assumeThat(T)",
  "name" : "formal type parameter added",
  "description" : "A new formal type parameter added to element: 'T extends java.lang.Throwable'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T extends java.lang.Throwable"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.WithAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "WithAssumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeTypeParametersChanged",
  "old" : "method <ELEMENT> org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ProxyableListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> org.assertj.core.api.WithAssumptions::assumeThat(java.util.List<? extends ELEMENT>)",
  "new" : "method <ELEMENT> org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> org.assertj.core.api.WithAssumptions::assumeThat(java.util.List<? extends ELEMENT>)",
  "name" : "return type changed type parameter",
  "description" : "The return type changed from 'org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ProxyableListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>>' to 'org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ProxyableListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.FactoryBasedNavigableListAssert<org.assertj.core.api.ListAssert<ELEMENT>, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.WithAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "WithAssumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChangedCovariantly",
  "old" : "method <K, V> org.assertj.core.api.AbstractMapAssert<?, ?, K, V> org.assertj.core.api.WithAssumptions::assumeThat(java.util.Map<K, V>)",
  "new" : "method <K, V> org.assertj.core.api.MapAssert<K, V> org.assertj.core.api.WithAssumptions::assumeThat(java.util.Map<K, V>)",
  "name" : "return type changed covariantly",
  "description" : "The return type changed covariantly from 'org.assertj.core.api.AbstractMapAssert<?, ?, K, V>' to 'org.assertj.core.api.MapAssert<K, V>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.AbstractMapAssert<?, ?, K, V>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.MapAssert<K, V>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.WithAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "WithAssumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyablePredicateAssert<T> org.assertj.core.api.WithAssumptions::assumeThat(java.util.function.Predicate<T>)",
  "new" : "method <T> org.assertj.core.api.PredicateAssert<T> org.assertj.core.api.WithAssumptions::assumeThat(java.util.function.Predicate<T>)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyablePredicateAssert<T>' to  'org.assertj.core.api.PredicateAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyablePredicateAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.PredicateAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.WithAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "WithAssumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThat"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method <T> org.assertj.core.api.ProxyableObjectAssert<T> org.assertj.core.api.WithAssumptions::assumeThatObject(T)",
  "new" : "method <T> org.assertj.core.api.ObjectAssert<T> org.assertj.core.api.WithAssumptions::assumeThatObject(T)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.api.ProxyableObjectAssert<T>' to  'org.assertj.core.api.ObjectAssert<T>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.ProxyableObjectAssert<T>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ObjectAssert<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.WithAssumptions"
  }, {
    "name" : "classSimpleName",
    "value" : "WithAssumptions"
  }, {
    "name" : "methodName",
    "value" : "assumeThatObject"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<ACTUAL>===) @ org.assertj.core.api.ZonedDateTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfies(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ZonedDateTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.ZonedDateTime>' to 'java.util.function.Consumer<? super java.time.ZonedDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.ZonedDateTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.ZonedDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ZonedDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ZonedDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfies"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ZonedDateTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<? super ACTUAL>[]===) @ org.assertj.core.api.ZonedDateTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.ZonedDateTime>' to 'java.util.function.Consumer<? super java.time.ZonedDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.ZonedDateTime>"
  }, {
    "name" : "newType",
    "value" : "java.util.function.Consumer<? super java.time.ZonedDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ZonedDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ZonedDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===java.util.function.Consumer<ACTUAL>===, java.util.function.Consumer<ACTUAL>, java.util.function.Consumer<ACTUAL>) @ org.assertj.core.api.ZonedDateTimeAssert",
  "new" : "parameter SELF org.assertj.core.api.AbstractAssert<SELF extends org.assertj.core.api.AbstractAssert<SELF, ACTUAL>, ACTUAL>::satisfiesAnyOf(===org.assertj.core.api.ThrowingConsumer<? super ACTUAL>[]===) @ org.assertj.core.api.ZonedDateTimeAssert",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Consumer<java.time.ZonedDateTime>' to 'org.assertj.core.api.ThrowingConsumer<? super java.time.ZonedDateTime>[]'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Consumer<java.time.ZonedDateTime>"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.api.ThrowingConsumer<? super java.time.ZonedDateTime>[]"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.ZonedDateTimeAssert"
  }, {
    "name" : "classSimpleName",
    "value" : "ZonedDateTimeAssert"
  }, {
    "name" : "methodName",
    "value" : "satisfiesAnyOf"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.numberOfParametersChanged",
  "old" : "method void org.assertj.core.api.recursive.comparison.ComparisonDifference::<init>(java.util.List<java.lang.String>, java.lang.Object, java.lang.Object)",
  "new" : "method void org.assertj.core.api.recursive.comparison.ComparisonDifference::<init>(org.assertj.core.api.recursive.comparison.DualValue)",
  "name" : "number of parameters changed",
  "description" : "The number of parameters of the method have changed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.ComparisonDifference"
  }, {
    "name" : "classSimpleName",
    "value" : "ComparisonDifference"
  }, {
    "name" : "methodName",
    "value" : "<init>"
  }, {
    "name" : "elementKind",
    "value" : "constructor"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.numberOfParametersChanged",
  "old" : "method void org.assertj.core.api.recursive.comparison.ComparisonDifference::<init>(java.util.List<java.lang.String>, java.lang.Object, java.lang.Object, java.lang.String)",
  "new" : "method void org.assertj.core.api.recursive.comparison.ComparisonDifference::<init>(org.assertj.core.api.recursive.comparison.DualValue, java.lang.String)",
  "name" : "number of parameters changed",
  "description" : "The number of parameters of the method have changed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.ComparisonDifference"
  }, {
    "name" : "classSimpleName",
    "value" : "ComparisonDifference"
  }, {
    "name" : "methodName",
    "value" : "<init>"
  }, {
    "name" : "elementKind",
    "value" : "constructor"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method java.util.Optional<java.lang.String> org.assertj.core.api.recursive.comparison.ComparisonDifference::getDescription()",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.ComparisonDifference"
  }, {
    "name" : "classSimpleName",
    "value" : "ComparisonDifference"
  }, {
    "name" : "methodName",
    "value" : "getDescription"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method java.lang.String org.assertj.core.api.recursive.comparison.ComparisonDifference::getPath()",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.ComparisonDifference"
  }, {
    "name" : "classSimpleName",
    "value" : "ComparisonDifference"
  }, {
    "name" : "methodName",
    "value" : "getPath"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeTypeParametersChanged",
  "old" : "method java.util.stream.Stream<java.util.Map.Entry<org.assertj.core.api.recursive.comparison.FieldLocation, java.util.Comparator<?>>> org.assertj.core.api.recursive.comparison.FieldComparators::comparatorByFields()",
  "new" : "method java.util.stream.Stream<java.util.Map.Entry<java.lang.String, java.util.Comparator<?>>> org.assertj.core.api.recursive.comparison.FieldComparators::comparatorByFields()",
  "name" : "return type changed type parameter",
  "description" : "The return type changed from 'java.util.stream.Stream<java.util.Map.Entry<org.assertj.core.api.recursive.comparison.FieldLocation, java.util.Comparator<?>>>' to 'java.util.stream.Stream<java.util.Map.Entry<java.lang.String, java.util.Comparator<?>>>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.stream.Stream<java.util.Map.Entry<org.assertj.core.api.recursive.comparison.FieldLocation, java.util.Comparator<?>>>"
  }, {
    "name" : "newType",
    "value" : "java.util.stream.Stream<java.util.Map.Entry<java.lang.String, java.util.Comparator<?>>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.FieldComparators"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldComparators"
  }, {
    "name" : "methodName",
    "value" : "comparatorByFields"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter java.util.Comparator<?> org.assertj.core.api.recursive.comparison.FieldComparators::getComparatorForField(===org.assertj.core.api.recursive.comparison.FieldLocation===)",
  "new" : "parameter java.util.Comparator<?> org.assertj.core.api.recursive.comparison.FieldComparators::getComparatorForField(===java.lang.String===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'org.assertj.core.api.recursive.comparison.FieldLocation' to 'java.lang.String'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.recursive.comparison.FieldLocation"
  }, {
    "name" : "newType",
    "value" : "java.lang.String"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.FieldComparators"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldComparators"
  }, {
    "name" : "methodName",
    "value" : "getComparatorForField"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter boolean org.assertj.core.api.recursive.comparison.FieldComparators::hasComparatorForField(===org.assertj.core.api.recursive.comparison.FieldLocation===)",
  "new" : "parameter boolean org.assertj.core.api.recursive.comparison.FieldComparators::hasComparatorForField(===java.lang.String===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'org.assertj.core.api.recursive.comparison.FieldLocation' to 'java.lang.String'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.recursive.comparison.FieldLocation"
  }, {
    "name" : "newType",
    "value" : "java.lang.String"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.FieldComparators"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldComparators"
  }, {
    "name" : "methodName",
    "value" : "hasComparatorForField"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter void org.assertj.core.api.recursive.comparison.FieldComparators::registerComparator(===org.assertj.core.api.recursive.comparison.FieldLocation===, java.util.Comparator<?>)",
  "new" : "parameter void org.assertj.core.api.recursive.comparison.FieldComparators::registerComparator(===java.lang.String===, java.util.Comparator<?>)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'org.assertj.core.api.recursive.comparison.FieldLocation' to 'java.lang.String'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.api.recursive.comparison.FieldLocation"
  }, {
    "name" : "newType",
    "value" : "java.lang.String"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.FieldComparators"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldComparators"
  }, {
    "name" : "methodName",
    "value" : "registerComparator"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method org.assertj.core.api.recursive.comparison.FieldLocation org.assertj.core.api.recursive.comparison.FieldLocation::fielLocation(java.lang.String)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.FieldLocation"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldLocation"
  }, {
    "name" : "methodName",
    "value" : "fielLocation"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method org.assertj.core.api.recursive.comparison.FieldLocation org.assertj.core.api.recursive.comparison.FieldLocation::fieldLocation(java.lang.String)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.FieldLocation"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldLocation"
  }, {
    "name" : "methodName",
    "value" : "fieldLocation"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeTypeParametersChanged",
  "old" : "method java.util.stream.Stream<java.util.Map.Entry<org.assertj.core.api.recursive.comparison.FieldLocation, java.util.Comparator<?>>> org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration::comparatorByFields()",
  "new" : "method java.util.stream.Stream<java.util.Map.Entry<java.lang.String, java.util.Comparator<?>>> org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration::comparatorByFields()",
  "name" : "return type changed type parameter",
  "description" : "The return type changed from 'java.util.stream.Stream<java.util.Map.Entry<org.assertj.core.api.recursive.comparison.FieldLocation, java.util.Comparator<?>>>' to 'java.util.stream.Stream<java.util.Map.Entry<java.lang.String, java.util.Comparator<?>>>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.stream.Stream<java.util.Map.Entry<org.assertj.core.api.recursive.comparison.FieldLocation, java.util.Comparator<?>>>"
  }, {
    "name" : "newType",
    "value" : "java.util.stream.Stream<java.util.Map.Entry<java.lang.String, java.util.Comparator<?>>>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration"
  }, {
    "name" : "classSimpleName",
    "value" : "RecursiveComparisonConfiguration"
  }, {
    "name" : "methodName",
    "value" : "comparatorByFields"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeTypeParametersChanged",
  "old" : "method java.util.Set<org.assertj.core.api.recursive.comparison.FieldLocation> org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration::getIgnoredCollectionOrderInFields()",
  "new" : "method java.util.Set<java.lang.String> org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration::getIgnoredCollectionOrderInFields()",
  "name" : "return type changed type parameter",
  "description" : "The return type changed from 'java.util.Set<org.assertj.core.api.recursive.comparison.FieldLocation>' to 'java.util.Set<java.lang.String>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.Set<org.assertj.core.api.recursive.comparison.FieldLocation>"
  }, {
    "name" : "newType",
    "value" : "java.util.Set<java.lang.String>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration"
  }, {
    "name" : "classSimpleName",
    "value" : "RecursiveComparisonConfiguration"
  }, {
    "name" : "methodName",
    "value" : "getIgnoredCollectionOrderInFields"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeTypeParametersChanged",
  "old" : "method java.util.Set<org.assertj.core.api.recursive.comparison.FieldLocation> org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration::getIgnoredFields()",
  "new" : "method java.util.Set<java.lang.String> org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration::getIgnoredFields()",
  "name" : "return type changed type parameter",
  "description" : "The return type changed from 'java.util.Set<org.assertj.core.api.recursive.comparison.FieldLocation>' to 'java.util.Set<java.lang.String>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.Set<org.assertj.core.api.recursive.comparison.FieldLocation>"
  }, {
    "name" : "newType",
    "value" : "java.util.Set<java.lang.String>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration"
  }, {
    "name" : "classSimpleName",
    "value" : "RecursiveComparisonConfiguration"
  }, {
    "name" : "methodName",
    "value" : "getIgnoredFields"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeTypeParametersChanged",
  "old" : "method java.util.List<org.assertj.core.api.recursive.comparison.FieldLocation> org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration::getIgnoredOverriddenEqualsForFields()",
  "new" : "method java.util.List<java.lang.String> org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration::getIgnoredOverriddenEqualsForFields()",
  "name" : "return type changed type parameter",
  "description" : "The return type changed from 'java.util.List<org.assertj.core.api.recursive.comparison.FieldLocation>' to 'java.util.List<java.lang.String>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.List<org.assertj.core.api.recursive.comparison.FieldLocation>"
  }, {
    "name" : "newType",
    "value" : "java.util.List<java.lang.String>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration"
  }, {
    "name" : "classSimpleName",
    "value" : "RecursiveComparisonConfiguration"
  }, {
    "name" : "methodName",
    "value" : "getIgnoredOverriddenEqualsForFields"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method void org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration::registerComparatorForField(java.util.Comparator<?>, org.assertj.core.api.recursive.comparison.FieldLocation)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.api.recursive.comparison"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.api.recursive.comparison.RecursiveComparisonConfiguration"
  }, {
    "name" : "classSimpleName",
    "value" : "RecursiveComparisonConfiguration"
  }, {
    "name" : "methodName",
    "value" : "registerComparatorForField"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method long org.assertj.core.data.TemporalUnitOffset::getValue()",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.data"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.data.TemporalUnitOffset"
  }, {
    "name" : "classSimpleName",
    "value" : "TemporalUnitOffset"
  }, {
    "name" : "methodName",
    "value" : "getValue"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.numberOfParametersChanged",
  "old" : "method java.lang.AssertionError org.assertj.core.error.AssertionErrorCreator::assertionError(java.lang.String, java.lang.Object, java.lang.Object)",
  "new" : "method java.lang.AssertionError org.assertj.core.error.AssertionErrorCreator::assertionError(java.lang.String, java.lang.Object, java.lang.Object, org.assertj.core.presentation.Representation)",
  "name" : "number of parameters changed",
  "description" : "The number of parameters of the method have changed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.AssertionErrorCreator"
  }, {
    "name" : "classSimpleName",
    "value" : "AssertionErrorCreator"
  }, {
    "name" : "methodName",
    "value" : "assertionError"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.error.ElementsShouldSatisfy.UnsatisfiedRequirement",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ElementsShouldSatisfy.UnsatisfiedRequirement"
  }, {
    "name" : "classSimpleName",
    "value" : "UnsatisfiedRequirement"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChanged",
  "old" : "method org.assertj.core.error.ElementsShouldSatisfy.UnsatisfiedRequirement org.assertj.core.error.ElementsShouldSatisfy::unsatisfiedRequirement(java.lang.Object, java.lang.String)",
  "new" : "method org.assertj.core.error.UnsatisfiedRequirement org.assertj.core.error.ElementsShouldSatisfy::unsatisfiedRequirement(java.lang.Object, java.lang.String)",
  "name" : "return type changed",
  "description" : "The return type changed from 'org.assertj.core.error.ElementsShouldSatisfy.UnsatisfiedRequirement' to  'org.assertj.core.error.UnsatisfiedRequirement'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.error.ElementsShouldSatisfy.UnsatisfiedRequirement"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.error.UnsatisfiedRequirement"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ElementsShouldSatisfy"
  }, {
    "name" : "classSimpleName",
    "value" : "ElementsShouldSatisfy"
  }, {
    "name" : "methodName",
    "value" : "unsatisfiedRequirement"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldBeAbsolutePath.SHOULD_BE_ABSOLUTE_PATH",
  "new" : "field org.assertj.core.error.ShouldBeAbsolutePath.SHOULD_BE_ABSOLUTE_PATH",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting:%n  <%s>%nto be an absolute path.' to '%nExpecting actual:%n  %s%nto be an absolute path.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting:%n  <%s>%nto be an absolute path."
  }, {
    "name" : "newValue",
    "value" : "%nExpecting actual:%n  %s%nto be an absolute path."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeAbsolutePath"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeAbsolutePath"
  }, {
    "name" : "fieldName",
    "value" : "SHOULD_BE_ABSOLUTE_PATH"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeBetween::shouldBeBetween(T, T, T, boolean, boolean)",
  "new" : "method <T> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeBetween::shouldBeBetween(java.lang.Comparable<? super T>, java.lang.Comparable<? super T>, java.lang.Comparable<? super T>, boolean, boolean)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeBetween"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeBetween"
  }, {
    "name" : "methodName",
    "value" : "shouldBeBetween"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeBetween::shouldBeBetween(T, T, T, boolean, boolean, org.assertj.core.internal.ComparisonStrategy)",
  "new" : "method <T> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeBetween::shouldBeBetween(java.lang.Comparable<? super T>, java.lang.Comparable<? super T>, java.lang.Comparable<? super T>, boolean, boolean, org.assertj.core.internal.ComparisonStrategy)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeBetween"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeBetween"
  }, {
    "name" : "methodName",
    "value" : "shouldBeBetween"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.element.nowDeprecated",
  "old" : "method <T extends java.lang.Comparable<? super T>> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeBetween::shouldBeBetween(T, T, T, boolean, boolean, org.assertj.core.internal.ComparisonStrategy)",
  "new" : "method <T> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeBetween::shouldBeBetween(java.lang.Comparable<? super T>, java.lang.Comparable<? super T>, java.lang.Comparable<? super T>, boolean, boolean, org.assertj.core.internal.ComparisonStrategy)",
  "name" : "element now deprecated",
  "description" : "The element is now deprecated.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "annotationType",
    "value" : "java.lang.Deprecated"
  }, {
    "name" : "annotation",
    "value" : "@java.lang.Deprecated"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeBetween"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeBetween"
  }, {
    "name" : "methodName",
    "value" : "shouldBeBetween"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldBeCanonicalPath.SHOULD_BE_CANONICAL",
  "new" : "field org.assertj.core.error.ShouldBeCanonicalPath.SHOULD_BE_CANONICAL",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting:%n  <%s>%nto be a canonical path' to '%nExpecting actual:%n  %s%nto be a canonical path'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting:%n  <%s>%nto be a canonical path"
  }, {
    "name" : "newValue",
    "value" : "%nExpecting actual:%n  %s%nto be a canonical path"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeCanonicalPath"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeCanonicalPath"
  }, {
    "name" : "fieldName",
    "value" : "SHOULD_BE_CANONICAL"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldBeDirectory.FILE_SHOULD_BE_DIRECTORY",
  "new" : "field org.assertj.core.error.ShouldBeDirectory.FILE_SHOULD_BE_DIRECTORY",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting file:%n  <%s>%n to be an existing directory.' to '%nExpecting file:%n  %s%n to be an existing directory.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting file:%n  <%s>%n to be an existing directory."
  }, {
    "name" : "newValue",
    "value" : "%nExpecting file:%n  %s%n to be an existing directory."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeDirectory"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeDirectory"
  }, {
    "name" : "fieldName",
    "value" : "FILE_SHOULD_BE_DIRECTORY"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldBeDirectory.PATH_SHOULD_BE_DIRECTORY",
  "new" : "field org.assertj.core.error.ShouldBeDirectory.PATH_SHOULD_BE_DIRECTORY",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting path:%n  <%s>%nto be a directory.' to '%nExpecting path:%n  %s%nto be a directory.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting path:%n  <%s>%nto be a directory."
  }, {
    "name" : "newValue",
    "value" : "%nExpecting path:%n  %s%nto be a directory."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeDirectory"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeDirectory"
  }, {
    "name" : "fieldName",
    "value" : "PATH_SHOULD_BE_DIRECTORY"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldBeEmptyDirectory.SHOULD_BE_EMPTY_DIRECTORY",
  "new" : "field org.assertj.core.error.ShouldBeEmptyDirectory.SHOULD_BE_EMPTY_DIRECTORY",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting:%n  <%s>%nto be an empty directory but it contained:%n  %s' to '%nExpecting actual:%n  %s%nto be an empty directory but it contained:%n  %s'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting:%n  <%s>%nto be an empty directory but it contained:%n  %s"
  }, {
    "name" : "newValue",
    "value" : "%nExpecting actual:%n  %s%nto be an empty directory but it contained:%n  %s"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeEmptyDirectory"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeEmptyDirectory"
  }, {
    "name" : "fieldName",
    "value" : "SHOULD_BE_EMPTY_DIRECTORY"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeGreater::shouldBeGreater(T, T)",
  "new" : "method <T> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeGreater::shouldBeGreater(java.lang.Comparable<? super T>, java.lang.Comparable<? super T>)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeGreater"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeGreater"
  }, {
    "name" : "methodName",
    "value" : "shouldBeGreater"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeGreater::shouldBeGreater(T, T, org.assertj.core.internal.ComparisonStrategy)",
  "new" : "method <T> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeGreater::shouldBeGreater(java.lang.Comparable<? super T>, java.lang.Comparable<? super T>, org.assertj.core.internal.ComparisonStrategy)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeGreater"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeGreater"
  }, {
    "name" : "methodName",
    "value" : "shouldBeGreater"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.element.nowDeprecated",
  "old" : "method <T extends java.lang.Comparable<? super T>> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeGreater::shouldBeGreater(T, T, org.assertj.core.internal.ComparisonStrategy)",
  "new" : "method <T> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeGreater::shouldBeGreater(java.lang.Comparable<? super T>, java.lang.Comparable<? super T>, org.assertj.core.internal.ComparisonStrategy)",
  "name" : "element now deprecated",
  "description" : "The element is now deprecated.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "annotationType",
    "value" : "java.lang.Deprecated"
  }, {
    "name" : "annotation",
    "value" : "@java.lang.Deprecated"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeGreater"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeGreater"
  }, {
    "name" : "methodName",
    "value" : "shouldBeGreater"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<T>> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeGreaterOrEqual::shouldBeGreaterOrEqual(T, T)",
  "new" : "method <T> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeGreaterOrEqual::shouldBeGreaterOrEqual(java.lang.Comparable<? super T>, java.lang.Comparable<? super T>)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeGreaterOrEqual"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeGreaterOrEqual"
  }, {
    "name" : "methodName",
    "value" : "shouldBeGreaterOrEqual"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeGreaterOrEqual::shouldBeGreaterOrEqual(T, T, org.assertj.core.internal.ComparisonStrategy)",
  "new" : "method <T> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeGreaterOrEqual::shouldBeGreaterOrEqual(java.lang.Comparable<? super T>, java.lang.Comparable<? super T>, org.assertj.core.internal.ComparisonStrategy)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeGreaterOrEqual"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeGreaterOrEqual"
  }, {
    "name" : "methodName",
    "value" : "shouldBeGreaterOrEqual"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.element.nowDeprecated",
  "old" : "method <T extends java.lang.Comparable<? super T>> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeGreaterOrEqual::shouldBeGreaterOrEqual(T, T, org.assertj.core.internal.ComparisonStrategy)",
  "new" : "method <T> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeGreaterOrEqual::shouldBeGreaterOrEqual(java.lang.Comparable<? super T>, java.lang.Comparable<? super T>, org.assertj.core.internal.ComparisonStrategy)",
  "name" : "element now deprecated",
  "description" : "The element is now deprecated.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "annotationType",
    "value" : "java.lang.Deprecated"
  }, {
    "name" : "annotation",
    "value" : "@java.lang.Deprecated"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeGreaterOrEqual"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeGreaterOrEqual"
  }, {
    "name" : "methodName",
    "value" : "shouldBeGreaterOrEqual"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeLess::shouldBeLess(T, T)",
  "new" : "method <T> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeLess::shouldBeLess(java.lang.Comparable<? super T>, java.lang.Comparable<? super T>)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeLess"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeLess"
  }, {
    "name" : "methodName",
    "value" : "shouldBeLess"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeLessOrEqual::shouldBeLessOrEqual(T, T)",
  "new" : "method <T> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeLessOrEqual::shouldBeLessOrEqual(java.lang.Comparable<? super T>, java.lang.Comparable<? super T>)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeLessOrEqual"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeLessOrEqual"
  }, {
    "name" : "methodName",
    "value" : "shouldBeLessOrEqual"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeLessOrEqual::shouldBeLessOrEqual(T, T, org.assertj.core.internal.ComparisonStrategy)",
  "new" : "method <T> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeLessOrEqual::shouldBeLessOrEqual(java.lang.Comparable<? super T>, java.lang.Comparable<? super T>, org.assertj.core.internal.ComparisonStrategy)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeLessOrEqual"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeLessOrEqual"
  }, {
    "name" : "methodName",
    "value" : "shouldBeLessOrEqual"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.element.nowDeprecated",
  "old" : "method <T extends java.lang.Comparable<? super T>> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeLessOrEqual::shouldBeLessOrEqual(T, T, org.assertj.core.internal.ComparisonStrategy)",
  "new" : "method <T> org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldBeLessOrEqual::shouldBeLessOrEqual(java.lang.Comparable<? super T>, java.lang.Comparable<? super T>, org.assertj.core.internal.ComparisonStrategy)",
  "name" : "element now deprecated",
  "description" : "The element is now deprecated.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "annotationType",
    "value" : "java.lang.Deprecated"
  }, {
    "name" : "annotation",
    "value" : "@java.lang.Deprecated"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeLessOrEqual"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeLessOrEqual"
  }, {
    "name" : "methodName",
    "value" : "shouldBeLessOrEqual"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldBeNormalized.SHOULD_BE_NORMALIZED",
  "new" : "field org.assertj.core.error.ShouldBeNormalized.SHOULD_BE_NORMALIZED",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from 'Expected path:%n  <%s>%nto be normalized.' to 'Expected path:%n  %s%nto be normalized.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "Expected path:%n  <%s>%nto be normalized."
  }, {
    "name" : "newValue",
    "value" : "Expected path:%n  %s%nto be normalized."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeNormalized"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeNormalized"
  }, {
    "name" : "fieldName",
    "value" : "SHOULD_BE_NORMALIZED"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldBeRegularFile.SHOULD_BE_REGULAR_FILE",
  "new" : "field org.assertj.core.error.ShouldBeRegularFile.SHOULD_BE_REGULAR_FILE",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting path:%n  <%s>%nto be a regular file.' to '%nExpecting path:%n  %s%nto be a regular file.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting path:%n  <%s>%nto be a regular file."
  }, {
    "name" : "newValue",
    "value" : "%nExpecting path:%n  %s%nto be a regular file."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeRegularFile"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeRegularFile"
  }, {
    "name" : "fieldName",
    "value" : "SHOULD_BE_REGULAR_FILE"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldBeRelativePath.SHOULD_BE_RELATIVE_PATH",
  "new" : "field org.assertj.core.error.ShouldBeRelativePath.SHOULD_BE_RELATIVE_PATH",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting:%n  <%s>%nto be a relative path.' to '%nExpecting actual:%n  %s%nto be a relative path.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting:%n  <%s>%nto be a relative path."
  }, {
    "name" : "newValue",
    "value" : "%nExpecting actual:%n  %s%nto be a relative path."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeRelativePath"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeRelativePath"
  }, {
    "name" : "fieldName",
    "value" : "SHOULD_BE_RELATIVE_PATH"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldBeSymbolicLink.SHOULD_BE_SYMBOLIC_LINK",
  "new" : "field org.assertj.core.error.ShouldBeSymbolicLink.SHOULD_BE_SYMBOLIC_LINK",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting path:%n  <%s>%nto be a symbolic link.' to '%nExpecting path:%n  %s%nto be a symbolic link.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting path:%n  <%s>%nto be a symbolic link."
  }, {
    "name" : "newValue",
    "value" : "%nExpecting path:%n  %s%nto be a symbolic link."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldBeSymbolicLink"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldBeSymbolicLink"
  }, {
    "name" : "fieldName",
    "value" : "SHOULD_BE_SYMBOLIC_LINK"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.numberOfParametersChanged",
  "old" : "method org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldContainSubsequence::shouldContainSubsequence(java.lang.Object, java.lang.Object)",
  "new" : "method org.assertj.core.error.ShouldContainSubsequence org.assertj.core.error.ShouldContainSubsequence::shouldContainSubsequence(java.lang.Object, java.lang.Object, int, org.assertj.core.internal.ComparisonStrategy)",
  "name" : "number of parameters changed",
  "description" : "The number of parameters of the method have changed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldContainSubsequence"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldContainSubsequence"
  }, {
    "name" : "methodName",
    "value" : "shouldContainSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeChangedCovariantly",
  "old" : "method org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldContainSubsequence::shouldContainSubsequence(java.lang.Object, java.lang.Object)",
  "new" : "method org.assertj.core.error.ShouldContainSubsequence org.assertj.core.error.ShouldContainSubsequence::shouldContainSubsequence(java.lang.Object, java.lang.Object, int, org.assertj.core.internal.ComparisonStrategy)",
  "name" : "return type changed covariantly",
  "description" : "The return type changed covariantly from 'org.assertj.core.error.ErrorMessageFactory' to 'org.assertj.core.error.ShouldContainSubsequence'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "org.assertj.core.error.ErrorMessageFactory"
  }, {
    "name" : "newType",
    "value" : "org.assertj.core.error.ShouldContainSubsequence"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldContainSubsequence"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldContainSubsequence"
  }, {
    "name" : "methodName",
    "value" : "shouldContainSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldContainSubsequence::shouldContainSubsequence(java.lang.Object, java.lang.Object, org.assertj.core.internal.ComparisonStrategy)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldContainSubsequence"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldContainSubsequence"
  }, {
    "name" : "methodName",
    "value" : "shouldContainSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldEndWithPath.PATH_SHOULD_END_WITH",
  "new" : "field org.assertj.core.error.ShouldEndWithPath.PATH_SHOULD_END_WITH",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpected path:%n  <%s>%nto end with:%n  <%s>%nbut it did not.' to '%nExpected path:%n  %s%nto end with:%n  %s%nbut it did not.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpected path:%n  <%s>%nto end with:%n  <%s>%nbut it did not."
  }, {
    "name" : "newValue",
    "value" : "%nExpected path:%n  %s%nto end with:%n  %s%nbut it did not."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldEndWithPath"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldEndWithPath"
  }, {
    "name" : "fieldName",
    "value" : "PATH_SHOULD_END_WITH"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldExist.FILE_SHOULD_EXIST",
  "new" : "field org.assertj.core.error.ShouldExist.FILE_SHOULD_EXIST",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting file:%n  <%s>%nto exist.' to '%nExpecting file:%n  %s%nto exist.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting file:%n  <%s>%nto exist."
  }, {
    "name" : "newValue",
    "value" : "%nExpecting file:%n  %s%nto exist."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldExist"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldExist"
  }, {
    "name" : "fieldName",
    "value" : "FILE_SHOULD_EXIST"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldExist.PATH_SHOULD_EXIST",
  "new" : "field org.assertj.core.error.ShouldExist.PATH_SHOULD_EXIST",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting path:%n  <%s>%nto exist (symbolic links were followed).' to '%nExpecting path:%n  %s%nto exist (symbolic links were followed).'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting path:%n  <%s>%nto exist (symbolic links were followed)."
  }, {
    "name" : "newValue",
    "value" : "%nExpecting path:%n  %s%nto exist (symbolic links were followed)."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldExist"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldExist"
  }, {
    "name" : "fieldName",
    "value" : "PATH_SHOULD_EXIST"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldExist.PATH_SHOULD_EXIST_NO_FOLLOW_LINKS",
  "new" : "field org.assertj.core.error.ShouldExist.PATH_SHOULD_EXIST_NO_FOLLOW_LINKS",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting path:%n  <%s>%nto exist (symbolic links were not followed).' to '%nExpecting path:%n  %s%nto exist (symbolic links were not followed).'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting path:%n  <%s>%nto exist (symbolic links were not followed)."
  }, {
    "name" : "newValue",
    "value" : "%nExpecting path:%n  %s%nto exist (symbolic links were not followed)."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldExist"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldExist"
  }, {
    "name" : "fieldName",
    "value" : "PATH_SHOULD_EXIST_NO_FOLLOW_LINKS"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldHaveNoParent.FILE_HAS_PARENT",
  "new" : "field org.assertj.core.error.ShouldHaveNoParent.FILE_HAS_PARENT",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting file (or directory):%n  <%s>%nnot to have a parent, but parent was:%n  <%s>' to '%nExpecting file (or directory):%n  %s%nnot to have a parent, but parent was:%n  %s'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting file (or directory):%n  <%s>%nnot to have a parent, but parent was:%n  <%s>"
  }, {
    "name" : "newValue",
    "value" : "%nExpecting file (or directory):%n  %s%nnot to have a parent, but parent was:%n  %s"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldHaveNoParent"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldHaveNoParent"
  }, {
    "name" : "fieldName",
    "value" : "FILE_HAS_PARENT"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldHaveNoParent.PATH_HAS_PARENT",
  "new" : "field org.assertj.core.error.ShouldHaveNoParent.PATH_HAS_PARENT",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpected actual path:%n  <%s>%n not to have a parent, but parent was:%n  <%s>' to '%nExpected actual path:%n  %s%n not to have a parent, but parent was:%n  %s'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpected actual path:%n  <%s>%n not to have a parent, but parent was:%n  <%s>"
  }, {
    "name" : "newValue",
    "value" : "%nExpected actual path:%n  %s%n not to have a parent, but parent was:%n  %s"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldHaveNoParent"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldHaveNoParent"
  }, {
    "name" : "fieldName",
    "value" : "PATH_HAS_PARENT"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldHaveNoSuppressedExceptions::shouldHaveNoSuppressedExceptions(===java.lang.Object===)",
  "new" : "parameter org.assertj.core.error.ErrorMessageFactory org.assertj.core.error.ShouldHaveNoSuppressedExceptions::shouldHaveNoSuppressedExceptions(===java.lang.Throwable===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.lang.Object' to 'java.lang.Throwable'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.lang.Object"
  }, {
    "name" : "newType",
    "value" : "java.lang.Throwable"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldHaveNoSuppressedExceptions"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldHaveNoSuppressedExceptions"
  }, {
    "name" : "methodName",
    "value" : "shouldHaveNoSuppressedExceptions"
  }, {
    "name" : "parameterIndex",
    "value" : "0"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldHaveParent.FILE_NOT_EXPECTED_PARENT",
  "new" : "field org.assertj.core.error.ShouldHaveParent.FILE_NOT_EXPECTED_PARENT",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting file%n  <%s>%nto have parent:%n  <%s>%nbut had:%n  <%s>.' to '%nExpecting file%n  %s%nto have parent:%n  %s%nbut had:%n  %s.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting file%n  <%s>%nto have parent:%n  <%s>%nbut had:%n  <%s>."
  }, {
    "name" : "newValue",
    "value" : "%nExpecting file%n  %s%nto have parent:%n  %s%nbut had:%n  %s."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldHaveParent"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldHaveParent"
  }, {
    "name" : "fieldName",
    "value" : "FILE_NOT_EXPECTED_PARENT"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldHaveParent.FILE_NO_PARENT",
  "new" : "field org.assertj.core.error.ShouldHaveParent.FILE_NO_PARENT",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting file%n  <%s>%nto have parent:%n  <%s>%nbut did not have one.' to '%nExpecting file%n  %s%nto have parent:%n  %s%nbut did not have one.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting file%n  <%s>%nto have parent:%n  <%s>%nbut did not have one."
  }, {
    "name" : "newValue",
    "value" : "%nExpecting file%n  %s%nto have parent:%n  %s%nbut did not have one."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldHaveParent"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldHaveParent"
  }, {
    "name" : "fieldName",
    "value" : "FILE_NO_PARENT"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldHaveParent.PATH_NOT_EXPECTED_PARENT",
  "new" : "field org.assertj.core.error.ShouldHaveParent.PATH_NOT_EXPECTED_PARENT",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting path%n  <%s>%nto have parent:%n  <%s>%nbut had:%n  <%s>.' to '%nExpecting path%n  %s%nto have parent:%n  %s%nbut had:%n  %s.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting path%n  <%s>%nto have parent:%n  <%s>%nbut had:%n  <%s>."
  }, {
    "name" : "newValue",
    "value" : "%nExpecting path%n  %s%nto have parent:%n  %s%nbut had:%n  %s."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldHaveParent"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldHaveParent"
  }, {
    "name" : "fieldName",
    "value" : "PATH_NOT_EXPECTED_PARENT"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldHaveParent.PATH_NO_PARENT",
  "new" : "field org.assertj.core.error.ShouldHaveParent.PATH_NO_PARENT",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting path%n  <%s>%nto have parent:%n  <%s>%nbut did not have one.' to '%nExpecting path%n  %s%nto have parent:%n  %s%nbut did not have one.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting path%n  <%s>%nto have parent:%n  <%s>%nbut did not have one."
  }, {
    "name" : "newValue",
    "value" : "%nExpecting path%n  %s%nto have parent:%n  %s%nbut did not have one."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldHaveParent"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldHaveParent"
  }, {
    "name" : "fieldName",
    "value" : "PATH_NO_PARENT"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldNotExist.FILE_SHOULD_NOT_EXIST",
  "new" : "field org.assertj.core.error.ShouldNotExist.FILE_SHOULD_NOT_EXIST",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting file:%n  <%s>%nnot to exist' to '%nExpecting file:%n  %s%nnot to exist'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting file:%n  <%s>%nnot to exist"
  }, {
    "name" : "newValue",
    "value" : "%nExpecting file:%n  %s%nnot to exist"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldNotExist"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldNotExist"
  }, {
    "name" : "fieldName",
    "value" : "FILE_SHOULD_NOT_EXIST"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldNotExist.PATH_SHOULD_NOT_EXIST",
  "new" : "field org.assertj.core.error.ShouldNotExist.PATH_SHOULD_NOT_EXIST",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpecting path:%n  <%s>%nnot to exist' to '%nExpecting path:%n  %s%nnot to exist'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpecting path:%n  <%s>%nnot to exist"
  }, {
    "name" : "newValue",
    "value" : "%nExpecting path:%n  %s%nnot to exist"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldNotExist"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldNotExist"
  }, {
    "name" : "fieldName",
    "value" : "PATH_SHOULD_NOT_EXIST"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.constantValueChanged",
  "old" : "field org.assertj.core.error.ShouldStartWithPath.PATH_SHOULD_START_WITH",
  "new" : "field org.assertj.core.error.ShouldStartWithPath.PATH_SHOULD_START_WITH",
  "name" : "constant field changed value",
  "description" : "Constant field changed value from '%nExpected path:%n  <%s>%nto start with:%n  <%s>%nbut it did not.' to '%nExpected path:%n  %s%nto start with:%n  %s%nbut it did not.'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldValue",
    "value" : "%nExpected path:%n  <%s>%nto start with:%n  <%s>%nbut it did not."
  }, {
    "name" : "newValue",
    "value" : "%nExpected path:%n  %s%nto start with:%n  %s%nbut it did not."
  }, {
    "name" : "package",
    "value" : "org.assertj.core.error"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.error.ShouldStartWithPath"
  }, {
    "name" : "classSimpleName",
    "value" : "ShouldStartWithPath"
  }, {
    "name" : "fieldName",
    "value" : "PATH_SHOULD_START_WITH"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertEqualByComparison(org.assertj.core.api.AssertionInfo, T, T)",
  "new" : "method <T> void org.assertj.core.internal.Comparables::assertEqualByComparison(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, T)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertEqualByComparison"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertEqualByComparison(org.assertj.core.api.AssertionInfo, T, ===T===)",
  "new" : "parameter <T> void org.assertj.core.internal.Comparables::assertEqualByComparison(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, ===T===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertEqualByComparison"
  }, {
    "name" : "parameterIndex",
    "value" : "2"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertGreaterThan(org.assertj.core.api.AssertionInfo, T, T)",
  "new" : "method <T> void org.assertj.core.internal.Comparables::assertGreaterThan(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, T)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertGreaterThan"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertGreaterThan(org.assertj.core.api.AssertionInfo, T, ===T===)",
  "new" : "parameter <T> void org.assertj.core.internal.Comparables::assertGreaterThan(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, ===T===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertGreaterThan"
  }, {
    "name" : "parameterIndex",
    "value" : "2"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertGreaterThanOrEqualTo(org.assertj.core.api.AssertionInfo, T, T)",
  "new" : "method <T> void org.assertj.core.internal.Comparables::assertGreaterThanOrEqualTo(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, T)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertGreaterThanOrEqualTo"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertGreaterThanOrEqualTo(org.assertj.core.api.AssertionInfo, T, ===T===)",
  "new" : "parameter <T> void org.assertj.core.internal.Comparables::assertGreaterThanOrEqualTo(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, ===T===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertGreaterThanOrEqualTo"
  }, {
    "name" : "parameterIndex",
    "value" : "2"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertIsAfter(org.assertj.core.api.AssertionInfo, T, T)",
  "new" : "method <T> void org.assertj.core.internal.Comparables::assertIsAfter(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, T)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertIsAfter"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertIsAfter(org.assertj.core.api.AssertionInfo, T, ===T===)",
  "new" : "parameter <T> void org.assertj.core.internal.Comparables::assertIsAfter(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, ===T===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertIsAfter"
  }, {
    "name" : "parameterIndex",
    "value" : "2"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertIsAfterOrEqualTo(org.assertj.core.api.AssertionInfo, T, T)",
  "new" : "method <T> void org.assertj.core.internal.Comparables::assertIsAfterOrEqualTo(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, T)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertIsAfterOrEqualTo"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertIsAfterOrEqualTo(org.assertj.core.api.AssertionInfo, T, ===T===)",
  "new" : "parameter <T> void org.assertj.core.internal.Comparables::assertIsAfterOrEqualTo(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, ===T===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertIsAfterOrEqualTo"
  }, {
    "name" : "parameterIndex",
    "value" : "2"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertIsBefore(org.assertj.core.api.AssertionInfo, T, T)",
  "new" : "method <T> void org.assertj.core.internal.Comparables::assertIsBefore(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, T)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertIsBefore"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertIsBefore(org.assertj.core.api.AssertionInfo, T, ===T===)",
  "new" : "parameter <T> void org.assertj.core.internal.Comparables::assertIsBefore(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, ===T===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertIsBefore"
  }, {
    "name" : "parameterIndex",
    "value" : "2"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertIsBeforeOrEqualTo(org.assertj.core.api.AssertionInfo, T, T)",
  "new" : "method <T> void org.assertj.core.internal.Comparables::assertIsBeforeOrEqualTo(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, T)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertIsBeforeOrEqualTo"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertIsBeforeOrEqualTo(org.assertj.core.api.AssertionInfo, T, ===T===)",
  "new" : "parameter <T> void org.assertj.core.internal.Comparables::assertIsBeforeOrEqualTo(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, ===T===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertIsBeforeOrEqualTo"
  }, {
    "name" : "parameterIndex",
    "value" : "2"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertIsBetween(org.assertj.core.api.AssertionInfo, T, T, T, boolean, boolean)",
  "new" : "method <T> void org.assertj.core.internal.Comparables::assertIsBetween(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, T, T, boolean, boolean)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertIsBetween"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertIsBetween(org.assertj.core.api.AssertionInfo, T, ===T===, T, boolean, boolean)",
  "new" : "parameter <T> void org.assertj.core.internal.Comparables::assertIsBetween(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, ===T===, T, boolean, boolean)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertIsBetween"
  }, {
    "name" : "parameterIndex",
    "value" : "2"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertIsBetween(org.assertj.core.api.AssertionInfo, T, T, ===T===, boolean, boolean)",
  "new" : "parameter <T> void org.assertj.core.internal.Comparables::assertIsBetween(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, T, ===T===, boolean, boolean)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertIsBetween"
  }, {
    "name" : "parameterIndex",
    "value" : "3"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertLessThan(org.assertj.core.api.AssertionInfo, T, T)",
  "new" : "method <T> void org.assertj.core.internal.Comparables::assertLessThan(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, T)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertLessThan"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertLessThan(org.assertj.core.api.AssertionInfo, T, ===T===)",
  "new" : "parameter <T> void org.assertj.core.internal.Comparables::assertLessThan(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, ===T===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertLessThan"
  }, {
    "name" : "parameterIndex",
    "value" : "2"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertLessThanOrEqualTo(org.assertj.core.api.AssertionInfo, T, T)",
  "new" : "method <T> void org.assertj.core.internal.Comparables::assertLessThanOrEqualTo(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, T)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertLessThanOrEqualTo"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertLessThanOrEqualTo(org.assertj.core.api.AssertionInfo, T, ===T===)",
  "new" : "parameter <T> void org.assertj.core.internal.Comparables::assertLessThanOrEqualTo(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, ===T===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertLessThanOrEqualTo"
  }, {
    "name" : "parameterIndex",
    "value" : "2"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterChanged",
  "old" : "method <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertNotEqualByComparison(org.assertj.core.api.AssertionInfo, T, T)",
  "new" : "method <T> void org.assertj.core.internal.Comparables::assertNotEqualByComparison(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, T)",
  "name" : "formal type parameter changed",
  "description" : "The formal type parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldTypeParameter",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newTypeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertNotEqualByComparison"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::assertNotEqualByComparison(org.assertj.core.api.AssertionInfo, T, ===T===)",
  "new" : "parameter <T> void org.assertj.core.internal.Comparables::assertNotEqualByComparison(org.assertj.core.api.AssertionInfo, java.lang.Comparable<? super T>, ===T===)",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'T extends java.lang.Comparable<? super T>' to 'T'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "T extends java.lang.Comparable<? super T>"
  }, {
    "name" : "newType",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "assertNotEqualByComparison"
  }, {
    "name" : "parameterIndex",
    "value" : "2"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.visibilityReduced",
  "old" : "method <T extends java.lang.Comparable<? super T>> void org.assertj.core.internal.Comparables::checkBoundsValidity(T, T, boolean, boolean)",
  "new" : "method <T> void org.assertj.core.internal.Comparables::checkBoundsValidity(T, T, boolean, boolean)",
  "name" : "visibility reduced",
  "description" : "visibility reduced",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldVisibility",
    "value" : "protected"
  }, {
    "name" : "newVisibility",
    "value" : "private"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Comparables"
  }, {
    "name" : "classSimpleName",
    "value" : "Comparables"
  }, {
    "name" : "methodName",
    "value" : "checkBoundsValidity"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method java.util.List<java.lang.String> org.assertj.core.internal.Files::toFileNames(java.util.List<java.io.File>)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Files"
  }, {
    "name" : "classSimpleName",
    "value" : "Files"
  }, {
    "name" : "methodName",
    "value" : "toFileNames"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method void org.assertj.core.internal.Iterables::assertContainsSubsequence(org.assertj.core.api.AssertionInfo, java.lang.Iterable<?>, java.util.List<?>)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Iterables"
  }, {
    "name" : "classSimpleName",
    "value" : "Iterables"
  }, {
    "name" : "methodName",
    "value" : "assertContainsSubsequence"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.visibilityReduced",
  "old" : "method <K, V> void org.assertj.core.internal.Maps::assertContainsOnlyKeys(org.assertj.core.api.AssertionInfo, java.util.Map<K, V>, java.lang.String, K[])",
  "new" : "method <K, V> void org.assertj.core.internal.Maps::assertContainsOnlyKeys(org.assertj.core.api.AssertionInfo, java.util.Map<K, V>, java.lang.String, K[])",
  "name" : "visibility reduced",
  "description" : "visibility reduced",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldVisibility",
    "value" : "public"
  }, {
    "name" : "newVisibility",
    "value" : "private"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Maps"
  }, {
    "name" : "classSimpleName",
    "value" : "Maps"
  }, {
    "name" : "methodName",
    "value" : "assertContainsOnlyKeys"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.annotation.removed",
  "old" : "method <K, V> void org.assertj.core.internal.Maps::assertContainsOnlyKeys(org.assertj.core.api.AssertionInfo, java.util.Map<K, V>, java.lang.String, K[])",
  "new" : "method <K, V> void org.assertj.core.internal.Maps::assertContainsOnlyKeys(org.assertj.core.api.AssertionInfo, java.util.Map<K, V>, java.lang.String, K[])",
  "name" : "removed annotation",
  "description" : "Element no longer annotated with 'org.assertj.core.util.VisibleForTesting'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "annotationType",
    "value" : "org.assertj.core.util.VisibleForTesting"
  }, {
    "name" : "annotation",
    "value" : "@org.assertj.core.util.VisibleForTesting"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Maps"
  }, {
    "name" : "classSimpleName",
    "value" : "Maps"
  }, {
    "name" : "methodName",
    "value" : "assertContainsOnlyKeys"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method boolean org.assertj.core.internal.NioFilesWrapper::exists(java.nio.file.Path, java.nio.file.LinkOption[])",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.NioFilesWrapper"
  }, {
    "name" : "classSimpleName",
    "value" : "NioFilesWrapper"
  }, {
    "name" : "methodName",
    "value" : "exists"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.visibilityReduced",
  "old" : "method org.assertj.core.internal.NioFilesWrapper org.assertj.core.internal.NioFilesWrapper::instance()",
  "new" : "method org.assertj.core.internal.NioFilesWrapper org.assertj.core.internal.NioFilesWrapper::instance()",
  "name" : "visibility reduced",
  "description" : "visibility reduced",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldVisibility",
    "value" : "public"
  }, {
    "name" : "newVisibility",
    "value" : "package"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.NioFilesWrapper"
  }, {
    "name" : "classSimpleName",
    "value" : "NioFilesWrapper"
  }, {
    "name" : "methodName",
    "value" : "instance"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method boolean org.assertj.core.internal.NioFilesWrapper::isDirectory(java.nio.file.Path)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.NioFilesWrapper"
  }, {
    "name" : "classSimpleName",
    "value" : "NioFilesWrapper"
  }, {
    "name" : "methodName",
    "value" : "isDirectory"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method boolean org.assertj.core.internal.NioFilesWrapper::isExecutable(java.nio.file.Path)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.NioFilesWrapper"
  }, {
    "name" : "classSimpleName",
    "value" : "NioFilesWrapper"
  }, {
    "name" : "methodName",
    "value" : "isExecutable"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method boolean org.assertj.core.internal.NioFilesWrapper::isReadable(java.nio.file.Path)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.NioFilesWrapper"
  }, {
    "name" : "classSimpleName",
    "value" : "NioFilesWrapper"
  }, {
    "name" : "methodName",
    "value" : "isReadable"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method boolean org.assertj.core.internal.NioFilesWrapper::isRegularFile(java.nio.file.Path)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.NioFilesWrapper"
  }, {
    "name" : "classSimpleName",
    "value" : "NioFilesWrapper"
  }, {
    "name" : "methodName",
    "value" : "isRegularFile"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method boolean org.assertj.core.internal.NioFilesWrapper::isSymbolicLink(java.nio.file.Path)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.NioFilesWrapper"
  }, {
    "name" : "classSimpleName",
    "value" : "NioFilesWrapper"
  }, {
    "name" : "methodName",
    "value" : "isSymbolicLink"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method boolean org.assertj.core.internal.NioFilesWrapper::isWritable(java.nio.file.Path)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.NioFilesWrapper"
  }, {
    "name" : "classSimpleName",
    "value" : "NioFilesWrapper"
  }, {
    "name" : "methodName",
    "value" : "isWritable"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter java.nio.file.DirectoryStream<java.nio.file.Path> org.assertj.core.internal.NioFilesWrapper::newDirectoryStream(java.nio.file.Path, ===java.util.function.Predicate<java.nio.file.Path>===) throws java.io.IOException",
  "new" : "parameter java.nio.file.DirectoryStream<java.nio.file.Path> org.assertj.core.internal.NioFilesWrapper::newDirectoryStream(java.nio.file.Path, ===java.nio.file.DirectoryStream.Filter<? super java.nio.file.Path>===) throws java.io.IOException",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.function.Predicate<java.nio.file.Path>' to 'java.nio.file.DirectoryStream.Filter<? super java.nio.file.Path>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.function.Predicate<java.nio.file.Path>"
  }, {
    "name" : "newType",
    "value" : "java.nio.file.DirectoryStream.Filter<? super java.nio.file.Path>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.NioFilesWrapper"
  }, {
    "name" : "classSimpleName",
    "value" : "NioFilesWrapper"
  }, {
    "name" : "methodName",
    "value" : "newDirectoryStream"
  }, {
    "name" : "parameterIndex",
    "value" : "1"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method boolean org.assertj.core.internal.NioFilesWrapper::notExists(java.nio.file.Path, java.nio.file.LinkOption[])",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.NioFilesWrapper"
  }, {
    "name" : "classSimpleName",
    "value" : "NioFilesWrapper"
  }, {
    "name" : "methodName",
    "value" : "notExists"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.field.removedWithConstant",
  "old" : "field org.assertj.core.internal.Paths.IOERROR_FORMAT",
  "new" : null,
  "name" : "field with constant removed",
  "description" : "Field with constant value has been removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SEMANTIC",
    "severity" : "POTENTIALLY_BREAKING"
  }, {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Paths"
  }, {
    "name" : "classSimpleName",
    "value" : "Paths"
  }, {
    "name" : "fieldName",
    "value" : "IOERROR_FORMAT"
  }, {
    "name" : "elementKind",
    "value" : "field"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method void org.assertj.core.internal.Paths::assertHasContent(org.assertj.core.api.AssertionInfo, java.nio.file.Path, java.lang.String, java.nio.charset.Charset)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Paths"
  }, {
    "name" : "classSimpleName",
    "value" : "Paths"
  }, {
    "name" : "methodName",
    "value" : "assertHasContent"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method void org.assertj.core.internal.Paths::assertHasSameContentAs(org.assertj.core.api.AssertionInfo, java.nio.file.Path, java.nio.charset.Charset, java.nio.file.Path, java.nio.charset.Charset)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Paths"
  }, {
    "name" : "classSimpleName",
    "value" : "Paths"
  }, {
    "name" : "methodName",
    "value" : "assertHasSameContentAs"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method java.util.List<java.lang.String> org.assertj.core.internal.Paths::toPathNames(java.util.List<java.nio.file.Path>)",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.Paths"
  }, {
    "name" : "classSimpleName",
    "value" : "Paths"
  }, {
    "name" : "methodName",
    "value" : "toPathNames"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.abstractMethodAdded",
  "old" : null,
  "new" : "method boolean org.assertj.core.internal.RealNumbers<NUMBER extends java.lang.Number & java.lang.Comparable<NUMBER>>::isFinite(NUMBER)",
  "name" : "abstract method added",
  "description" : "Abstract method was added.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.RealNumbers"
  }, {
    "name" : "classSimpleName",
    "value" : "RealNumbers"
  }, {
    "name" : "methodName",
    "value" : "isFinite"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.abstractMethodAdded",
  "old" : null,
  "new" : "method boolean org.assertj.core.internal.RealNumbers<NUMBER extends java.lang.Number & java.lang.Comparable<NUMBER>>::isInfinite(NUMBER)",
  "name" : "abstract method added",
  "description" : "Abstract method was added.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.RealNumbers"
  }, {
    "name" : "classSimpleName",
    "value" : "RealNumbers"
  }, {
    "name" : "methodName",
    "value" : "isInfinite"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.abstractMethodAdded",
  "old" : null,
  "new" : "method boolean org.assertj.core.internal.RealNumbers<NUMBER extends java.lang.Number & java.lang.Comparable<NUMBER>>::isNaN(NUMBER)",
  "name" : "abstract method added",
  "description" : "Abstract method was added.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.RealNumbers"
  }, {
    "name" : "classSimpleName",
    "value" : "RealNumbers"
  }, {
    "name" : "methodName",
    "value" : "isNaN"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.abstractMethodAdded",
  "old" : null,
  "new" : "method boolean org.assertj.core.internal.RealNumbers<NUMBER extends java.lang.Number & java.lang.Comparable<NUMBER>>::isNotFinite(NUMBER)",
  "name" : "abstract method added",
  "description" : "Abstract method was added.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.RealNumbers"
  }, {
    "name" : "classSimpleName",
    "value" : "RealNumbers"
  }, {
    "name" : "methodName",
    "value" : "isNotFinite"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.abstractMethodAdded",
  "old" : null,
  "new" : "method boolean org.assertj.core.internal.RealNumbers<NUMBER extends java.lang.Number & java.lang.Comparable<NUMBER>>::isNotInfinite(NUMBER)",
  "name" : "abstract method added",
  "description" : "Abstract method was added.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.RealNumbers"
  }, {
    "name" : "classSimpleName",
    "value" : "RealNumbers"
  }, {
    "name" : "methodName",
    "value" : "isNotInfinite"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.RecursiveFieldByFieldComparator",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.RecursiveFieldByFieldComparator"
  }, {
    "name" : "classSimpleName",
    "value" : "RecursiveFieldByFieldComparator"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.returnTypeErasureChanged",
  "old" : "method java.util.Comparator<?> org.assertj.core.internal.TypeComparators::get(java.lang.Class<?>)",
  "new" : "method T org.assertj.core.internal.TypeHolder<T>::get(java.lang.Class<?>) @ org.assertj.core.internal.TypeComparators",
  "name" : "return type erasure changed",
  "description" : "The erasure of the return type changed from 'java.util.Comparator' to 'java.lang.Object'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "NON_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.Comparator"
  }, {
    "name" : "newType",
    "value" : "java.lang.Object"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.TypeComparators"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeComparators"
  }, {
    "name" : "methodName",
    "value" : "get"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method java.util.Comparator<?> org.assertj.core.internal.TypeComparators::get(java.lang.Class<?>)",
  "new" : "method T org.assertj.core.internal.TypeHolder<T>::get(java.lang.Class<?>) @ org.assertj.core.internal.TypeComparators",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.internal.TypeComparators' but is now declared in superclass 'org.assertj.core.internal.TypeHolder<T>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.internal.TypeComparators"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.internal.TypeHolder<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.TypeComparators"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeComparators"
  }, {
    "name" : "methodName",
    "value" : "get"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.movedToSuperClass",
  "old" : "method <T> void org.assertj.core.internal.TypeComparators::put(java.lang.Class<T>, java.util.Comparator<? super T>)",
  "new" : "method void org.assertj.core.internal.TypeHolder<T>::put(java.lang.Class<?>, T) @ org.assertj.core.internal.TypeComparators",
  "name" : "method moved to superclass",
  "description" : "The method used to be declared in class 'org.assertj.core.internal.TypeComparators' but is now declared in superclass 'org.assertj.core.internal.TypeHolder<T>'.",
  "criticality" : "allowed",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "EQUIVALENT"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "EQUIVALENT"
  } ],
  "attachments" : [ {
    "name" : "oldClass",
    "value" : "org.assertj.core.internal.TypeComparators"
  }, {
    "name" : "newClass",
    "value" : "org.assertj.core.internal.TypeHolder<T>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.TypeComparators"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeComparators"
  }, {
    "name" : "methodName",
    "value" : "put"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.generics.formalTypeParameterRemoved",
  "old" : "method <T> void org.assertj.core.internal.TypeComparators::put(java.lang.Class<T>, java.util.Comparator<? super T>)",
  "new" : "method void org.assertj.core.internal.TypeHolder<T>::put(java.lang.Class<?>, T) @ org.assertj.core.internal.TypeComparators",
  "name" : "formal type parameter removed",
  "description" : "The formal type parameter 'T' was removed from the element.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "NON_BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "typeParameter",
    "value" : "T"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.TypeComparators"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeComparators"
  }, {
    "name" : "methodName",
    "value" : "put"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.parameterTypeChanged",
  "old" : "parameter <T> void org.assertj.core.internal.TypeComparators::put(java.lang.Class<T>, ===java.util.Comparator<? super T>===)",
  "new" : "parameter void org.assertj.core.internal.TypeHolder<T>::put(java.lang.Class<?>, ===T===) @ org.assertj.core.internal.TypeComparators",
  "name" : "parameter type changed",
  "description" : "The type of the parameter changed from 'java.util.Comparator<? super T>' to 'java.util.Comparator<?>'.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "POTENTIALLY_BREAKING"
  } ],
  "attachments" : [ {
    "name" : "oldType",
    "value" : "java.util.Comparator<? super T>"
  }, {
    "name" : "newType",
    "value" : "java.util.Comparator<?>"
  }, {
    "name" : "package",
    "value" : "org.assertj.core.internal"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.TypeComparators"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeComparators"
  }, {
    "name" : "methodName",
    "value" : "put"
  }, {
    "name" : "parameterIndex",
    "value" : "1"
  }, {
    "name" : "elementKind",
    "value" : "parameter"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  }, {
    "name" : "newArchive",
    "value" : "assertj-core-3.23.0.jar"
  }, {
    "name" : "newArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.ByteBuddy",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.ByteBuddy"
  }, {
    "name" : "classSimpleName",
    "value" : "ByteBuddy"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.ClassFileVersion",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.ClassFileVersion"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassFileVersion"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.NamingStrategy",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.NamingStrategy"
  }, {
    "name" : "classSimpleName",
    "value" : "NamingStrategy"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.TypeCache<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.TypeCache"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeCache"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.agent.builder"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder"
  }, {
    "name" : "classSimpleName",
    "value" : "AgentBuilder"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.agent.builder.LambdaFactory",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.agent.builder"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.agent.builder.LambdaFactory"
  }, {
    "name" : "classSimpleName",
    "value" : "LambdaFactory"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.agent.builder.ResettableClassFileTransformer",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.agent.builder"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.agent.builder.ResettableClassFileTransformer"
  }, {
    "name" : "classSimpleName",
    "value" : "ResettableClassFileTransformer"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.asm.Advice",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.asm.Advice"
  }, {
    "name" : "classSimpleName",
    "value" : "Advice"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.asm.AsmVisitorWrapper"
  }, {
    "name" : "classSimpleName",
    "value" : "AsmVisitorWrapper"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.asm.MemberAttributeExtension<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.asm.MemberAttributeExtension"
  }, {
    "name" : "classSimpleName",
    "value" : "MemberAttributeExtension"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.asm.MemberRemoval",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.asm.MemberRemoval"
  }, {
    "name" : "classSimpleName",
    "value" : "MemberRemoval"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.asm.MemberSubstitution",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.asm.MemberSubstitution"
  }, {
    "name" : "classSimpleName",
    "value" : "MemberSubstitution"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.asm.ModifierAdjustment",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.asm.ModifierAdjustment"
  }, {
    "name" : "classSimpleName",
    "value" : "ModifierAdjustment"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.asm.TypeConstantAdjustment",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.asm.TypeConstantAdjustment"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeConstantAdjustment"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.asm.TypeReferenceAdjustment",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.asm.TypeReferenceAdjustment"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeReferenceAdjustment"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.build.BuildLogger",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.build"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.build.BuildLogger"
  }, {
    "name" : "classSimpleName",
    "value" : "BuildLogger"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.build"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.build.CachedReturnPlugin"
  }, {
    "name" : "classSimpleName",
    "value" : "CachedReturnPlugin"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.build.EntryPoint",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.build"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.build.EntryPoint"
  }, {
    "name" : "classSimpleName",
    "value" : "EntryPoint"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.build"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.build.HashCodeAndEqualsPlugin"
  }, {
    "name" : "classSimpleName",
    "value" : "HashCodeAndEqualsPlugin"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.build.Plugin",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.build"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.build.Plugin"
  }, {
    "name" : "classSimpleName",
    "value" : "Plugin"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.build.ToStringPlugin",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.build"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.build.ToStringPlugin"
  }, {
    "name" : "classSimpleName",
    "value" : "ToStringPlugin"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.ByteCodeElement",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.ByteCodeElement"
  }, {
    "name" : "classSimpleName",
    "value" : "ByteCodeElement"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.DeclaredByType",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.DeclaredByType"
  }, {
    "name" : "classSimpleName",
    "value" : "DeclaredByType"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.ModifierReviewable",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.ModifierReviewable"
  }, {
    "name" : "classSimpleName",
    "value" : "ModifierReviewable"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.NamedElement",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.NamedElement"
  }, {
    "name" : "classSimpleName",
    "value" : "NamedElement"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.TypeVariableSource",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.TypeVariableSource"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeVariableSource"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription"
  }, {
    "name" : "classSimpleName",
    "value" : "AnnotationDescription"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.annotation.AnnotationList",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationList"
  }, {
    "name" : "classSimpleName",
    "value" : "AnnotationList"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.annotation.AnnotationSource",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationSource"
  }, {
    "name" : "classSimpleName",
    "value" : "AnnotationSource"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue<T, S>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue"
  }, {
    "name" : "classSimpleName",
    "value" : "AnnotationValue"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.enumeration.EnumerationDescription",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.enumeration"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.enumeration.EnumerationDescription"
  }, {
    "name" : "classSimpleName",
    "value" : "EnumerationDescription"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.field.FieldDescription",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.field"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.field.FieldDescription"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldDescription"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.field.FieldList<T extends org.assertj.core.internal.bytebuddy.description.field.FieldDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.field"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.field.FieldList"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldList"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.method.MethodDescription",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.method"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.method.MethodDescription"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodDescription"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.method.MethodList<T extends org.assertj.core.internal.bytebuddy.description.method.MethodDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.method"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.method.MethodList"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodList"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.method.ParameterDescription",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.method"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.method.ParameterDescription"
  }, {
    "name" : "classSimpleName",
    "value" : "ParameterDescription"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.method.ParameterList<T extends org.assertj.core.internal.bytebuddy.description.method.ParameterDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.method"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.method.ParameterList"
  }, {
    "name" : "classSimpleName",
    "value" : "ParameterList"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.EnumerationState",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.EnumerationState"
  }, {
    "name" : "classSimpleName",
    "value" : "EnumerationState"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.FieldManifestation",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.FieldManifestation"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldManifestation"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.FieldPersistence",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.FieldPersistence"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldPersistence"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.Mandate",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.Mandate"
  }, {
    "name" : "classSimpleName",
    "value" : "Mandate"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.MethodArguments",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.MethodArguments"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodArguments"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.MethodManifestation",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.MethodManifestation"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodManifestation"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.MethodStrictness",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.MethodStrictness"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodStrictness"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.modifier.ModifierContributor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.ModifierContributor"
  }, {
    "name" : "classSimpleName",
    "value" : "ModifierContributor"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.Ownership",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.Ownership"
  }, {
    "name" : "classSimpleName",
    "value" : "Ownership"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.ParameterManifestation",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.ParameterManifestation"
  }, {
    "name" : "classSimpleName",
    "value" : "ParameterManifestation"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.ProvisioningState",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.ProvisioningState"
  }, {
    "name" : "classSimpleName",
    "value" : "ProvisioningState"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.SynchronizationState",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.SynchronizationState"
  }, {
    "name" : "classSimpleName",
    "value" : "SynchronizationState"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.SyntheticState",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.SyntheticState"
  }, {
    "name" : "classSimpleName",
    "value" : "SyntheticState"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.TypeManifestation",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.TypeManifestation"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeManifestation"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.description.modifier.Visibility",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.modifier.Visibility"
  }, {
    "name" : "classSimpleName",
    "value" : "Visibility"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.type.PackageDescription",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.type"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.type.PackageDescription"
  }, {
    "name" : "classSimpleName",
    "value" : "PackageDescription"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.type.RecordComponentDescription",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.type"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.type.RecordComponentDescription"
  }, {
    "name" : "classSimpleName",
    "value" : "RecordComponentDescription"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.type.RecordComponentList<T extends org.assertj.core.internal.bytebuddy.description.type.RecordComponentDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.type"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.type.RecordComponentList"
  }, {
    "name" : "classSimpleName",
    "value" : "RecordComponentList"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.type.TypeDefinition",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.type"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.type.TypeDefinition"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeDefinition"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.type.TypeDescription",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.type"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.type.TypeDescription"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeDescription"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.description.type.TypeList",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.type"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.type.TypeList"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeList"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.description.type.TypeVariableToken",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.description.type"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.description.type.TypeVariableToken"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeVariableToken"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.ClassFileLocator"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassFileLocator"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.DynamicType",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.DynamicType"
  }, {
    "name" : "classSimpleName",
    "value" : "DynamicType"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.Nexus",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.Nexus"
  }, {
    "name" : "classSimpleName",
    "value" : "Nexus"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.NexusAccessor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.NexusAccessor"
  }, {
    "name" : "classSimpleName",
    "value" : "NexusAccessor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.TargetType",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.TargetType"
  }, {
    "name" : "classSimpleName",
    "value" : "TargetType"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.Transformer<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.Transformer"
  }, {
    "name" : "classSimpleName",
    "value" : "Transformer"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.TypeResolutionStrategy",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.TypeResolutionStrategy"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeResolutionStrategy"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.VisibilityBridgeStrategy",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.VisibilityBridgeStrategy"
  }, {
    "name" : "classSimpleName",
    "value" : "VisibilityBridgeStrategy"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading.ByteArrayClassLoader"
  }, {
    "name" : "classSimpleName",
    "value" : "ByteArrayClassLoader"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassInjector"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy<T extends java.lang.ClassLoader>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassLoadingStrategy"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading.ClassReloadingStrategy"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassReloadingStrategy"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.loading.InjectionClassLoader",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading.InjectionClassLoader"
  }, {
    "name" : "classSimpleName",
    "value" : "InjectionClassLoader"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.loading.MultipleParentClassLoader",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading.MultipleParentClassLoader"
  }, {
    "name" : "classSimpleName",
    "value" : "MultipleParentClassLoader"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.dynamic.loading.NoOpClassFileTransformer",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading.NoOpClassFileTransformer"
  }, {
    "name" : "classSimpleName",
    "value" : "NoOpClassFileTransformer"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.loading.PackageDefinitionStrategy"
  }, {
    "name" : "classSimpleName",
    "value" : "PackageDefinitionStrategy"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.scaffold.ClassWriterStrategy",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.ClassWriterStrategy"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassWriterStrategy"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldLocator"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldLocator"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldRegistry",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.FieldRegistry"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldRegistry"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType"
  }, {
    "name" : "classSimpleName",
    "value" : "InstrumentedType"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodGraph"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodGraph"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.MethodRegistry"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodRegistry"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.scaffold.RecordComponentRegistry",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.RecordComponentRegistry"
  }, {
    "name" : "classSimpleName",
    "value" : "RecordComponentRegistry"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeInitializer",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeInitializer"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeInitializer"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeValidation",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeValidation"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeValidation"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.TypeWriter"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeWriter"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.AbstractInliningDynamicTypeBuilder<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.AbstractInliningDynamicTypeBuilder"
  }, {
    "name" : "classSimpleName",
    "value" : "AbstractInliningDynamicTypeBuilder"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.DecoratingDynamicTypeBuilder<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.DecoratingDynamicTypeBuilder"
  }, {
    "name" : "classSimpleName",
    "value" : "DecoratingDynamicTypeBuilder"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.InliningImplementationMatcher",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.InliningImplementationMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "InliningImplementationMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodNameTransformer"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodNameTransformer"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodRebaseResolver"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.RebaseDynamicTypeBuilder<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.RebaseDynamicTypeBuilder"
  }, {
    "name" : "classSimpleName",
    "value" : "RebaseDynamicTypeBuilder"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.RebaseImplementationTarget"
  }, {
    "name" : "classSimpleName",
    "value" : "RebaseImplementationTarget"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.RedefinitionDynamicTypeBuilder<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.inline.RedefinitionDynamicTypeBuilder"
  }, {
    "name" : "classSimpleName",
    "value" : "RedefinitionDynamicTypeBuilder"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy"
  }, {
    "name" : "classSimpleName",
    "value" : "ConstructorStrategy"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder"
  }, {
    "name" : "classSimpleName",
    "value" : "SubclassDynamicTypeBuilder"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget"
  }, {
    "name" : "classSimpleName",
    "value" : "SubclassImplementationTarget"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.DefaultMethodCall",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.DefaultMethodCall"
  }, {
    "name" : "classSimpleName",
    "value" : "DefaultMethodCall"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.EqualsMethod",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.EqualsMethod"
  }, {
    "name" : "classSimpleName",
    "value" : "EqualsMethod"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.ExceptionMethod",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.ExceptionMethod"
  }, {
    "name" : "classSimpleName",
    "value" : "ExceptionMethod"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.FieldAccessor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.FieldAccessor"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldAccessor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.FixedValue",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.FixedValue"
  }, {
    "name" : "classSimpleName",
    "value" : "FixedValue"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.HashCodeMethod"
  }, {
    "name" : "classSimpleName",
    "value" : "HashCodeMethod"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.Implementation",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.Implementation"
  }, {
    "name" : "classSimpleName",
    "value" : "Implementation"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.InvocationHandlerAdapter",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.InvocationHandlerAdapter"
  }, {
    "name" : "classSimpleName",
    "value" : "InvocationHandlerAdapter"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.InvokeDynamic"
  }, {
    "name" : "classSimpleName",
    "value" : "InvokeDynamic"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.LoadedTypeInitializer",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.LoadedTypeInitializer"
  }, {
    "name" : "classSimpleName",
    "value" : "LoadedTypeInitializer"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.MethodAccessorFactory",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.MethodAccessorFactory"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodAccessorFactory"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.MethodCall",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.MethodCall"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodCall"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.MethodDelegation",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.MethodDelegation"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodDelegation"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.StubMethod",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.StubMethod"
  }, {
    "name" : "classSimpleName",
    "value" : "StubMethod"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.SuperMethodCall",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.SuperMethodCall"
  }, {
    "name" : "classSimpleName",
    "value" : "SuperMethodCall"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.ToStringMethod",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.ToStringMethod"
  }, {
    "name" : "classSimpleName",
    "value" : "ToStringMethod"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationAppender",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationAppender"
  }, {
    "name" : "classSimpleName",
    "value" : "AnnotationAppender"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationRetention",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationRetention"
  }, {
    "name" : "classSimpleName",
    "value" : "AnnotationRetention"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationValueFilter",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute.AnnotationValueFilter"
  }, {
    "name" : "classSimpleName",
    "value" : "AnnotationValueFilter"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.attribute.FieldAttributeAppender",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute.FieldAttributeAppender"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldAttributeAppender"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute.MethodAttributeAppender"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodAttributeAppender"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.attribute.RecordComponentAttributeAppender",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute.RecordComponentAttributeAppender"
  }, {
    "name" : "classSimpleName",
    "value" : "RecordComponentAttributeAppender"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.attribute.TypeAttributeAppender",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.attribute.TypeAttributeAppender"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeAttributeAppender"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.auxiliary.AuxiliaryType",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.auxiliary"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.auxiliary.AuxiliaryType"
  }, {
    "name" : "classSimpleName",
    "value" : "AuxiliaryType"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.auxiliary.MethodCallProxy",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.auxiliary"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.auxiliary.MethodCallProxy"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodCallProxy"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.auxiliary.PrivilegedMemberLookupAction",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.auxiliary"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.auxiliary.PrivilegedMemberLookupAction"
  }, {
    "name" : "classSimpleName",
    "value" : "PrivilegedMemberLookupAction"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.auxiliary.TrivialType",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.auxiliary"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TrivialType"
  }, {
    "name" : "classSimpleName",
    "value" : "TrivialType"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.auxiliary"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.auxiliary.TypeProxy"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeProxy"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bind.ArgumentTypeResolver",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.ArgumentTypeResolver"
  }, {
    "name" : "classSimpleName",
    "value" : "ArgumentTypeResolver"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bind.DeclaringTypeResolver",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.DeclaringTypeResolver"
  }, {
    "name" : "classSimpleName",
    "value" : "DeclaringTypeResolver"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.MethodDelegationBinder"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodDelegationBinder"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bind.MethodNameEqualityResolver",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.MethodNameEqualityResolver"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodNameEqualityResolver"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bind.ParameterLengthResolver",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.ParameterLengthResolver"
  }, {
    "name" : "classSimpleName",
    "value" : "ParameterLengthResolver"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.AllArguments",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.AllArguments"
  }, {
    "name" : "classSimpleName",
    "value" : "AllArguments"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Argument",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Argument"
  }, {
    "name" : "classSimpleName",
    "value" : "Argument"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.BindingPriority",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.BindingPriority"
  }, {
    "name" : "classSimpleName",
    "value" : "BindingPriority"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Default",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Default"
  }, {
    "name" : "classSimpleName",
    "value" : "Default"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultCall",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultCall"
  }, {
    "name" : "classSimpleName",
    "value" : "DefaultCall"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultMethod",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.DefaultMethod"
  }, {
    "name" : "classSimpleName",
    "value" : "DefaultMethod"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Empty",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Empty"
  }, {
    "name" : "classSimpleName",
    "value" : "Empty"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldProxy"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldProxy"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldValue",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.FieldValue"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldValue"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.IgnoreForBinding",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.IgnoreForBinding"
  }, {
    "name" : "classSimpleName",
    "value" : "IgnoreForBinding"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Morph",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Morph"
  }, {
    "name" : "classSimpleName",
    "value" : "Morph"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Origin",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Origin"
  }, {
    "name" : "classSimpleName",
    "value" : "Origin"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Pipe",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Pipe"
  }, {
    "name" : "classSimpleName",
    "value" : "Pipe"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.RuntimeType",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.RuntimeType"
  }, {
    "name" : "classSimpleName",
    "value" : "RuntimeType"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.StubValue",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.StubValue"
  }, {
    "name" : "classSimpleName",
    "value" : "StubValue"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Super",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.Super"
  }, {
    "name" : "classSimpleName",
    "value" : "Super"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.SuperCall",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.SuperCall"
  }, {
    "name" : "classSimpleName",
    "value" : "SuperCall"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.SuperMethod",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.SuperMethod"
  }, {
    "name" : "classSimpleName",
    "value" : "SuperMethod"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder"
  }, {
    "name" : "classSimpleName",
    "value" : "TargetMethodAnnotationDrivenBinder"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "@interface org.assertj.core.internal.bytebuddy.implementation.bind.annotation.This",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bind.annotation.This"
  }, {
    "name" : "classSimpleName",
    "value" : "This"
  }, {
    "name" : "elementKind",
    "value" : "@interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.Addition",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.Addition"
  }, {
    "name" : "classSimpleName",
    "value" : "Addition"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.bytecode.ByteCodeAppender",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.ByteCodeAppender"
  }, {
    "name" : "classSimpleName",
    "value" : "ByteCodeAppender"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.Duplication",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.Duplication"
  }, {
    "name" : "classSimpleName",
    "value" : "Duplication"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.Multiplication",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.Multiplication"
  }, {
    "name" : "classSimpleName",
    "value" : "Multiplication"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.Removal",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.Removal"
  }, {
    "name" : "classSimpleName",
    "value" : "Removal"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.bytecode.StackManipulation",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.StackManipulation"
  }, {
    "name" : "classSimpleName",
    "value" : "StackManipulation"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.StackSize",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.StackSize"
  }, {
    "name" : "classSimpleName",
    "value" : "StackSize"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.Throw",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.Throw"
  }, {
    "name" : "classSimpleName",
    "value" : "Throw"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.bytecode.TypeCreation",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.TypeCreation"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeCreation"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.Assigner",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.Assigner"
  }, {
    "name" : "classSimpleName",
    "value" : "Assigner"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.InstanceCheck",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.InstanceCheck"
  }, {
    "name" : "classSimpleName",
    "value" : "InstanceCheck"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.TypeCasting",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.TypeCasting"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeCasting"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveBoxingDelegate",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveBoxingDelegate"
  }, {
    "name" : "classSimpleName",
    "value" : "PrimitiveBoxingDelegate"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveTypeAwareAssigner",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveTypeAwareAssigner"
  }, {
    "name" : "classSimpleName",
    "value" : "PrimitiveTypeAwareAssigner"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveUnboxingDelegate"
  }, {
    "name" : "classSimpleName",
    "value" : "PrimitiveUnboxingDelegate"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveWideningDelegate",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.PrimitiveWideningDelegate"
  }, {
    "name" : "classSimpleName",
    "value" : "PrimitiveWideningDelegate"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.VoidAwareAssigner",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.primitive.VoidAwareAssigner"
  }, {
    "name" : "classSimpleName",
    "value" : "VoidAwareAssigner"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference.GenericTypeAwareAssigner",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference.GenericTypeAwareAssigner"
  }, {
    "name" : "classSimpleName",
    "value" : "GenericTypeAwareAssigner"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference.ReferenceTypeAwareAssigner",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.assign.reference.ReferenceTypeAwareAssigner"
  }, {
    "name" : "classSimpleName",
    "value" : "ReferenceTypeAwareAssigner"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.ArrayAccess",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.ArrayAccess"
  }, {
    "name" : "classSimpleName",
    "value" : "ArrayAccess"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.ArrayFactory",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.ArrayFactory"
  }, {
    "name" : "classSimpleName",
    "value" : "ArrayFactory"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.CollectionFactory",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.collection.CollectionFactory"
  }, {
    "name" : "classSimpleName",
    "value" : "CollectionFactory"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.ClassConstant",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.ClassConstant"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassConstant"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.DefaultValue",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.DefaultValue"
  }, {
    "name" : "classSimpleName",
    "value" : "DefaultValue"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.DoubleConstant",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.DoubleConstant"
  }, {
    "name" : "classSimpleName",
    "value" : "DoubleConstant"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.FieldConstant",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.FieldConstant"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldConstant"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.FloatConstant",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.FloatConstant"
  }, {
    "name" : "classSimpleName",
    "value" : "FloatConstant"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.IntegerConstant",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.IntegerConstant"
  }, {
    "name" : "classSimpleName",
    "value" : "IntegerConstant"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.JavaConstantValue",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.JavaConstantValue"
  }, {
    "name" : "classSimpleName",
    "value" : "JavaConstantValue"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.LongConstant",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.LongConstant"
  }, {
    "name" : "classSimpleName",
    "value" : "LongConstant"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.MethodConstant",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.MethodConstant"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodConstant"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.NullConstant",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.NullConstant"
  }, {
    "name" : "classSimpleName",
    "value" : "NullConstant"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.SerializedConstant",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.SerializedConstant"
  }, {
    "name" : "classSimpleName",
    "value" : "SerializedConstant"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.TextConstant",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.constant.TextConstant"
  }, {
    "name" : "classSimpleName",
    "value" : "TextConstant"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.member.FieldAccess",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.member"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.FieldAccess"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldAccess"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.implementation.bytecode.member.HandleInvocation",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.member"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.HandleInvocation"
  }, {
    "name" : "classSimpleName",
    "value" : "HandleInvocation"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodInvocation",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.member"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodInvocation"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodInvocation"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodReturn",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.member"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodReturn"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodReturn"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodVariableAccess",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.member"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.implementation.bytecode.member.MethodVariableAccess"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodVariableAccess"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.AnnotationVisitor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.AnnotationVisitor"
  }, {
    "name" : "classSimpleName",
    "value" : "AnnotationVisitor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.Attribute",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.Attribute"
  }, {
    "name" : "classSimpleName",
    "value" : "Attribute"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.ByteVector",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.ByteVector"
  }, {
    "name" : "classSimpleName",
    "value" : "ByteVector"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.ClassReader",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.ClassReader"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassReader"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.ClassTooLargeException",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.ClassTooLargeException"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassTooLargeException"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.ClassVisitor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.ClassVisitor"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassVisitor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.ClassWriter",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.ClassWriter"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassWriter"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.ConstantDynamic",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.ConstantDynamic"
  }, {
    "name" : "classSimpleName",
    "value" : "ConstantDynamic"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.FieldVisitor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.FieldVisitor"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldVisitor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.Handle",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.Handle"
  }, {
    "name" : "classSimpleName",
    "value" : "Handle"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.Label",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.Label"
  }, {
    "name" : "classSimpleName",
    "value" : "Label"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.MethodTooLargeException",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.MethodTooLargeException"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodTooLargeException"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.MethodVisitor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.MethodVisitor"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodVisitor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.ModuleVisitor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.ModuleVisitor"
  }, {
    "name" : "classSimpleName",
    "value" : "ModuleVisitor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.jar.asm.Opcodes",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.Opcodes"
  }, {
    "name" : "classSimpleName",
    "value" : "Opcodes"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.RecordComponentVisitor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.RecordComponentVisitor"
  }, {
    "name" : "classSimpleName",
    "value" : "RecordComponentVisitor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.Type",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.Type"
  }, {
    "name" : "classSimpleName",
    "value" : "Type"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.TypePath",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.TypePath"
  }, {
    "name" : "classSimpleName",
    "value" : "TypePath"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.TypeReference",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.TypeReference"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeReference"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.commons.AnnotationRemapper",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons.AnnotationRemapper"
  }, {
    "name" : "classSimpleName",
    "value" : "AnnotationRemapper"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.commons.ClassRemapper",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons.ClassRemapper"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassRemapper"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.commons.FieldRemapper",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons.FieldRemapper"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldRemapper"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.commons.MethodRemapper",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons.MethodRemapper"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodRemapper"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.commons.ModuleHashesAttribute",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons.ModuleHashesAttribute"
  }, {
    "name" : "classSimpleName",
    "value" : "ModuleHashesAttribute"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.commons.ModuleRemapper",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons.ModuleRemapper"
  }, {
    "name" : "classSimpleName",
    "value" : "ModuleRemapper"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.commons.RecordComponentRemapper",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons.RecordComponentRemapper"
  }, {
    "name" : "classSimpleName",
    "value" : "RecordComponentRemapper"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.commons.Remapper",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons.Remapper"
  }, {
    "name" : "classSimpleName",
    "value" : "Remapper"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.commons.SignatureRemapper",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons.SignatureRemapper"
  }, {
    "name" : "classSimpleName",
    "value" : "SignatureRemapper"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.commons.SimpleRemapper",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.commons.SimpleRemapper"
  }, {
    "name" : "classSimpleName",
    "value" : "SimpleRemapper"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.signature.SignatureReader",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.signature"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.signature.SignatureReader"
  }, {
    "name" : "classSimpleName",
    "value" : "SignatureReader"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.signature.SignatureVisitor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.signature"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.signature.SignatureVisitor"
  }, {
    "name" : "classSimpleName",
    "value" : "SignatureVisitor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.jar.asm.signature.SignatureWriter",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.signature"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.jar.asm.signature.SignatureWriter"
  }, {
    "name" : "classSimpleName",
    "value" : "SignatureWriter"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.AccessibilityMatcher<T extends org.assertj.core.internal.bytebuddy.description.ByteCodeElement>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.AccessibilityMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "AccessibilityMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.AnnotationTargetMatcher<T extends org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.AnnotationTargetMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "AnnotationTargetMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.AnnotationTypeMatcher<T extends org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.AnnotationTypeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "AnnotationTypeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.ArrayTypeMatcher<T extends org.assertj.core.internal.bytebuddy.description.type.TypeDefinition>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.ArrayTypeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "ArrayTypeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.BooleanMatcher<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.BooleanMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "BooleanMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.CachingMatcher<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.CachingMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "CachingMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.ClassLoaderHierarchyMatcher<T extends java.lang.ClassLoader>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.ClassLoaderHierarchyMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassLoaderHierarchyMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.ClassLoaderParentMatcher<T extends java.lang.ClassLoader>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.ClassLoaderParentMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "ClassLoaderParentMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.CollectionElementMatcher<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.CollectionElementMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "CollectionElementMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.CollectionErasureMatcher<T extends java.lang.Iterable<? extends org.assertj.core.internal.bytebuddy.description.type.TypeDefinition>>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.CollectionErasureMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "CollectionErasureMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.CollectionItemMatcher<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.CollectionItemMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "CollectionItemMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.CollectionOneToOneMatcher<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.CollectionOneToOneMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "CollectionOneToOneMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.CollectionSizeMatcher<T extends java.lang.Iterable<?>>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.CollectionSizeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "CollectionSizeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.DeclaringAnnotationMatcher<T extends org.assertj.core.internal.bytebuddy.description.annotation.AnnotationSource>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.DeclaringAnnotationMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "DeclaringAnnotationMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.DeclaringFieldMatcher<T extends org.assertj.core.internal.bytebuddy.description.type.TypeDefinition>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.DeclaringFieldMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "DeclaringFieldMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.DeclaringMethodMatcher<T extends org.assertj.core.internal.bytebuddy.description.type.TypeDefinition>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.DeclaringMethodMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "DeclaringMethodMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.DeclaringTypeMatcher<T extends org.assertj.core.internal.bytebuddy.description.DeclaredByType>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.DeclaringTypeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "DeclaringTypeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.DefinedShapeMatcher<T extends org.assertj.core.internal.bytebuddy.description.ByteCodeElement.TypeDependant<S, ?>, S extends org.assertj.core.internal.bytebuddy.description.ByteCodeElement.TypeDependant<?, ?>>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.DefinedShapeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "DefinedShapeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.DescriptorMatcher<T extends org.assertj.core.internal.bytebuddy.description.NamedElement.WithDescriptor>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.DescriptorMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "DescriptorMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.matcher.ElementMatcher<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.ElementMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "ElementMatcher"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.ElementMatchers",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.ElementMatchers"
  }, {
    "name" : "classSimpleName",
    "value" : "ElementMatchers"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.EqualityMatcher<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.EqualityMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "EqualityMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.ErasureMatcher<T extends org.assertj.core.internal.bytebuddy.description.type.TypeDefinition>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.ErasureMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "ErasureMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.FailSafeMatcher<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.FailSafeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "FailSafeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.FieldTypeMatcher<T extends org.assertj.core.internal.bytebuddy.description.field.FieldDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.FieldTypeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "FieldTypeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.matcher.FilterableList<T, S extends org.assertj.core.internal.bytebuddy.matcher.FilterableList<T, S>>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.FilterableList"
  }, {
    "name" : "classSimpleName",
    "value" : "FilterableList"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.HasSuperClassMatcher<T extends org.assertj.core.internal.bytebuddy.description.type.TypeDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.HasSuperClassMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "HasSuperClassMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.HasSuperTypeMatcher<T extends org.assertj.core.internal.bytebuddy.description.type.TypeDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.HasSuperTypeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "HasSuperTypeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.InheritedAnnotationMatcher<T extends org.assertj.core.internal.bytebuddy.description.type.TypeDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.InheritedAnnotationMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "InheritedAnnotationMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.InstanceTypeMatcher<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.InstanceTypeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "InstanceTypeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.IsNamedMatcher<T extends org.assertj.core.internal.bytebuddy.description.NamedElement.WithOptionalName>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.IsNamedMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "IsNamedMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.matcher.LatentMatcher<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.LatentMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "LatentMatcher"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.MethodExceptionTypeMatcher<T extends org.assertj.core.internal.bytebuddy.description.method.MethodDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.MethodExceptionTypeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodExceptionTypeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.MethodOverrideMatcher<T extends org.assertj.core.internal.bytebuddy.description.method.MethodDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.MethodOverrideMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodOverrideMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.MethodParameterTypeMatcher<T extends org.assertj.core.internal.bytebuddy.description.method.ParameterDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.MethodParameterTypeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodParameterTypeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.MethodParameterTypesMatcher<T extends org.assertj.core.internal.bytebuddy.description.method.ParameterList<?>>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.MethodParameterTypesMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodParameterTypesMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.MethodParametersMatcher<T extends org.assertj.core.internal.bytebuddy.description.method.MethodDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.MethodParametersMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodParametersMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.MethodReturnTypeMatcher<T extends org.assertj.core.internal.bytebuddy.description.method.MethodDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.MethodReturnTypeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodReturnTypeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.MethodSortMatcher<T extends org.assertj.core.internal.bytebuddy.description.method.MethodDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.MethodSortMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "MethodSortMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.ModifierMatcher<T extends org.assertj.core.internal.bytebuddy.description.ModifierReviewable>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.ModifierMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "ModifierMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.NameMatcher<T extends org.assertj.core.internal.bytebuddy.description.NamedElement>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.NameMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "NameMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.NegatingMatcher<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.NegatingMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "NegatingMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.NullMatcher<T>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.NullMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "NullMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.PrimitiveTypeMatcher<T extends org.assertj.core.internal.bytebuddy.description.type.TypeDefinition>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.PrimitiveTypeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "PrimitiveTypeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.RecordMatcher<T extends org.assertj.core.internal.bytebuddy.description.type.TypeDefinition>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.RecordMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "RecordMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.SignatureTokenMatcher<T extends org.assertj.core.internal.bytebuddy.description.method.MethodDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.SignatureTokenMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "SignatureTokenMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.StringMatcher",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.StringMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "StringMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.StringSetMatcher",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.StringSetMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "StringSetMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.SubTypeMatcher<T extends org.assertj.core.internal.bytebuddy.description.type.TypeDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.SubTypeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "SubTypeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.SuperTypeMatcher<T extends org.assertj.core.internal.bytebuddy.description.type.TypeDescription>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.SuperTypeMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "SuperTypeMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.TypeSortMatcher<T extends org.assertj.core.internal.bytebuddy.description.type.TypeDefinition>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.TypeSortMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "TypeSortMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.matcher.VisibilityMatcher<T extends org.assertj.core.internal.bytebuddy.description.ByteCodeElement>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.matcher"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.matcher.VisibilityMatcher"
  }, {
    "name" : "classSimpleName",
    "value" : "VisibilityMatcher"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.pool.TypePool",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.pool"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.pool.TypePool"
  }, {
    "name" : "classSimpleName",
    "value" : "TypePool"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.utility.CompoundList",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.CompoundList"
  }, {
    "name" : "classSimpleName",
    "value" : "CompoundList"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "interface org.assertj.core.internal.bytebuddy.utility.JavaConstant",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.JavaConstant"
  }, {
    "name" : "classSimpleName",
    "value" : "JavaConstant"
  }, {
    "name" : "elementKind",
    "value" : "interface"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.utility.JavaModule",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.JavaModule"
  }, {
    "name" : "classSimpleName",
    "value" : "JavaModule"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "enum org.assertj.core.internal.bytebuddy.utility.JavaType",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.JavaType"
  }, {
    "name" : "classSimpleName",
    "value" : "JavaType"
  }, {
    "name" : "elementKind",
    "value" : "enum"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.utility.OpenedClassReader",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.OpenedClassReader"
  }, {
    "name" : "classSimpleName",
    "value" : "OpenedClassReader"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.utility.RandomString",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.RandomString"
  }, {
    "name" : "classSimpleName",
    "value" : "RandomString"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.utility.StreamDrainer",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.StreamDrainer"
  }, {
    "name" : "classSimpleName",
    "value" : "StreamDrainer"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.utility.privilege.GetSystemPropertyAction",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility.privilege"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.privilege.GetSystemPropertyAction"
  }, {
    "name" : "classSimpleName",
    "value" : "GetSystemPropertyAction"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.utility.privilege.SetAccessibleAction<T extends java.lang.reflect.AccessibleObject>",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility.privilege"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.privilege.SetAccessibleAction"
  }, {
    "name" : "classSimpleName",
    "value" : "SetAccessibleAction"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility.visitor"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.visitor.ExceptionTableSensitiveMethodVisitor"
  }, {
    "name" : "classSimpleName",
    "value" : "ExceptionTableSensitiveMethodVisitor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.utility.visitor.FramePaddingMethodVisitor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility.visitor"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.visitor.FramePaddingMethodVisitor"
  }, {
    "name" : "classSimpleName",
    "value" : "FramePaddingMethodVisitor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.utility.visitor.LineNumberPrependingMethodVisitor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility.visitor"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.visitor.LineNumberPrependingMethodVisitor"
  }, {
    "name" : "classSimpleName",
    "value" : "LineNumberPrependingMethodVisitor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.utility.visitor.LocalVariableAwareMethodVisitor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility.visitor"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.visitor.LocalVariableAwareMethodVisitor"
  }, {
    "name" : "classSimpleName",
    "value" : "LocalVariableAwareMethodVisitor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.utility.visitor.MetadataAwareClassVisitor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility.visitor"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.visitor.MetadataAwareClassVisitor"
  }, {
    "name" : "classSimpleName",
    "value" : "MetadataAwareClassVisitor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.class.removed",
  "old" : "class org.assertj.core.internal.bytebuddy.utility.visitor.StackAwareMethodVisitor",
  "new" : null,
  "name" : "class removed",
  "description" : "Class was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.internal.bytebuddy.utility.visitor"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.internal.bytebuddy.utility.visitor.StackAwareMethodVisitor"
  }, {
    "name" : "classSimpleName",
    "value" : "StackAwareMethodVisitor"
  }, {
    "name" : "elementKind",
    "value" : "class"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
}, {
  "code" : "java.method.removed",
  "old" : "method boolean org.assertj.core.util.introspection.Introspection::canIntrospectExtractBareNamePropertyMethods()",
  "new" : null,
  "name" : "method removed",
  "description" : "Method was removed.",
  "criticality" : "error",
  "justification" : null,
  "classification" : [ {
    "compatibility" : "BINARY",
    "severity" : "BREAKING"
  }, {
    "compatibility" : "SOURCE",
    "severity" : "BREAKING"
  } ],
  "attachments" : [ {
    "name" : "package",
    "value" : "org.assertj.core.util.introspection"
  }, {
    "name" : "classQualifiedName",
    "value" : "org.assertj.core.util.introspection.Introspection"
  }, {
    "name" : "classSimpleName",
    "value" : "Introspection"
  }, {
    "name" : "methodName",
    "value" : "canIntrospectExtractBareNamePropertyMethods"
  }, {
    "name" : "elementKind",
    "value" : "method"
  }, {
    "name" : "oldArchive",
    "value" : "assertj-core-3.18.1.jar"
  }, {
    "name" : "oldArchiveRole",
    "value" : "primary"
  } ]
} ]